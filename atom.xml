<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>冯天祥</title>
  <icon>https://www.gravatar.com/avatar/7b88dd1ba202c26590bceb6f94d57a85</icon>
  <subtitle>Hakuna Matata</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://kxbk100.github.io/"/>
  <updated>2018-09-01T17:46:43.856Z</updated>
  <id>https://kxbk100.github.io/</id>
  
  <author>
    <name>冯天祥</name>
    <email>kxbk100@foxmail.com</email>
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>前端开发笔记</title>
    <link href="https://kxbk100.github.io/2018/09/01/%E5%89%8D%E7%AB%AF%E5%BC%80%E5%8F%91%E7%AC%94%E8%AE%B0/"/>
    <id>https://kxbk100.github.io/2018/09/01/前端开发笔记/</id>
    <published>2018-09-01T15:18:43.000Z</published>
    <updated>2018-09-01T17:46:43.856Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Boostrap部分"><a href="#Boostrap部分" class="headerlink" title="Boostrap部分"></a><code>Boostrap</code>部分</h1><h2 id="Bootstrap引入"><a href="#Bootstrap引入" class="headerlink" title="Bootstrap引入"></a><code>Bootstrap</code>引入</h2><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"zh-CN"</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1.0"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"X-UA-Compatible"</span> <span class="attr">content</span>=<span class="string">"ie=edge"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">title</span>&gt;</span>贴吧后台管理页面<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">href</span>=<span class="string">"../css/bootstrap.min.css"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"../js/jquery.min.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"../js/bootstrap.min.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 页眉 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">header</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 导航条部分 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">nav</span>&gt;</span></span><br><span class="line">            ...</span><br><span class="line">        <span class="tag">&lt;/<span class="name">nav</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">header</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 主要内容 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"container"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"row"</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!-- 左侧目录 --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-xs-12 col-sm-2 col-md-2 col-lg-2"</span>&gt;</span></span><br><span class="line">                ...</span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!-- 右侧主要内容 --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-xs-12 col-sm-10 col-md-10 col-lg-10"</span>&gt;</span></span><br><span class="line">                ...</span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 页尾 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">footer</span>&gt;</span></span><br><span class="line">        ...</span><br><span class="line">    <span class="tag">&lt;/<span class="name">footer</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="制作一个页面的流程"><a href="#制作一个页面的流程" class="headerlink" title="制作一个页面的流程"></a>制作一个页面的流程</h2><ol><li>引入框架</li><li>实现页面布局代码</li><li>构建导航的整体架构</li><li>设计标题和导航链接</li><li>设计搜索框和通知系统</li><li>设置管理员登录系统</li><li>设计响应式导航</li><li>左侧边栏设计</li><li>页面主体设计</li></ol><h2 id="span1-2-3-4"><a href="#span1-2-3-4" class="headerlink" title="span1/2/3/4"></a><code>span1/2/3/4</code></h2><h2 id="ul-unstyled"><a href="#ul-unstyled" class="headerlink" title="ul.unstyled"></a><code>ul.unstyled</code></h2><h2 id="ul-inline"><a href="#ul-inline" class="headerlink" title="ul.inline"></a><code>ul.inline</code></h2><h2 id="响应式导航条"><a href="#响应式导航条" class="headerlink" title="响应式导航条"></a>响应式导航条</h2><p>##<code>Glyphicons &lt;span&gt;</code>或者<code>&lt;a&gt;</code></p><h2 id="动态模态对话框"><a href="#动态模态对话框" class="headerlink" title="动态模态对话框"></a>动态模态对话框</h2><h2 id="滚动监听"><a href="#滚动监听" class="headerlink" title="滚动监听"></a>滚动监听</h2><h2 id="工具提示框"><a href="#工具提示框" class="headerlink" title="工具提示框"></a>工具提示框</h2><h2 id="弹出框"><a href="#弹出框" class="headerlink" title="弹出框"></a>弹出框</h2><h2 id="状态按钮"><a href="#状态按钮" class="headerlink" title="状态按钮"></a>状态按钮</h2><ul><li>加载中…</li></ul><h2 id="折叠"><a href="#折叠" class="headerlink" title="折叠"></a>折叠</h2><h2 id="幻灯"><a href="#幻灯" class="headerlink" title="幻灯"></a>幻灯</h2><h2 id="视频响应式"><a href="#视频响应式" class="headerlink" title="视频响应式"></a>视频响应式</h2><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"embed-responsive embed-responsive-16by9"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">iframe</span> <span class="attr">class</span>=<span class="string">"embed-responsive-item"</span> <span class="attr">src</span>=<span class="string">"iqiyi.catilog2015/24551221.swf"</span>&gt;</span><span class="tag">&lt;/<span class="name">iframe</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="扁平化风格页面"><a href="#扁平化风格页面" class="headerlink" title="扁平化风格页面"></a>扁平化风格页面</h2><h2 id="各种风格的按钮"><a href="#各种风格的按钮" class="headerlink" title="各种风格的按钮"></a>各种风格的按钮</h2><h2 id="jQuery插件DataTables响应式表格"><a href="#jQuery插件DataTables响应式表格" class="headerlink" title="jQuery插件DataTables响应式表格"></a><code>jQuery</code>插件<code>DataTables</code>响应式表格</h2><ul><li>支持及时分页、搜索、排序</li><li><code>Json</code>、数组、<code>Ajax</code></li></ul><h2 id="可视化图表ECharts"><a href="#可视化图表ECharts" class="headerlink" title="可视化图表ECharts"></a>可视化图表<code>ECharts</code></h2><h2 id="jQuery-UI-Bootstrap工具"><a href="#jQuery-UI-Bootstrap工具" class="headerlink" title="jQuery UI Bootstrap工具"></a><code>jQuery UI Bootstrap</code>工具</h2><hr><h1 id="jQuery"><a href="#jQuery" class="headerlink" title="jQuery"></a><code>jQuery</code></h1><h2 id="基本选择器"><a href="#基本选择器" class="headerlink" title="基本选择器"></a>基本选择器</h2><ul><li><code>$(&quot;#id&quot;)</code>：id选择器，返回单个元素</li><li><code>$(&quot;.class&quot;)</code>：class选择器，返回<strong>集合</strong>元素</li><li><code>$(&quot;element&quot;)</code>：选定指定的元素名匹配的元素，返回<strong>集合</strong>元素</li><li><code>$(&quot;*&quot;)</code>：通配符选择器，选择所有元素，返回<strong>集合</strong>元素</li><li><code>$(&quot;selector1,selector2&quot;)</code>：选择所有选择器匹配的元素，返回<strong>集合</strong>元素</li></ul><h2 id="层次选择器"><a href="#层次选择器" class="headerlink" title="层次选择器"></a>层次选择器</h2><ul><li><code>$(&quot;div span&quot;)</code>：选择<code>&lt;div&gt;</code>里的的<strong>所有</strong><code>&lt;span&gt;</code>后代元素，返回<strong>集合</strong>元素</li><li><p><code>$(&quot;div&gt;span&quot;)</code>：选择<code>&lt;div&gt;</code>下的<code>&lt;span&gt;</code>子元素，只寻找一级，<code>&lt;span&gt;</code>中的<code>&lt;span&gt;</code>不会找到，而上述则全部找到</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">span</span> <span class="attr">id</span>=<span class="string">"span1"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">span</span> <span class="attr">id</span>=<span class="string">"span2"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">span</span> <span class="attr">id</span>=<span class="string">"span3"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- div span 选取的结果是&#123;span1,span2,span3&#125; --&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- div &gt; span 选取的结果是&#123;span1,span2&#125; --&gt;</span></span><br></pre></td></tr></table></figure></li><li><p><code>$(&quot;#one+div&quot;)</code>：获取<strong>紧接</strong>在<code>one</code>后面的<strong>一个</strong>同辈<code>div</code>元素，等同于<code>$(#one).next(&quot;div&quot;)</code></p></li><li><code>$(#one).prev(&quot;div&quot;)</code>获取<strong>紧接</strong>在<code>one</code>前面的<strong>一个</strong>同辈<code>div</code>元素</li><li><code>$(&quot;#one~div&quot;)</code>：获取<code>one</code>后面的<strong>所有</strong>同辈<code>div</code>元素，等同于<code>$(#one).nextAll(&quot;div&quot;)</code></li><li><code>$(#one).siblings(&quot;div&quot;)</code>：获取<code>one</code>的元素的所有<code>div</code>同辈元素<strong>（不管前后）</strong><br>所以 获取元素范围大小顺序依次为：</li><li><code>$(#one).siblings(&quot;div&quot;)&gt;$(&quot;#one~div&quot;)&gt;$(&quot;#one +div&quot;)</code></li><li><code>$(#one).siblings(&quot;div&quot;)&gt;$(#one).nextAll(&quot;div&quot;)&gt;$(#one).next(&quot;div&quot;)</code></li></ul><h2 id="基本过滤选择器"><a href="#基本过滤选择器" class="headerlink" title="基本过滤选择器"></a>基本过滤选择器</h2><ul><li><code>:first</code>：选取第一个元素，返回单个元素</li><li><code>:last</code>：选取最后一个元素，返回单个元素</li><li><code>:not(selector)</code>：去除所有给定选择器所匹配的元素，返回<strong>集合</strong>元素</li><li><code>:even</code>：选取索引为<strong>偶数</strong>的所有元素，索引号从<strong>0</strong>开始，返回<strong>集合</strong>元素</li><li><code>:odd</code>：选取索引为<strong>奇数</strong>的所有元素，索引号从<strong>0</strong>开始，返回<strong>集合</strong>元素</li><li><code>:eq(index)</code>：选取索引等于<code>index</code>的元素，<code>index</code>从<strong>0</strong>开始返回单个元素</li><li><code>:gt(index)</code>：选取索引号大于<code>index</code>的所有元素,返回<strong>集合</strong>元素</li><li><code>:lt(index)</code>：选取索引小于<code>index</code>的所有元素，返回<strong>集合</strong>元素</li><li><code>:header</code>：选取所有的标题元素，返回<strong>集合</strong>元素</li><li><code>:animated</code>：选取正在执行动画的元素，返回<strong>集合</strong>元素</li><li><code>:focus</code>：选取当前获取焦点的元素，返回<strong>集合</strong>元素</li></ul><h2 id="内容过滤选择器"><a href="#内容过滤选择器" class="headerlink" title="内容过滤选择器"></a>内容过滤选择器</h2><ul><li><code>:contains(text)</code>：选取含有文本内容为<code>text</code>的元素，返回<strong>集合</strong>元素</li><li><code>:empty</code>：选取没有子节点或者文本的空元素，返回<strong>集合</strong>元素</li><li><code>:has(selector)</code>：选取含有选择器所匹配的元素的元素，返回<strong>集合</strong>元素</li><li><code>:parent</code>：选取含有子节点或者文本的元素，返回<strong>集合</strong>元素</li></ul><h2 id="可见性过滤选择器"><a href="#可见性过滤选择器" class="headerlink" title="可见性过滤选择器"></a>可见性过滤选择器</h2><ul><li><code>:hidden</code>：选取所有不可见的元素，返回<strong>集合</strong>元素</li><li><code>:visible</code>：选取所有可见的元素，返回<strong>集合</strong>元素</li></ul><h2 id="属性过滤选择器"><a href="#属性过滤选择器" class="headerlink" title="属性过滤选择器"></a>属性过滤选择器</h2><ul><li><code>[attribute]</code>：选取含有此属性的元素，返回<strong>集合</strong>元素</li><li><code>:[attribute=value]</code>：选取属性的值为<code>value</code>的元素，返回<strong>集合</strong>元素</li><li><code>:[attribute!=value]</code>：选取属性的值不为<code>value</code>的元素，返回<strong>集合</strong>元素</li><li><code>:[attribute^=value]</code>：选取属性的值以<code>value</code>开始的元素，返回<strong>集合</strong>元素</li><li><code>:[attribute$=value]</code>：选取属性的值以<code>value</code>结尾的元素，返回<strong>集合</strong>元素</li><li><code>:[attribute*=value]</code>：选取属性的值含有<code>value</code>的元素，返回<strong>集合</strong>元素</li><li><code>:[attribute|=value]</code>：选取属性的值等于<code>value</code>或者是以<code>value</code>为前缀（即<code>value-</code>，<code>value</code>后面跟一个连字符）的元素，返回<strong>集合</strong>元素</li><li><code>:[attribute~=value]</code>：选取属性的值以空格分隔的值中含有<code>value</code>的元素，返回<strong>集合</strong>元素</li><li><code>:[attribute1][attribute1]...[attributeN1]</code>：用多个属性选择器合并成一个复合属性选择器，返回<strong>集合</strong>元素</li></ul><h2 id="子元素过滤选择器"><a href="#子元素过滤选择器" class="headerlink" title="子元素过滤选择器"></a>子元素过滤选择器</h2><ul><li><code>:nth-child(index/even/odd)</code>：选取父元素下的第<code>index</code>个子元素，<code>index</code>值从<strong>1</strong>开始，或者选取奇偶子元素,返回<strong>集合</strong>元素</li><li><code>:first-child</code>：选取父元素下的第一个元素，返回<strong>集合</strong>元素</li><li><code>:last-child</code>：选取父元素下的最后一个子元素，返回<strong>集合</strong>元素</li><li><code>:only-child</code>：如果元素是父元素的唯一的元素，则选择，否则，不选择，返回<strong>集合</strong>元素</li><li><code>:nth-child()</code>还可以通过数学表达式选取一组特定的元素，如:<code>:nth-child(3n)</code>：选取父元素下所有<code>3</code>的倍数的子元素（<code>n</code>从<code>1</code>开始，即选取第<code>3，6，9，...</code>个元素）</li></ul><h2 id="表单选择器"><a href="#表单选择器" class="headerlink" title="表单选择器"></a>表单选择器</h2><ul><li><code>:input</code>：选取所有的<code>input、textarea、select、button</code>元素，返回<strong>集合</strong>元素</li><li><code>:text</code>：选取所有单行文本框，返回<strong>集合</strong>元素</li><li><code>:password</code>：选取所有的密码框，返回<strong>集合</strong>元素</li><li><code>:radio</code>：选取所有的单选框，返回<strong>集合</strong>元素</li><li><code>:checkbox</code>：选取所有的多选框，返回<strong>集合</strong>元素</li><li><code>:submit</code>：选取所有提交按钮，返回<strong>集合</strong>元素</li><li><code>:image</code>：选取所有的图像按钮，返回<strong>集合</strong>元素</li><li><code>:reset</code>：选取所有的重置按钮，返回<strong>集合</strong>元素</li><li><code>:button</code>：选取所有的按钮，返回<strong>集合</strong>元素</li><li><code>:file</code>：选取所有的上传域，返回<strong>集合</strong>元素</li></ul><h2 id="表单对象属性过滤选择器"><a href="#表单对象属性过滤选择器" class="headerlink" title="表单对象属性过滤选择器"></a>表单对象属性过滤选择器</h2><ul><li><code>:enabled</code>：选取所有可用元素，返回<strong>集合</strong>元素</li><li><code>:disabled</code>：选取所有不可用元素，返回<strong>集合</strong>元素</li><li><code>:checked</code>：选取所有被选中的元素（<strong>单选框和多选框</strong>），返回<strong>集合</strong>元素</li><li><code>:selected</code>：选取所有被选中的元素（<strong>下拉列表</strong>），返回<strong>集合</strong>元素</li></ul><h2 id="查找、设置、删除属性"><a href="#查找、设置、删除属性" class="headerlink" title="查找、设置、删除属性"></a>查找、设置、删除属性</h2><ul><li><p><code>attr()</code>方法：接受一个或两个参数，一个参数是获取属性值，两个参数是设置属性,需要设置多个属性时，<code>attr</code>方法的参数可以是一个由属性和属性值组成的json数据格式</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">$(<span class="string">"div"</span>).attr(<span class="string">"background"</span>);<span class="comment">//获取属性值</span></span><br><span class="line">$(<span class="string">"div"</span>).attr(<span class="string">"background"</span>,<span class="string">"blue"</span>);<span class="comment">//设置属性值</span></span><br><span class="line">$(<span class="string">"div"</span>).attr(&#123;<span class="string">"background"</span>:<span class="string">"blue"</span>,<span class="string">"height"</span>:<span class="string">"200px"</span>&#125;);<span class="comment">//设置多个属性值</span></span><br></pre></td></tr></table></figure></li><li><p><code>css()</code>方法：接受一个或两个参数，当一个参数是属性名时，获取属性值，当两个参数时，设置属性第一个参数为属性名，第二个参数为属性值，需要设置多个属性时，<code>css</code>方法的参数可以是一个由属性和属性值组成的json数据格式</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">$(<span class="string">"div"</span>).css(<span class="string">"background"</span>);<span class="comment">//获取属性值</span></span><br><span class="line">$(<span class="string">"div"</span>).css(<span class="string">"background"</span>,<span class="string">"blue"</span>);<span class="comment">//设置属性值</span></span><br><span class="line">$(<span class="string">"div"</span>).css(&#123;<span class="string">"background"</span>:<span class="string">"blue"</span>,<span class="string">"height"</span>:<span class="string">"200px"</span>&#125;);<span class="comment">//设置多个属性值</span></span><br></pre></td></tr></table></figure></li></ul><blockquote><p>另外<code>width()</code>方法和<code>height()</code>方法可以直接获取宽度和高度</p></blockquote><ul><li><p><code>addClass()</code>：为元素添加<code>class</code>值，可批量添加属性与值</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">$(<span class="string">"div"</span>).addClass(<span class="string">"myclass"</span>);</span><br></pre></td></tr></table></figure></li><li><p><code>removeAttr()</code>：删除指定的属性</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">$(<span class="string">"div"</span>).removeAttr(<span class="string">"background"</span>);</span><br></pre></td></tr></table></figure></li><li><p><code>removeClass()</code>：有参数时，删除指定的<code>class</code>值，没有参数时，删除全部的<code>class</code>值</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">$(<span class="string">"div"</span>).removeClass(<span class="string">"myclass"</span>);</span><br><span class="line">$(<span class="string">"div"</span>).removeClass();</span><br></pre></td></tr></table></figure></li><li><p><code>hasClass()</code>：判断匹配的元素是否有某个<code>class</code>值，有则返回<code>true</code>，没有则返回<code>false</code></p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">$(<span class="string">"div"</span>).hasClass(<span class="string">"myclass"</span>);</span><br></pre></td></tr></table></figure></li></ul><h2 id="创建元素、文本、属性节点"><a href="#创建元素、文本、属性节点" class="headerlink" title="创建元素、文本、属性节点"></a>创建元素、文本、属性节点</h2><ul><li>均可以直接将元素、文本、属性添加到<code>$()</code>方法中，如：<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> p=$(<span class="string">"&lt;p title='mytitle'&gt;假装是标题&lt;/p&gt;"</span>)</span><br></pre></td></tr></table></figure></li></ul><h2 id="插入节点"><a href="#插入节点" class="headerlink" title="插入节点"></a>插入节点</h2><ul><li><code>append()</code>：向元素内部添加节点，如：<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>我是内容<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">$(<span class="string">"p"</span>).append(<span class="string">"&lt;span&gt;我是追加的内容&lt;/span&gt;"</span>);</span><br></pre></td></tr></table></figure><p>结果：<br><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>我是内容<span class="tag">&lt;<span class="name">span</span>&gt;</span>我是追加的内容<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure></p><ul><li><code>appendTo()</code>：将元素添加到指定元素内部，即将<code>append</code>方法中的链式操作的成员互换位置<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>我是内容<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">$(<span class="string">"&lt;span&gt;我是追加的内容&lt;/span&gt;"</span>).appendTo(<span class="string">"p"</span>);</span><br></pre></td></tr></table></figure><p>结果：<br><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>我是内容<span class="tag">&lt;<span class="name">span</span>&gt;</span>我是追加的内容<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure></p><ul><li><code>prepend()</code>：向元素内部前置内容<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>我是内容<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">$(<span class="string">"p"</span>).prepend(<span class="string">"&lt;span&gt;我是追加的内容&lt;/span&gt;"</span>);</span><br></pre></td></tr></table></figure><p>结果：<br><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">span</span>&gt;</span>我是追加的内容<span class="tag">&lt;/<span class="name">span</span>&gt;</span>我是内容<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure></p><ul><li><code>prependTo()</code>：将节点前置到指定元素中，即将<code>prepend</code>方法中的链式操作中的成员互换位置<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>我是内容<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">$(<span class="string">"&lt;span&gt;我是追加的内容&lt;/span&gt;"</span>).prependTo(<span class="string">"p"</span>);</span><br></pre></td></tr></table></figure><p>结果：<br><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">span</span>&gt;</span>我是追加的内容<span class="tag">&lt;/<span class="name">span</span>&gt;</span>我是内容<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure></p><ul><li><code>after()</code>：在每个元素节点后添加节点<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>我是内容<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">$(<span class="string">"p"</span>).after(<span class="string">"&lt;span&gt;我是追加的内容&lt;/span&gt;"</span>);</span><br></pre></td></tr></table></figure><p>结果：<br><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>我是内容<span class="tag">&lt;/<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">span</span>&gt;</span>我是追加的内容<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br></pre></td></tr></table></figure></p><ul><li><code>insertAfter()</code>：讲节点插入到指定节点之后，即将<code>after</code>方法中的链式操作中的成员互换位置<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>我是内容<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">$(<span class="string">"&lt;span&gt;我是追加的内容&lt;/span&gt;"</span>).insertAfter(<span class="string">"p"</span>);</span><br></pre></td></tr></table></figure><p>结果：<br><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>我是内容<span class="tag">&lt;/<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">span</span>&gt;</span>我是追加的内容<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br></pre></td></tr></table></figure></p><ul><li><code>before()</code>：再节点前面插入节点<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>我是内容<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">$(<span class="string">"p"</span>).before(<span class="string">"&lt;span&gt;我是追加的内容&lt;/span&gt;"</span>);</span><br></pre></td></tr></table></figure><p>结果：<br><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">span</span>&gt;</span>我是追加的内容<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;<span class="name">p</span>&gt;</span>我是内容<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure></p><ul><li><code>insertBefore()</code>：将节点插入到指定元素前面<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>我是内容<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">$(<span class="string">"&lt;span&gt;我是追加的内容&lt;/span&gt;"</span>).insertBefore(<span class="string">"p"</span>);</span><br></pre></td></tr></table></figure><p>结果：<br><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">span</span>&gt;</span>我是追加的内容<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;<span class="name">p</span>&gt;</span>我是内容<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure></p><h2 id="删除节点"><a href="#删除节点" class="headerlink" title="删除节点"></a>删除节点</h2><ul><li><p><code>remove()</code>：从<code>DOM</code>中删除所有匹配的元素，同时该节点所包含的所有后代节点将同时被删除，因为返回值是删除节点的引用，因此可以在以后继续使用这些元素，但是此时这些节点所绑定的事件也会删除，如：</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> $li=$(<span class="string">"ul li:eq(1)"</span>).remove();<span class="comment">//删除节点</span></span><br><span class="line">$li.appendTo(<span class="string">"ul"</span>);<span class="comment">//将节点添加回去</span></span><br></pre></td></tr></table></figure></li><li><p><code>detach()</code>：和<code>remove()</code>几乎一样，不同的是<code>detach</code>方法不会删除节点所绑定的事件和附加的数据</p></li><li><p><code>empty()</code>：清空所匹配的节点</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">$(<span class="string">"ul li:eq(1)"</span>).empty();<span class="comment">//此时第一个li标签内无任何内容及节点了</span></span><br></pre></td></tr></table></figure></li></ul><h2 id="复制节点"><a href="#复制节点" class="headerlink" title="复制节点"></a>复制节点</h2><ul><li><code>clone()</code>：复制节点，可以有参数<code>true</code>，当有<code>true</code>参数时，将同时<strong>复制节点所绑定的事件</strong>，如：<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">$(<span class="string">"ul li:eq(1)"</span>).clone(<span class="literal">true</span>).apppendTo(<span class="string">"ul"</span>);</span><br></pre></td></tr></table></figure></li></ul><h2 id="替换节点"><a href="#替换节点" class="headerlink" title="替换节点"></a>替换节点</h2><ul><li><p><code>replaceWith()</code>：将匹配的节点替换成指定的节点</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">$(<span class="string">"p"</span>).replaceWith(<span class="string">"&lt;ul&gt;&lt;li&gt;&lt;/li&gt;&lt;/ul&gt;"</span>);</span><br></pre></td></tr></table></figure></li><li><p><code>replaceAll()</code>：用指定的节点替换相应节点，即将<code>replaceWith</code>方法中的链式操作中的成员互换位置</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">$(<span class="string">"&lt;ul&gt;&lt;li&gt;&lt;/li&gt;&lt;/ul&gt;"</span>).replaceAll(<span class="string">"p"</span>);</span><br></pre></td></tr></table></figure></li></ul><h2 id="包裹节点"><a href="#包裹节点" class="headerlink" title="包裹节点"></a>包裹节点</h2><ul><li><code>wrap()</code>：将匹配的节点用指定的节点单独包裹起来<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>我是内容<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>我是另一个内容<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">$(<span class="string">"p"</span>).wrap(<span class="string">"&lt;span&gt;&lt;/span&gt;"</span>);</span><br></pre></td></tr></table></figure><p>结果：<br><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">span</span>&gt;</span><span class="tag">&lt;<span class="name">p</span>&gt;</span>我是内容<span class="tag">&lt;/<span class="name">p</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span>&gt;</span><span class="tag">&lt;<span class="name">p</span>&gt;</span>我是另一个内容<span class="tag">&lt;/<span class="name">p</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br></pre></td></tr></table></figure></p><ul><li><code>wrapAll()</code>：将匹配的节点用指定的节点全部包裹起来<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>我是内容<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>我是另一个内容<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">$(<span class="string">"&lt;span&gt;&lt;/span&gt;"</span>).wrapAll(<span class="string">"p"</span>);</span><br></pre></td></tr></table></figure><p>结果：<br><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">span</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">p</span>&gt;</span>我是内容<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">p</span>&gt;</span>我是另一个内容<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br></pre></td></tr></table></figure></p><ul><li><code>wrapInner()</code>：将匹配的节点<strong>内部的节点</strong>或者<strong>文本内容</strong>用指定的节点包裹起来<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>我是内容<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">$(<span class="string">"p"</span>).wrapInner(<span class="string">"&lt;span&gt;&lt;/span&gt;"</span>);</span><br></pre></td></tr></table></figure><p>结果：<br><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">span</span>&gt;</span>我是内容<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure></p><h2 id="设置、获取文本、HTML和值"><a href="#设置、获取文本、HTML和值" class="headerlink" title="设置、获取文本、HTML和值"></a>设置、获取文本、<code>HTML</code>和值</h2><ul><li><p><code>html()</code>：类似于原生<code>JavaScript</code>中的<code>innerHTML</code>属性，不含参数时是获取，包含元素节点和文本节点，当内有字符串参数时，是重新设置节点内容和文本内容</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">$(<span class="string">"p"</span>).html();</span><br></pre></td></tr></table></figure></li><li><p><code>text()</code>：类似于原生<code>JavaScript</code>中的<code>innerText</code>属性，不含参数时是获取文本节点，当内有字符串参数时，是重新设置文本内容</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">$(<span class="string">"p"</span>).text(<span class="string">"我是内容"</span>);</span><br></pre></td></tr></table></figure></li><li><p><code>val()</code>：类似于原生<code>JavaScript</code>中的<code>value</code>属性，可以用来获取和设置元素的值，无论是元素或者文本框，下拉列表或者单选框，<strong>如果元素是多选，则返回一个包含所有选择的值的数组</strong></p></li></ul><h2 id="遍历节点"><a href="#遍历节点" class="headerlink" title="遍历节点"></a>遍历节点</h2><ul><li><code>children()</code>：获取所有的子元素集合，返回一个<strong>数组</strong>，只考虑<strong>直接子元素</strong>，不考虑其他后代元素<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">p</span>&gt;</span>我是内容</span><br><span class="line">    <span class="tag">&lt;<span class="name">span</span>&gt;</span>我是内嵌的内容<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">p</span>&gt;</span>我是另一个内容<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> $div = $(<span class="string">"div"</span>).children();</span><br><span class="line">$div.length;<span class="comment">//返回2，不是3，只包含直接子元素，不包含span</span></span><br></pre></td></tr></table></figure><ul><li><code>next()</code>：获取匹配元素后面紧邻的<strong>一个</strong>同辈元素，效果类似于<code>$(&quot;prev+next&quot;)</code><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">p</span>&gt;</span>我是内容<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">h1</span>&gt;</span>我是另一个内容<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> $h1=$(<span class="string">"p"</span>).next();<span class="comment">//返回h1元素节点</span></span><br></pre></td></tr></table></figure><ul><li><code>prev()</code>：获取匹配元素前面紧邻的<strong>一个</strong>同辈元素<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">h1</span>&gt;</span>我是另一个内容<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">p</span>&gt;</span>我是内容<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> $h1=$(<span class="string">"p"</span>).prev();<span class="comment">//返回h1元素节点</span></span><br></pre></td></tr></table></figure><ul><li><code>siblings()</code>：获取匹配元素的前后<strong>所有</strong>的同辈元素<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">h1</span>&gt;</span>我是另一个内容<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">p</span>&gt;</span>我是内容<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">ul</span>&gt;</span>我是列表<span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> $h1=$(<span class="string">"p"</span>).next();<span class="comment">//返回h1和ul元素节点集合</span></span><br></pre></td></tr></table></figure><ul><li><code>closest()</code>：获取最近的符合匹配的一个父元素<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"div2"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>我是内容<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> $div=$(<span class="string">"p"</span>).closest();<span class="comment">//返回class为div2的div元素</span></span><br></pre></td></tr></table></figure><ul><li><code>parent()</code>：获取一个父元素<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"div2"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>我是内容<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> $div=$(<span class="string">"p"</span>).parent();<span class="comment">//返回class为div2的div元素</span></span><br></pre></td></tr></table></figure><ul><li><code>parents()</code>：获取所有匹配的一个祖先元素<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"div2"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>我是内容<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> $div=$(<span class="string">"p"</span>).parents();<span class="comment">//返回两个div元素组成的数组</span></span><br></pre></td></tr></table></figure><h2 id="元素定位"><a href="#元素定位" class="headerlink" title="元素定位"></a>元素定位</h2><ul><li><code>offset()</code>：获取元素在当前视窗的相对偏移，返回一个对象，对象包含<code>top</code>和<code>left</code>两个属性<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span>我是内容<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> $offset=$(<span class="string">"div"</span>).offset();</span><br><span class="line"><span class="keyword">var</span> left=$offset.left;</span><br><span class="line"><span class="keyword">var</span> top=$offset.top;</span><br></pre></td></tr></table></figure><ul><li><code>position()</code>：获取元素相对于最近的一个<code>position</code>样式属性设置为<code>relative</code>或者<code>absolute</code>的祖父节点的相对偏移，返回一个对象，对象包含<code>top</code>和<code>left</code>两个属性<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">"position:relative"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;<span class="name">p</span>&gt;</span>我是内容<span class="tag">&lt;/<span class="name">p</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> $position=$(<span class="string">"p"</span>).position();</span><br><span class="line"><span class="keyword">var</span> left=$position.left;</span><br><span class="line"><span class="keyword">var</span> top=$position.top;</span><br></pre></td></tr></table></figure><ul><li><p><code>scrollTop()</code>：获取元素的滚动条距离顶端的距离</p></li><li><p><code>scrollLeft()</code>：获取元素的滚动条距离左侧的距离</p></li></ul><h2 id="加载DOM"><a href="#加载DOM" class="headerlink" title="加载DOM"></a>加载<code>DOM</code></h2><ul><li><code>$(document).ready()</code>：和原生的<code>JavaScript</code>的<code>window.onload()</code>方法有类似的功能，<code>window.onload()</code>方法是在网页中所有的元素（包括元素的所有关联文件）完全加载到浏览器后才执行，而<code>$(docuemnt).ready()</code>在<code>DOM</code>完全就绪时就可以被调用，此时并不意味着这些关联文件都已经下载完毕；另外，<code>$(document).ready()</code>可多次使用，而<code>window.onload()</code>只能用一次，多次使用时会出现覆盖的现象，另外其可以简写成<code>$().ready()</code>;</li></ul><h2 id="事件绑定"><a href="#事件绑定" class="headerlink" title="事件绑定"></a>事件绑定</h2><ul><li><p><code>bind()</code>：可以有三个参数，第一个参数是事件类型，第二个参数可选，作为<code>event.data</code>属性值传给事件对象的额外数据对象，第三个参数是处理函数</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">bind(type data fn);</span><br></pre></td></tr></table></figure></li><li><p><code>on()</code>函数来绑定事件 </p><blockquote><p>常见的事件类型：<br><code>blur</code>、<code>focus</code>、<code>load</code>、<code>resize</code>、<code>scroll</code>、<code>unload</code>、<code>click</code>、<code>dbclick</code>、<code>mousedown</code>、<code>mouseup</code>、<code>mouseover</code>、<code>mousemove</code>、<code>mouseout</code>、<code>mouseenter</code>、<code>mouseleave</code>、<code>change</code>、<code>select</code>、<code>submit</code>、<code>keydown</code>、<code>keyup</code>、<code>error</code><br>另外，像<code>click</code>、<code>mouseover</code>、<code>mouseout</code>这类常用的事件，可以简写，如下：</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">$(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">  $(<span class="string">"h1"</span>).mouseover(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    $(<span class="keyword">this</span>).next().show()</span><br><span class="line">  &#125;).mouseout(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    $(<span class="keyword">this</span>).next().hide()</span><br><span class="line">  &#125;)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure></blockquote></li></ul><h2 id="合成事件"><a href="#合成事件" class="headerlink" title="合成事件"></a>合成事件</h2><p><code>jQuery</code>中有两个合成事件——<code>hover()</code>和<code>toggle()</code>方法</p><ul><li><p><code>hover()</code>：用于模拟光标悬停事件，当光标移动到元素时，会触发第一个函数，离开时触发第二个函数，语法</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">hover(enter,leave);</span><br></pre></td></tr></table></figure></li><li><p><code>toggle()</code>：用于模拟鼠标连续点击事件，语法</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">toggle(fn1,fn2,...,fn);</span><br></pre></td></tr></table></figure></li></ul><h2 id="阻止事件之外的额外问题"><a href="#阻止事件之外的额外问题" class="headerlink" title="阻止事件之外的额外问题"></a>阻止事件之外的额外问题</h2><ul><li><p>停止事件冒泡：用<code>stopPropagation()</code>方法来停止事件冒泡，如：</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">$(<span class="string">"span"</span>).bind(<span class="string">"click"</span>,<span class="function"><span class="keyword">function</span>(<span class="params">event</span>)</span>&#123;</span><br><span class="line">  <span class="comment">//事件处理程序</span></span><br><span class="line">  event.stopPropagation()</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure></li><li><p>阻止默认行为：用<code>preventDafault()</code>方法来阻止默认行为，当然也可以用原生<code>JavaScript</code>中的<code>return false</code>，如：</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">$(<span class="string">"a"</span>).bind(<span class="string">"click"</span>,<span class="function"><span class="keyword">function</span>(<span class="params">event</span>)</span>&#123;</span><br><span class="line">  <span class="comment">//事件处理程序</span></span><br><span class="line">  event.preventDafault();</span><br><span class="line">  <span class="comment">//或者return false;</span></span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure></li><li><p>事件捕获：事件捕获与事件冒泡是刚好两个相反的过程，<code>jQuery</code>不支持事件捕获。</p></li></ul><h2 id="事件对象"><a href="#事件对象" class="headerlink" title="事件对象"></a>事件对象</h2><ul><li><p>添加事件对象非常简单，只需要为函数添加一个参数，一般会用<code>event</code></p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">$(<span class="string">"a"</span>).bind(<span class="string">"click"</span>,<span class="function"><span class="keyword">function</span>(<span class="params">event</span>)</span>&#123;</span><br><span class="line">  <span class="comment">//事件处理程序</span></span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure></li><li><p><code>event.type</code>：获取事件的类型</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">$(<span class="string">"a"</span>).bind(<span class="string">"click"</span>,<span class="function"><span class="keyword">function</span>(<span class="params">event</span>)</span>&#123;</span><br><span class="line">  alert(event.type);</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure></li><li><p><code>event.target</code>：获取触发事件的对象元素</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">$(<span class="string">"a"</span>).bind(<span class="string">"click"</span>,<span class="function"><span class="keyword">function</span>(<span class="params">event</span>)</span>&#123;</span><br><span class="line">  alert(event.target.href);</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure></li><li><p><code>event.pageX</code>和<code>event.pageY</code>：获取光标相对于页面的<code>x</code>坐标和<code>y</code>坐标</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">$(<span class="string">"a"</span>).bind(<span class="string">"click"</span>,<span class="function"><span class="keyword">function</span>(<span class="params">event</span>)</span>&#123;</span><br><span class="line">  alert(event.pageX);</span><br><span class="line">  alert(event.pageY);</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure></li><li><p><code>event.which</code>：在鼠标单击时获取到鼠标的左、中、右键；在键盘事件中获取到键盘的按键</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">$(<span class="string">"a"</span>).mousedown(<span class="function"><span class="keyword">function</span>(<span class="params">event</span>)</span>&#123;</span><br><span class="line">  alert(event.which);</span><br><span class="line">&#125;)</span><br><span class="line">$(<span class="string">"a"</span>).keyup(<span class="function"><span class="keyword">function</span>(<span class="params">event</span>)</span>&#123;</span><br><span class="line">  alert(event.which);</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure></li><li><p><code>event.metaKey</code>：在键盘事件中获取<code>ctrl</code>按键</p></li></ul><h2 id="移除事件"><a href="#移除事件" class="headerlink" title="移除事件"></a>移除事件</h2><ul><li><p><code>unbind()</code>：没有参数时，删除所有的绑定事件，可以有两个参数，第一个参数是事件类型，第二个参数是将要移除的函数，提供了事件类型，则只删除该事件类型，提供了事件处理函数，则只有这个事件处理函数会被删除，语法结构如下</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">unbind(type,data)</span><br><span class="line">$(<span class="string">"a"</span>).click(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">  $(<span class="string">"#btn"</span>).unbind(<span class="string">"click"</span>,fn1);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>另外，对于只需要触发一次随后就立即解除绑定的情况，<code>jQuery</code>提供了<code>one()</code>方法，这个方法可以为元素绑定处理函数，当函数触发一次后，立即被删除</p></li></ul><h2 id="事件的其他用法"><a href="#事件的其他用法" class="headerlink" title="事件的其他用法"></a>事件的其他用法</h2><ul><li>模拟操作：<code>trigger()</code>：此方法可以模拟操作，例如<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">$(<span class="string">"#btn"</span>).triggle(<span class="string">"click"</span>)；</span><br></pre></td></tr></table></figure></li></ul><blockquote><p>这段代码可以触发<code>id</code>为<code>btn</code>的按钮的<code>click</code>事件，<code>trigger()</code>方法会触发浏览器的默认事件，如果不想执行浏览器的默认操作，可以使用<code>jQuery</code>中的另一个方法<code>triggerHandler()</code>方法</p></blockquote><ul><li>绑定多个事件类型：<code>bind</code>可以为元素绑定多个事件类型<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">$(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">  $(<span class="string">"div"</span>).bind(<span class="string">"mouseover mouseout"</span>,<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    $(<span class="keyword">this</span>).toggleClass(<span class="string">"over"</span>);</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure></li></ul><blockquote><p>这段代码效果和下方代码一样<br><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">$(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">  $(<span class="string">"div"</span>).bind(<span class="string">"mouseover"</span>,<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    $(<span class="keyword">this</span>).toggleClass(<span class="string">"over"</span>);</span><br><span class="line">  &#125;).bind(<span class="string">"mouseout"</span>,<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    $(<span class="keyword">this</span>).toggleClass(<span class="string">"over"</span>)；</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure></p></blockquote><h2 id="动画"><a href="#动画" class="headerlink" title="动画"></a>动画</h2><ul><li><p><code>show()</code>和<code>hide()</code>：这两个是<code>jQuery</code>中的最基本的动画，当这两个方法不含参数时，效果类似于直接将元素的<code>display</code>属性分别改为<code>block</code>和<code>none</code>，这两个方法当有参数时，可以使元素慢慢显示出来，速度关键字有<code>slow</code>、<code>normal</code>、<code>fast</code>，此外，还可以直接指定一个数字作为显示的时间参数，单位为毫秒，其中<code>slow</code>的显示时间为<code>600</code>毫秒，<code>normal</code>的显示时间为<code>400</code>毫秒，<code>fast</code>的显示时间为<code>200</code>毫秒，这两个方法是同时改变元素的高度、宽度和不透明度</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">$(<span class="string">"p"</span>).toggle(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">  $(<span class="keyword">this</span>).next().hide(<span class="number">600</span>);</span><br><span class="line">&#125;,<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">  $(<span class="keyword">this</span>).next().show(<span class="number">600</span>);</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure></li><li><p><code>fadeIn()</code>和<code>fadeOut()</code>：这两个函数只改变元素的不透明度，同样可以有以上的速度参数</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">$(<span class="string">"p"</span>).toggle(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">  $(<span class="keyword">this</span>).next().fadeOut();</span><br><span class="line">&#125;,<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">  $(<span class="keyword">this</span>).next().fadeIn(<span class="number">600</span>);</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure></li><li><p><code>slideUp()</code>和<code>slideDown()</code>：这两个方法只改变元素的高度，<code>slideDown()</code>方法使元素由上到下延伸展示，而<code>slideUp()</code>方法使元素从下到上缩短隐藏，同样有上述的时间参数</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">$(<span class="string">"p"</span>).toggle(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">  $(<span class="keyword">this</span>).next().slideUp();</span><br><span class="line">&#125;,<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">  $(<span class="keyword">this</span>).next().slideDown(<span class="number">600</span>);</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure></li><li><p><code>toggle()</code>：切换元素的可见状态，如果元素可见，则切换为隐藏，如果元素隐藏，则切换为可见</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">toggle(speed,callback);</span><br><span class="line">$(<span class="keyword">this</span>).next().toggle();</span><br></pre></td></tr></table></figure></li></ul><blockquote><p>效果和<code>hide()</code>和<code>show()</code>方法类似</p></blockquote><ul><li><p><code>slideToggle()</code>：通过高度来切换元素的可见性</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">slideToggle(speed,easing,callback);</span><br></pre></td></tr></table></figure></li><li><p><code>fadeTo()</code>：把元素的不透明度以渐进的方式调整到指定的值，这个动画只调整元素的不透明度</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">fadeTo(speed,opacity,callback)</span><br><span class="line">$(<span class="keyword">this</span>).fadeTo(<span class="number">100</span>,<span class="number">0.3</span>);</span><br></pre></td></tr></table></figure></li><li><p><code>fadeToggle()</code>：通过不透明度来切换元素的可见性</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">fadeToggle(speed,easing,callback);</span><br></pre></td></tr></table></figure></li><li><p><code>animate()</code>：自定义动画</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">animate(params,speed,callback);</span><br><span class="line">params：一个包含样式属性及值的映射，如：&#123;<span class="attr">left</span>:<span class="string">"400px"</span>,<span class="attr">height</span>:<span class="string">"500px"</span>&#125;</span><br><span class="line">speed：速度参数，可选</span><br><span class="line">callback：在动画完成后执行的函数，可选</span><br></pre></td></tr></table></figure></li><li><p><code>animate</code>可以添加累加与累减动画，如：</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">$(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">  $(<span class="string">"p"</span>).click(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    $(<span class="keyword">this</span>).animate(&#123;<span class="attr">left</span>:<span class="string">"+=500px"</span>&#125;,<span class="number">300</span>)</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></li><li><p>利用<code>animate</code>中的第一个参数很容易实现同时执行多个动画的效果，而需要按顺序执行动画，只需要顺序写<code>animate</code>动画即可，另外也可以使用链式操作</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">$(<span class="keyword">this</span>).animate(&#123;<span class="attr">left</span>:<span class="string">"500px"</span>&#125;,<span class="number">300</span>);</span><br><span class="line">$(<span class="keyword">this</span>).animate(&#123;<span class="attr">height</span>:<span class="string">"500px"</span>&#125;,<span class="number">300</span>);</span><br></pre></td></tr></table></figure></li></ul><p>等效于<br><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">$(<span class="keyword">this</span>).animate(&#123;<span class="attr">left</span>:<span class="string">"500px"</span>&#125;,<span class="number">300</span>).animate(&#123;<span class="attr">height</span>:<span class="string">"500px"</span>&#125;,<span class="number">300</span>);</span><br></pre></td></tr></table></figure></p><h2 id="判断元素是否处于动画状态"><a href="#判断元素是否处于动画状态" class="headerlink" title="判断元素是否处于动画状态"></a>判断元素是否处于动画状态</h2><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span>(!$(<span class="string">"p"</span>).is(<span class="string">":animated"</span>))&#123;</span><br><span class="line">  <span class="comment">//没有处于动画状态时执行的程序</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="延迟动画"><a href="#延迟动画" class="headerlink" title="延迟动画"></a>延迟动画</h2><ul><li>延迟动画利用<code>delay()</code>方法<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">$(<span class="keyword">this</span>).animate(&#123;<span class="attr">left</span>:<span class="string">"500px"</span>&#125;,<span class="number">200</span>).delay(<span class="number">1000</span>);</span><br></pre></td></tr></table></figure></li></ul><hr><h1 id="Tips"><a href="#Tips" class="headerlink" title="Tips"></a>Tips</h1><h2 id="aria-expanded-quot-false-quot"><a href="#aria-expanded-quot-false-quot" class="headerlink" title="aria-expanded=&quot;false&quot;"></a><code>aria-expanded=&quot;false&quot;</code></h2><ul><li><code>aria-expanded</code>表示展开状态。默认为<code>undefined</code>, 表示当前展开状态未知。其它可选值：<code>true</code>表示元素是展开的；<code>false</code>表示元素不是展开的</li></ul><h2 id="aria-hidden字符串"><a href="#aria-hidden字符串" class="headerlink" title="aria-hidden字符串"></a><code>aria-hidden</code>字符串</h2><ul><li>可选值为<code>true</code>和<code>false</code>，<code>true</code>表示元素隐藏(不可见)，<code>false</code>表示元素可见</li></ul><h2 id="快捷键"><a href="#快捷键" class="headerlink" title="快捷键"></a>快捷键</h2><ul><li><code>Ctrl + Enter</code> 光标不在末尾回车</li><li><code>Ctrl + Backspace</code> 删除一个词</li><li><code>Ctrl + -&gt;</code> 以词为单位后移</li></ul><h2 id="col-xs-n中放图片不生效"><a href="#col-xs-n中放图片不生效" class="headerlink" title="col-xs-n中放图片不生效"></a>col-xs-n中放图片不生效</h2><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">img</span> &#123;</span><br><span class="line">  <span class="attribute">display</span>: block;</span><br><span class="line">  <span class="attribute">max-width</span>: <span class="number">100%</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="display"><a href="#display" class="headerlink" title="display"></a><code>display</code></h2><ul><li><code>block</code> 默认，此元素将显示为块级元素，此元素前后会带有换行符</li><li><code>inline</code> 此元素会被显示为内联元素，元素前后没有换行符</li><li><code>inline-block</code> 行内块元素</li></ul><h2 id="使用col就要在母元素上清除浮动，因为col栅格也是浮动的"><a href="#使用col就要在母元素上清除浮动，因为col栅格也是浮动的" class="headerlink" title="使用col就要在母元素上清除浮动，因为col栅格也是浮动的"></a>使用<code>col</code>就要在母元素上清除浮动，因为<code>col</code>栅格也是浮动的</h2><h2 id="使用flag覆盖叠加新的属性"><a href="#使用flag覆盖叠加新的属性" class="headerlink" title="使用flag覆盖叠加新的属性"></a>使用<code>flag</code>覆盖叠加新的属性</h2><ul><li><code>css</code>中使用<code>.side-bar-card.flag {}</code>来调用</li><li><code>html</code>中用<code>&lt;div class=&quot;side-bar-card flag clearfix&quot;&gt;</code></li></ul><h2 id="a标签链接不带下划线，并列换行写"><a href="#a标签链接不带下划线，并列换行写" class="headerlink" title="a标签链接不带下划线，并列换行写"></a><code>a</code>标签链接不带下划线，并列换行写</h2><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">a</span>,</span><br><span class="line"><span class="selector-tag">a</span><span class="selector-pseudo">:hover</span>,</span><br><span class="line"><span class="selector-tag">a</span><span class="selector-pseudo">:visited</span>,</span><br><span class="line"><span class="selector-tag">a</span><span class="selector-pseudo">:link</span>,</span><br><span class="line"><span class="selector-tag">a</span><span class="selector-pseudo">:active</span> &#123;</span><br><span class="line">  <span class="attribute">text-decoration</span>: none;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="line-heigh不要写px"><a href="#line-heigh不要写px" class="headerlink" title="line-heigh不要写px"></a><code>line-heigh</code>不要写<code>px</code></h2><h2 id="表格居中"><a href="#表格居中" class="headerlink" title="表格居中"></a>表格居中</h2><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">table</span> <span class="attr">align</span>=<span class="string">"center"</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="bootstrap响应式表格"><a href="#bootstrap响应式表格" class="headerlink" title="bootstrap响应式表格"></a><code>bootstrap</code>响应式表格</h2><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"table-responsive"</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="表格内容水平垂直居中"><a href="#表格内容水平垂直居中" class="headerlink" title="表格内容水平垂直居中"></a>表格内容水平垂直居中</h2><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 水平居中 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">th</span> <span class="attr">style</span>=<span class="string">'text-align: center;'</span>&gt;</span>host<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 垂直居中 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span> <span class="attr">rowspan</span>=<span class="string">$row_host1</span> <span class="attr">style</span>=<span class="string">'vertical-align: middle;'</span>&gt;</span>host1<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 既水平又垂直居中 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">td</span> <span class="attr">rowspan</span>=<span class="string">$rowspan</span> <span class="attr">style</span>=<span class="string">'vertical-align: middle;text-align: center;'</span>&gt;</span>hello<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="图片撑满"><a href="#图片撑满" class="headerlink" title="图片撑满"></a>图片撑满</h2><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">background-size</span>: <span class="selector-tag">cover</span>;</span><br></pre></td></tr></table></figure><h2 id="input-select-textarea-form-control"><a href="#input-select-textarea-form-control" class="headerlink" title="input/select/textarea/... + .form-control"></a><code>input/select/textarea/... + .form-control</code></h2><h2 id="form-group"><a href="#form-group" class="headerlink" title=".form-group"></a><code>.form-group</code></h2><ul><li>单独的表单控件会被自动赋予一些全局样式。所有设置了<code>.form-control</code>类的<code>&lt;input&gt;、&lt;textarea&gt;和&lt;select&gt;</code>元素都将被默认设置宽度属性为<code>width: 100%;</code>。将<code>label</code>元素和前面提到的控件包裹在<code>.form-group</code>中可以获得最好的排列</li></ul><h2 id="响应式表格"><a href="#响应式表格" class="headerlink" title="响应式表格"></a>响应式表格</h2><ul><li>将任何<code>.table</code>元素包裹在<code>&lt;div class=&quot;table-responsive&quot;&gt;</code>元素内</li></ul><h2 id="垂直方向的内容截断"><a href="#垂直方向的内容截断" class="headerlink" title="垂直方向的内容截断"></a>垂直方向的内容截断</h2><ul><li>响应式表格使用了<code>overflow-y: hidden</code>属性，这样就能将超出表格底部和顶部的内容截断。特别是，也可以截断下拉菜单和其他第三方组件</li></ul><h2 id="form-inline"><a href="#form-inline" class="headerlink" title=".form-inline"></a><code>.form-inline</code></h2><ul><li>输入框和单选/多选框控件默认被设置为<code>width: 100%;</code>。在内联表单，我们将这些元素的宽度设置为<code>width: auto;</code>，因此，多个控件可以排列在同一行。根据布局需求，手动设置宽度</li><li>一定要添加<code>label</code>标签，对于内联表单，可以通过为<code>label</code>设置<code>.sr-only</code>类将其隐藏。还有一些辅助技术提供<code>label</code>标签的替代方案，比如<code>aria-label、aria-labelledby</code>或<code>title</code>属性</li></ul><h2 id="form-horizontal"><a href="#form-horizontal" class="headerlink" title=".form-horizontal"></a><code>.form-horizontal</code></h2><ul><li>无需再添加<code>.row</code>了</li></ul><h2 id="margin对span无效"><a href="#margin对span无效" class="headerlink" title="margin对span无效"></a><code>margin</code>对<code>span</code>无效</h2><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">display</span>: <span class="selector-tag">block</span>;</span><br><span class="line"><span class="selector-tag">line-height</span>: 1<span class="selector-class">.5</span>;</span><br></pre></td></tr></table></figure><h2 id="button后退"><a href="#button后退" class="headerlink" title="button后退"></a><code>button</code>后退</h2><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">"btn btn-danger ycx"</span> <span class="attr">onclick</span>=<span class="string">"javascript :history.back(-1);"</span>&gt;</span>返回<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="居中"><a href="#居中" class="headerlink" title="居中"></a>居中</h2><ul><li>文本内容居中：<code>text-center</code></li><li>图片居中：<code>center-block</code></li><li>其他类型元素居中：<code>col-md-offset-X</code></li></ul><h2 id="在form标签上加novalidate属性，可以禁用h5默认的表单验证效果"><a href="#在form标签上加novalidate属性，可以禁用h5默认的表单验证效果" class="headerlink" title="在form标签上加novalidate属性，可以禁用h5默认的表单验证效果"></a>在<code>form</code>标签上加<code>novalidate</code>属性，可以禁用<code>h5</code>默认的表单验证效果</h2><h2 id="div置顶的方法"><a href="#div置顶的方法" class="headerlink" title="div置顶的方法"></a><code>div</code>置顶的方法</h2><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">position</span>: <span class="selector-tag">relative</span>;</span><br><span class="line"><span class="selector-tag">z-index</span>: 99999;</span><br></pre></td></tr></table></figure><h2 id="margin-auto实现绝对定位元素的居中"><a href="#margin-auto实现绝对定位元素的居中" class="headerlink" title="margin:auto实现绝对定位元素的居中"></a><code>margin:auto</code>实现绝对定位元素的居中</h2><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.element</span> &#123;</span><br><span class="line">  <span class="attribute">width</span>: <span class="number">600px</span>;</span><br><span class="line">  <span class="attribute">height</span>: <span class="number">400px</span>;</span><br><span class="line">  <span class="attribute">position</span>: absolute;</span><br><span class="line">  <span class="attribute">left</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">top</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">right</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">bottom</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">margin</span>: auto;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="ajax中dataType为预期服务器返回的数据类型，不写有默认值，开发过程中不要写"><a href="#ajax中dataType为预期服务器返回的数据类型，不写有默认值，开发过程中不要写" class="headerlink" title="ajax中dataType为预期服务器返回的数据类型，不写有默认值，开发过程中不要写"></a><code>ajax</code>中<code>dataType</code>为预期服务器返回的数据类型，不写有默认值，开发过程中不要写</h2><h2 id="ajax表单序列化传输"><a href="#ajax表单序列化传输" class="headerlink" title="ajax表单序列化传输"></a><code>ajax</code>表单序列化传输</h2><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">$(<span class="string">"#submit"</span>).on(<span class="string">'touchstart'</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">var</span> form = $(<span class="string">"#handouts"</span>).serialize();</span><br><span class="line">  $.ajax(&#123;</span><br><span class="line">    url: <span class="string">'http://192.168.1.111:8686/EAnnotation/addPassage'</span>,</span><br><span class="line">    type: <span class="string">"post"</span>,</span><br><span class="line">    data: form,</span><br><span class="line">    cache: <span class="literal">false</span>,</span><br><span class="line">    success: <span class="function"><span class="keyword">function</span> (<span class="params">data</span>) </span>&#123;</span><br><span class="line">      <span class="built_in">window</span>.location.href = <span class="string">"course.html"</span></span><br><span class="line">    &#125;,</span><br><span class="line">    error: <span class="function"><span class="keyword">function</span> (<span class="params">e</span>) </span>&#123;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;)</span><br><span class="line">  <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line"> &#125;);</span><br></pre></td></tr></table></figure><h2 id="ajax表单传递键值对"><a href="#ajax表单传递键值对" class="headerlink" title="ajax表单传递键值对"></a><code>ajax</code>表单传递键值对</h2><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">$(<span class="string">"#submit"</span>).on(<span class="string">'touchstart'</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">var</span> form = <span class="keyword">new</span> FormData($(<span class="string">'#homework'</span>)[<span class="number">0</span>]);</span><br><span class="line">  $.ajax(&#123;</span><br><span class="line">    url: <span class="string">'https://bitcandy.one/EAnnotation/addPassage'</span>,</span><br><span class="line">    type: <span class="string">'POST'</span>,</span><br><span class="line">    cache: <span class="literal">false</span>,</span><br><span class="line">    data: form,</span><br><span class="line">    processData: <span class="literal">false</span>,</span><br><span class="line">    contentType: <span class="literal">false</span>,</span><br><span class="line">    success: <span class="function"><span class="keyword">function</span> (<span class="params">data</span>) </span>&#123;</span><br><span class="line">      <span class="built_in">window</span>.location.href = <span class="string">"classteacher.html"</span></span><br><span class="line">      <span class="built_in">console</span>.log(form);</span><br><span class="line">    &#125;,</span><br><span class="line">    error: <span class="function"><span class="keyword">function</span> (<span class="params">e</span>) </span>&#123; &#125;</span><br><span class="line">  &#125;)</span><br><span class="line">  <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h2 id="ajax拿到json后如何使用"><a href="#ajax拿到json后如何使用" class="headerlink" title="ajax拿到json后如何使用"></a><code>ajax</code>拿到<code>json</code>后如何使用</h2><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">$.ajax(&#123;</span><br><span class="line">  url: <span class="string">'http://192.168.1.111:8686/EAnnotation/getAllPassages'</span>,</span><br><span class="line">  type: <span class="string">"post"</span>,</span><br><span class="line">  cache: <span class="literal">false</span>,</span><br><span class="line">  success: <span class="function"><span class="keyword">function</span> (<span class="params">data</span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(data);</span><br><span class="line">    $.each(data, <span class="function"><span class="keyword">function</span> (<span class="params">i, item</span>) </span>&#123;</span><br><span class="line">      <span class="keyword">var</span> time = getDateDiff(item.releaseTime);</span><br><span class="line">      <span class="keyword">if</span> (item.photo) &#123;</span><br><span class="line"></span><br><span class="line">      &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        $(<span class="string">"ul[class=index]"</span>).append(</span><br><span class="line">          <span class="string">`&lt;div class="card"&gt;</span></span><br><span class="line"><span class="string">            &lt;div class="card-header"&gt;`</span> + item.title + <span class="string">`&lt;/div&gt;</span></span><br><span class="line"><span class="string">            &lt;div class="card-content card-content-padding"&gt;</span></span><br><span class="line"><span class="string">              &lt;p class="date index"&gt;`</span> + item.theme + <span class="string">`·`</span> + time + <span class="string">`&lt;/p&gt;</span></span><br><span class="line"><span class="string">              &lt;a href="www.baidu.com" class="link" style="color: black"&gt;&lt;p style="margin-top: 0; margin-bottom: 0;"&gt;`</span> + getcontent(item.content).substring(<span class="number">0</span>, <span class="number">70</span>) + <span class="string">` ...&lt;/p&gt;&lt;/a&gt;</span></span><br><span class="line"><span class="string">            &lt;/div&gt;</span></span><br><span class="line"><span class="string">            &lt;div class="card-footer"&gt;</span></span><br><span class="line"><span class="string">              &lt;a href="#" class="link" style="color"&gt;</span></span><br><span class="line"><span class="string">                &lt;i class="f7-icons size-18"&gt;heart_fill&lt;/i&gt;`</span> + <span class="number">1</span> + <span class="string">`喜欢&lt;/a&gt;</span></span><br><span class="line"><span class="string">              &lt;a href="#" class="link"&gt;</span></span><br><span class="line"><span class="string">                `</span> + <span class="number">22</span> + <span class="string">`人批注过，共计`</span> + <span class="number">44</span> + <span class="string">`条批注</span></span><br><span class="line"><span class="string">                  &lt;/a&gt;</span></span><br><span class="line"><span class="string">            &lt;/div&gt;</span></span><br><span class="line"><span class="string">          &lt;/div&gt;`</span></span><br><span class="line">        )</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;)</span><br><span class="line"></span><br><span class="line">  &#125;,</span><br><span class="line">  error: <span class="function"><span class="keyword">function</span> (<span class="params">e</span>) </span>&#123;</span><br><span class="line">  &#125;</span><br><span class="line"> &#125;)</span><br></pre></td></tr></table></figure><h2 id="多行文字限制字数显示"><a href="#多行文字限制字数显示" class="headerlink" title="多行文字限制字数显示..."></a>多行文字限制字数显示<code>...</code></h2><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.text_overflow</span>&#123;</span><br><span class="line">  <span class="comment">/* width:27rem; */</span></span><br><span class="line">  <span class="attribute">display</span>: -webkit-box;</span><br><span class="line">  <span class="attribute">-webkit-line-clamp</span>: <span class="number">3</span>;</span><br><span class="line">  <span class="attribute">-webkit-box-orient</span>: vertical;</span><br><span class="line">  <span class="attribute">overflow</span>: hidden;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="单行文字限制字数显示"><a href="#单行文字限制字数显示" class="headerlink" title="单行文字限制字数显示..."></a>单行文字限制字数显示<code>...</code></h2><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.text_overflow</span>&#123;</span><br><span class="line">  <span class="attribute">width</span>:<span class="number">27em</span>;</span><br><span class="line">  <span class="attribute">white-space</span>:nowrap;</span><br><span class="line">  <span class="attribute">text-overflow</span>:ellipsis;</span><br><span class="line">  <span class="attribute">-o-text-overflow</span>:ellipsis; </span><br><span class="line">  <span class="attribute">overflow</span>:hidden;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="从html代码中获取纯文本函数"><a href="#从html代码中获取纯文本函数" class="headerlink" title="从html代码中获取纯文本函数"></a>从<code>html</code>代码中获取纯文本函数</h2><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">getcontent</span>(<span class="params">text</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">var</span> html = text;</span><br><span class="line">  <span class="keyword">return</span> html.replace(<span class="regexp">/&lt;[^&gt;]*&gt;|/g</span>, <span class="string">""</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="时间戳转化函数"><a href="#时间戳转化函数" class="headerlink" title="时间戳转化函数"></a>时间戳转化函数</h2><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 2014-05-08 00:22:11</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">getDateDiff</span>(<span class="params">dateTimeStamp</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">var</span> dateTimeStamp = <span class="keyword">new</span> <span class="built_in">Date</span>(<span class="built_in">Date</span>.parse(dateTimeStamp.replace(<span class="regexp">/-/g</span>, <span class="string">"/"</span>)));</span><br><span class="line">  dateTimeStamp = dateTimeStamp.getTime();</span><br><span class="line">  <span class="keyword">var</span> result;</span><br><span class="line">  <span class="keyword">var</span> minute = <span class="number">1000</span> * <span class="number">60</span>;</span><br><span class="line">  <span class="keyword">var</span> hour = minute * <span class="number">60</span>;</span><br><span class="line">  <span class="keyword">var</span> day = hour * <span class="number">24</span>;</span><br><span class="line">  <span class="keyword">var</span> halfamonth = day * <span class="number">15</span>;</span><br><span class="line">  <span class="keyword">var</span> month = day * <span class="number">30</span>;</span><br><span class="line">  <span class="keyword">var</span> now = <span class="keyword">new</span> <span class="built_in">Date</span>().getTime();</span><br><span class="line">  <span class="keyword">var</span> diffValue = now - dateTimeStamp;</span><br><span class="line">  <span class="keyword">if</span> (diffValue &lt; <span class="number">0</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">var</span> monthC = diffValue / month;</span><br><span class="line">  <span class="keyword">var</span> weekC = diffValue / (<span class="number">7</span> * day);</span><br><span class="line">  <span class="keyword">var</span> dayC = diffValue / day;</span><br><span class="line">  <span class="keyword">var</span> hourC = diffValue / hour;</span><br><span class="line">  <span class="keyword">var</span> minC = diffValue / minute;</span><br><span class="line">  <span class="keyword">if</span> (monthC &gt;= <span class="number">1</span>) &#123;</span><br><span class="line">    <span class="keyword">if</span> (monthC &lt;= <span class="number">12</span>)</span><br><span class="line">      result = <span class="string">""</span> + <span class="built_in">parseInt</span>(monthC) + <span class="string">"个月前"</span>;</span><br><span class="line">    <span class="keyword">else</span> &#123;</span><br><span class="line">      result = <span class="string">""</span> + <span class="built_in">parseInt</span>(monthC / <span class="number">12</span>) + <span class="string">"年前"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">else</span> <span class="keyword">if</span> (weekC &gt;= <span class="number">1</span>) &#123;</span><br><span class="line">    result = <span class="string">""</span> + <span class="built_in">parseInt</span>(weekC) + <span class="string">"周前"</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">else</span> <span class="keyword">if</span> (dayC &gt;= <span class="number">1</span>) &#123;</span><br><span class="line">    result = <span class="string">""</span> + <span class="built_in">parseInt</span>(dayC) + <span class="string">"天前"</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">else</span> <span class="keyword">if</span> (hourC &gt;= <span class="number">1</span>) &#123;</span><br><span class="line">    result = <span class="string">""</span> + <span class="built_in">parseInt</span>(hourC) + <span class="string">"小时前"</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">else</span> <span class="keyword">if</span> (minC &gt;= <span class="number">1</span>) &#123;</span><br><span class="line">    result = <span class="string">""</span> + <span class="built_in">parseInt</span>(minC) + <span class="string">"分钟前"</span>;</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    result = <span class="string">"刚刚"</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> result;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h2 id="js变量生命周期"><a href="#js变量生命周期" class="headerlink" title="js变量生命周期"></a><code>js</code>变量生命周期</h2><ul><li><p>全局变量</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> n=<span class="number">999</span>;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">f1</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">  alert(n);</span><br><span class="line">&#125;</span><br><span class="line">f1(); <span class="comment">// 输出999,说明全局变量n在函数内部被读取</span></span><br></pre></td></tr></table></figure></li><li><p>函数中的全局变量：在函数内部声明变量没有使用<code>var</code>，实际上是声明了一个全局变量，前提是需要先调用函数</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> func1 = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">  a1 = <span class="number">1</span>;</span><br><span class="line">  <span class="built_in">console</span>.log(a1); <span class="comment">//输出:1</span></span><br><span class="line">  <span class="function"><span class="keyword">function</span> <span class="title">func2</span>(<span class="params"></span>) </span>&#123;<span class="comment">//func2()是一个闭包</span></span><br><span class="line">    a2 = <span class="number">2</span>;</span><br><span class="line">    <span class="built_in">console</span>.log(a2);</span><br><span class="line">  &#125;</span><br><span class="line">  func2()；<span class="comment">//闭包函数中的变量在调用函数之后，变量也是全局变量</span></span><br><span class="line">  <span class="built_in">console</span>.log(a2);<span class="comment">//输出2</span></span><br><span class="line">&#125;;</span><br><span class="line">func1();<span class="comment">//调用函数，才会使变量生效</span></span><br><span class="line"><span class="built_in">console</span>.log(a1);<span class="comment">//输出1</span></span><br><span class="line"><span class="built_in">console</span>.log(a2);<span class="comment">//输出2，说明闭包中没有用var声明的变量也是全局变量。</span></span><br></pre></td></tr></table></figure></li><li><p>局部变量：在函数内部声明的变量。函数内部的变量，外部无法读取。</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">f1</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">  <span class="keyword">var</span> n=<span class="number">999</span>;</span><br><span class="line">&#125;</span><br><span class="line">alert(n); <span class="comment">// 没有定义，说明函数内部的变量，外部无法读取。</span></span><br></pre></td></tr></table></figure></li><li><p><code>JavaScript</code>解释器在执行脚本时，是按块来执行的。通俗地说，就是浏览器在解析<code>HTML</code>文档流时，如果遇到一个<code>&lt;script&gt;</code>标签，则<code>JavaScript</code>解释器会等到这个代码块都加载完后，先对代码块进行预编译，然后再执行。执行完毕后，浏览器会继续解析下面的<code>HTML</code>文档流，同时<code>JavaScript</code>解释器也准备好处理下一个代码块。由于<code>JavaScript</code>是按块执行的，所以如果在一个<code>JavaScript</code>块中调用后面块中声明的变量或函数就会提示语法错误。虽然说，<code>JavaScript</code>是按块执行的，但是不同块都属于同一个全局作用域，也就是说，<strong>块之间的变量和函数是可以共享的</strong>。</p></li></ul><h2 id="jquery获取radio被选中的值"><a href="#jquery获取radio被选中的值" class="headerlink" title="jquery获取radio被选中的值"></a><code>jquery</code>获取<code>radio</code>被选中的值</h2><blockquote><p>三种方法都可以<br><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">$(<span class="string">'input:radio:checked'</span>).val()；</span><br><span class="line">$(<span class="string">"input[type='radio']:checked"</span>).val();</span><br><span class="line">$(<span class="string">"input[name='rd']:checked"</span>).val();</span><br></pre></td></tr></table></figure></p></blockquote><h2 id="jquery获取select被选中的值"><a href="#jquery获取select被选中的值" class="headerlink" title="jquery获取select被选中的值"></a><code>jquery</code>获取<code>select</code>被选中的值</h2><ul><li><p>获取选中项的<code>value</code>值</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">$(<span class="string">'select#sel option:selected'</span>).val();</span><br><span class="line">或者</span><br><span class="line">$(<span class="string">'select#sel'</span>).find(<span class="string">'option:selected'</span>).val();</span><br></pre></td></tr></table></figure></li><li><p>获取选中项的<code>text</code>值</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">$(<span class="string">'select#seloption:selected'</span>).text();</span><br><span class="line">或者</span><br><span class="line">$(<span class="string">'select#sel'</span>).find(<span class="string">'option:selected'</span>).text();</span><br></pre></td></tr></table></figure></li><li><p>获取当前选中项的索引值</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">$(<span class="string">'select#sel'</span>).get(<span class="number">0</span>).selectedIndex;</span><br></pre></td></tr></table></figure></li></ul><h2 id="jquery获取checkbox被选中的值"><a href="#jquery获取checkbox被选中的值" class="headerlink" title="jquery获取checkbox被选中的值"></a><code>jquery</code>获取<code>checkbox</code>被选中的值</h2><ul><li><p>获取单个<code>checkbox</code>选中项</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">$(<span class="string">"input:checkbox:checked"</span>).val() </span><br><span class="line">或者 </span><br><span class="line">$(<span class="string">"input:[type='checkbox']:checked"</span>).val(); </span><br><span class="line">或者 </span><br><span class="line">$(<span class="string">"input:[name='ck']:checked"</span>).val();</span><br></pre></td></tr></table></figure></li><li><p>获取多个<code>checkbox</code>选中项</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">$(<span class="string">"input[name='favour']:checked"</span>).each(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">  alert($(<span class="keyword">this</span>).val());</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></li></ul><h2 id="jquery获取span和input的值"><a href="#jquery获取span和input的值" class="headerlink" title="jquery获取span和input的值"></a><code>jquery</code>获取<code>span</code>和<code>input</code>的值</h2><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">$(<span class="string">"span"</span>).html();</span><br><span class="line">$(<span class="string">"input"</span>).val();</span><br></pre></td></tr></table></figure><h2 id="jquery数组对象获取value值"><a href="#jquery数组对象获取value值" class="headerlink" title="jquery数组对象获取value值"></a><code>jquery</code>数组对象获取<code>value</code>值</h2><ul><li>需将数组对象再次封装为<code>jquery</code>对象<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 错误</span></span><br><span class="line">$(<span class="string">"input[name='jQueryArray']"</span>)[<span class="number">0</span>].val();</span><br><span class="line"><span class="comment">// 正确</span></span><br><span class="line">$($(<span class="string">"input[name='jQueryArray']"</span>)[<span class="number">0</span>]).val();<span class="number">0</span></span><br></pre></td></tr></table></figure></li></ul><h2 id="this必须用-包装成JQuery对象才能使用"><a href="#this必须用-包装成JQuery对象才能使用" class="headerlink" title="this必须用$包装成JQuery对象才能使用"></a><code>this</code>必须用<code>$</code>包装成<code>JQuery</code>对象才能使用</h2><h2 id="用let和const的声明可以产生块级作用域，解决闭包循环事件绑定"><a href="#用let和const的声明可以产生块级作用域，解决闭包循环事件绑定" class="headerlink" title="用let和const的声明可以产生块级作用域，解决闭包循环事件绑定"></a>用<code>let</code>和<code>const</code>的声明可以产生块级作用域，解决闭包循环事件绑定</h2><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; <span class="number">2</span>; i++)  </span><br><span class="line">&#123;     </span><br><span class="line">  <span class="keyword">let</span> ii = i;   <span class="comment">//const也可以，块级作用域  </span></span><br><span class="line">  <span class="keyword">var</span> bt = <span class="built_in">document</span>.getElementById(<span class="string">'bt'</span>+ii);  </span><br><span class="line">  bt.onclick = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;  </span><br><span class="line">    <span class="built_in">console</span>.log(ii);  </span><br><span class="line">  &#125;;  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="JavaScript中有5种简单数据类型（也称为基本数据类型）：-Undefined、Null、Boolean、Number和String-。还有1种复杂数据类型——-Object-，Object本质上是由一组无序的名值对组成的。"><a href="#JavaScript中有5种简单数据类型（也称为基本数据类型）：-Undefined、Null、Boolean、Number和String-。还有1种复杂数据类型——-Object-，Object本质上是由一组无序的名值对组成的。" class="headerlink" title="JavaScript中有5种简单数据类型（也称为基本数据类型）： Undefined、Null、Boolean、Number和String 。还有1种复杂数据类型—— Object ，Object本质上是由一组无序的名值对组成的。"></a>JavaScript中有5种简单数据类型（也称为基本数据类型）： Undefined、Null、Boolean、Number和String 。还有1种复杂数据类型—— Object ，Object本质上是由一组无序的名值对组成的。</h2><p><a href="https://www.cnblogs.com/signheart/p/3ca2afaca43d2dc69ce72c862a3ae81c.html" target="_blank" rel="noopener">https://www.cnblogs.com/signheart/p/3ca2afaca43d2dc69ce72c862a3ae81c.html</a></p><p><a href="https://www.nowcoder.com/questionTerminal/9d9d07ca445a461cbee95fc091d8751a?orderByHotValue=2&amp;page=1&amp;onlyReference=false" target="_blank" rel="noopener">https://www.nowcoder.com/questionTerminal/9d9d07ca445a461cbee95fc091d8751a?orderByHotValue=2&amp;page=1&amp;onlyReference=false</a></p><p><a href="https://www.cnblogs.com/jf-67/p/6476967.html" target="_blank" rel="noopener">https://www.cnblogs.com/jf-67/p/6476967.html</a></p><p><a href="https://blog.csdn.net/chenpeng19910926/article/details/50826099" target="_blank" rel="noopener">https://blog.csdn.net/chenpeng19910926/article/details/50826099</a><br><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/2018/09/01/前端开发笔记/2018-06-29-14-08-10.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure></p><p><a href="https://blog.csdn.net/lyliyangzi/article/details/76167377" target="_blank" rel="noopener">https://blog.csdn.net/lyliyangzi/article/details/76167377</a></p><p><a href="https://www.cnblogs.com/jiaozhuo/p/5751002.html" target="_blank" rel="noopener">https://www.cnblogs.com/jiaozhuo/p/5751002.html</a></p><p>backgroundColor,，要加.style，属性设置元素的背景颜色。<br>bgcolor不用加.style</p><p>json中key也是个字符串，要加引号。<br>key和value之间是用：号来表示的</p><h2 id="CSS样式表和选择器"><a href="#CSS样式表和选择器" class="headerlink" title="CSS样式表和选择器"></a><code>CSS</code>样式表和选择器</h2><p><code>CSS</code>和<code>HTML</code>结合的三种方式：行内样式表、内嵌样式表、外部样式表<br><code>CSS</code>四种基本选择器：标签选择器、类选择器、ID选择器、通用选择器<br><code>CSS</code>几种扩展选择器：后代选择器、交集选择器、并集选择器、伪类选择器</p><hr>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;Boostrap部分&quot;&gt;&lt;a href=&quot;#Boostrap部分&quot; class=&quot;headerlink&quot; title=&quot;Boostrap部分&quot;&gt;&lt;/a&gt;&lt;code&gt;Boostrap&lt;/code&gt;部分&lt;/h1&gt;&lt;h2 id=&quot;Bootstrap引入&quot;&gt;&lt;a href
      
    
    </summary>
    
    
      <category term="前端" scheme="https://kxbk100.github.io/tags/%E5%89%8D%E7%AB%AF/"/>
    
  </entry>
  
  <entry>
    <title></title>
    <link href="https://kxbk100.github.io/2018/06/29/note/"/>
    <id>https://kxbk100.github.io/2018/06/29/note/</id>
    <published>2018-06-29T02:42:22.004Z</published>
    <updated>2018-07-07T07:06:27.535Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Note"><a href="#Note" class="headerlink" title="Note"></a>Note</h1><ol><li>电子书：做注释，同步</li><li>教材：划出重点，手写分栏整理</li><li>课外纸质书：划出重点，建<code>markdown</code></li></ol><hr><ul><li style="list-style: none"><input type="checkbox"> 橱窗次序</li><li style="list-style: none"><input type="checkbox"> X修改</li><li style="list-style: none"><input type="checkbox"> 15的考研情况 潘中祥</li><li style="list-style: none"><input type="checkbox"> 论文数量 岑岳峰</li></ul><hr><ol><li><p>发布文章的web（教师、学生），发布时进行敏感词检查，发送成功，我的 + 我发布的文章</p></li><li><p>首页搜索功能</p></li><li><p>定位：所有学生，班级（中学），群组（大学）</p></li><li><p>群组文章列表</p></li><li><p>群组id列表、班级id列表</p></li><li><p>批注类型的名字修改：下划线、高亮等</p></li><li><p>剪视频</p></li><li><p>文章的来源：教师+普通用户</p></li><li><p>文章的类别：20个左右，文章的内容不限，数据集路透社的研究</p></li><li><p>如何创建群组，如何加入群组；如何创建班级，如何加入班级暂时静态化</p></li></ol><hr><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/2018/06/29/note/2018-06-05-01-34-58.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>E-mail: susanf@cinnamonhotels.com</p><p>Dear Ms. Susan Fernando,<br>I am a participant of The 13th International Conference on Computer Science &amp; Education (ICCSE 2018) from China. And there will be three people attend the conference totally. I want to book a double-bed room and a single room starting from 7th August,2018 up to 10th August,2018 and including the night of 7th August,2018 and 10th August,2018. Please inform me the discount and price details. Thank you!<br>Best regards<br>Feng Tianxiang</p><hr><p>Dear Ms. Susan Fernando,<br>As for accommodation, our organization has a ceiling of $110 per person per day. Will you give me more discount for the single room? Thank you!<br>Best regards<br>Feng Tianxiang</p><hr><p>Dear Ms. Susan Fernando,<br>However, ICCSE 2018 will be held during August 8-11, 2018. I’ve seen there’s special discounted rate for ICCSE 2018, but the price you gave to me before is exactly the price in the official website. In other words, I haven’t got the discount which you’ve promised for the ICCSE 2018 participants. How can we get the discount? Thank you!<br>Best regards<br>Feng Tianxiang</p><hr><p>Dear Ms. Susan Fernando,<br>I am a participant of ICCSE 2018 from China. And there will be three people attend the conference totally. Please reserve for me a double-bed room and a single room starting from 7th August,2018 up to 10th August,2018 and including the night of 7th August,2018 and 10th August,2018, a total of 4 nights. Please confirm this reservation as soon as possible.<br>Note:<br>Single room: US$ 125/- Nett per single room on BB basis per night.<br>Double-bed room: US$ 135/- Nett per room per night on BB basis.<br>Best regards<br>Feng Tianxiang</p><hr><h3 id="前端学习路线"><a href="#前端学习路线" class="headerlink" title="前端学习路线"></a>前端学习路线</h3><ul><li style="list-style: none"><input type="checkbox"> Sass</li><li style="list-style: none"><input type="checkbox"> NPM</li></ul><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/2018/06/29/note/2018-06-07-17-31-13.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/2018/06/29/note/2018-06-15-17-02-42.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><hr><p>本人热爱社会主义祖国，热爱教育事业，实事求是，自觉陶冶人生观、价值观、世界观，作风正派，廉洁从教，为人师表，有强烈的事业心和高度的责任感。本人热爱学校，关心学生，服从学校工作安排，与同事团结协作，工作尽心尽责，态度端正，努力完成学校交给的各项工作任务。本人政治立场端正，未参与法轮功等非法组织，无不良记录及处分。</p><hr><p>该生在校期间在各方面表现积极，勇于进取。在学习上，该生学习成绩优秀，名列前茅。该生善于理论联系实际，常常参加老师的科研项目。在学生工作上，热爱学校，立场端正，关心集体，工作认真负责，做好学生的表率，努力完成学校交给的各项任务，被评为校“十佳团支部书记”。在生活上，该生勤俭节约，乐于助人，与同学关系较好，乐于帮助同学。该生政治立场端正，未参与法轮功等非法组织，无违法乱纪和处分等不良记录。故同意该生出国参加会议。</p><hr><p>Dear Ms. Susan Fernando,</p><p>I am a participant of ICCSE 2018 from China. And there will be three people attend the conference totally. Please confirm this reservation as soon as possible.</p><p>Prof. CEN Gang : Aug.7-Aug.11 (4 nights) Premium Room with breakfast<br>BS. FENG Tianxiang: Aug.7-Aug.11 (4 nights) Superior Room with double beds and breakfast<br>BS. XU Zengwei: Aug.7-Aug.11 (4 nights) Room with FENG Tianxiang and with breakfast</p><p>Best regards</p><p>Feng Tianxiang</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;Note&quot;&gt;&lt;a href=&quot;#Note&quot; class=&quot;headerlink&quot; title=&quot;Note&quot;&gt;&lt;/a&gt;Note&lt;/h1&gt;&lt;ol&gt;
&lt;li&gt;电子书：做注释，同步&lt;/li&gt;
&lt;li&gt;教材：划出重点，手写分栏整理&lt;/li&gt;
&lt;li&gt;课外纸质书：划出重点，建
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Axure学习小记</title>
    <link href="https://kxbk100.github.io/2018/01/14/Axure%E5%AD%A6%E4%B9%A0%E5%B0%8F%E8%AE%B0/"/>
    <id>https://kxbk100.github.io/2018/01/14/Axure学习小记/</id>
    <published>2018-01-14T12:30:33.000Z</published>
    <updated>2018-01-14T13:51:16.341Z</updated>
    
    <content type="html"><![CDATA[<p>按住Ctrl时，可以旋转<br>按住Ctrl时，拖动曲线<br>右键转换曲线的类型</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;按住Ctrl时，可以旋转&lt;br&gt;按住Ctrl时，拖动曲线&lt;br&gt;右键转换曲线的类型&lt;/p&gt;

      
    
    </summary>
    
    
      <category term="Axure" scheme="https://kxbk100.github.io/tags/Axure/"/>
    
  </entry>
  
  <entry>
    <title>【构建之法】 第4章 两人合作</title>
    <link href="https://kxbk100.github.io/2017/12/12/%E3%80%90%E6%9E%84%E5%BB%BA%E4%B9%8B%E6%B3%95%E3%80%91-%E7%AC%AC4%E7%AB%A0-%E4%B8%A4%E4%BA%BA%E5%90%88%E4%BD%9C/"/>
    <id>https://kxbk100.github.io/2017/12/12/【构建之法】-第4章-两人合作/</id>
    <published>2017-12-11T16:46:29.000Z</published>
    <updated>2017-12-11T17:26:04.411Z</updated>
    
    <content type="html"><![CDATA[<h3 id="代码风格规范"><a href="#代码风格规范" class="headerlink" title="代码风格规范"></a>代码风格规范</h3><blockquote><ul><li>4个空格的缩进</li><li>每个{}独占一行</li><li>不要把多个变量定义在一行上</li><li>一个类型的成员变量用<code>m_name</code>来命名</li><li><code>Pascal</code>：所有的类型/类/函数名</li><li><code>lowerCamel</code>：变量</li><li>注释是为了解释程序做什么（What），为什么这么做（Why），以及要特别注意的地方，只用ASCII字符，不要用中文</li></ul></blockquote><h3 id="代码设计规范"><a href="#代码设计规范" class="headerlink" title="代码设计规范"></a>代码设计规范</h3><blockquote><ul><li>函数：只做一件事，并且要做好</li><li>单一出口</li><li>不要在构造函数中做复杂的操作，简单初始化所有的数据成员即可</li></ul></blockquote><h3 id="代码复审"><a href="#代码复审" class="headerlink" title="代码复审"></a>代码复审</h3><blockquote><p>看代码是否在代码规范的框架内正确地解决了问题</p><p>长远的问题</p><ul><li>这么修改之后，有没有别的功能会受影响</li><li>项目中还有别的地方需要类似的修改吗</li><li>有没有留下足够的说明，让将来维护代码时不会出现问题</li><li>对于这样的修改，有没有别的成员需要告知</li><li>导致问题的根本原因是什么？我们以后如何能自动避免这样的情况再次出现</li></ul></blockquote><h3 id="代码复审的核查表"><a href="#代码复审的核查表" class="headerlink" title="代码复审的核查表"></a>代码复审的核查表</h3>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;代码风格规范&quot;&gt;&lt;a href=&quot;#代码风格规范&quot; class=&quot;headerlink&quot; title=&quot;代码风格规范&quot;&gt;&lt;/a&gt;代码风格规范&lt;/h3&gt;&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;4个空格的缩进&lt;/li&gt;
&lt;li&gt;每个{}独占一行&lt;/li&gt;
&lt;li&gt;
      
    
    </summary>
    
    
      <category term="构建之法" scheme="https://kxbk100.github.io/tags/%E6%9E%84%E5%BB%BA%E4%B9%8B%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>【构建之法】 第3章 软件工程师的成长</title>
    <link href="https://kxbk100.github.io/2017/12/08/%E3%80%90%E6%9E%84%E5%BB%BA%E4%B9%8B%E6%B3%95%E3%80%91-%E7%AC%AC3%E7%AB%A0-%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%B8%88%E7%9A%84%E6%88%90%E9%95%BF/"/>
    <id>https://kxbk100.github.io/2017/12/08/【构建之法】-第3章-软件工程师的成长/</id>
    <published>2017-12-07T16:10:38.000Z</published>
    <updated>2017-12-07T16:25:12.508Z</updated>
    
    <content type="html"><![CDATA[<h3 id="软件工程师的成长"><a href="#软件工程师的成长" class="headerlink" title="软件工程师的成长"></a>软件工程师的成长</h3><blockquote><ul><li>积累软件开发相关的知识，提升技术技能</li><li>积累问题领域的知识和经验</li><li>对通用的软件设计思想和软件工程思想的理解</li><li>提升职业技能</li><li>实际成果</li></ul></blockquote><h3 id="软件工程师的思维思维误区"><a href="#软件工程师的思维思维误区" class="headerlink" title="软件工程师的思维思维误区"></a>软件工程师的思维思维误区</h3><h4 id="分析麻痹"><a href="#分析麻痹" class="headerlink" title="分析麻痹"></a>分析麻痹</h4><h4 id="不分主次，想解决所有依赖问题"><a href="#不分主次，想解决所有依赖问题" class="headerlink" title="不分主次，想解决所有依赖问题"></a>不分主次，想解决所有依赖问题</h4><h4 id="过早优化"><a href="#过早优化" class="headerlink" title="过早优化"></a>过早优化</h4><h4 id="过早扩大化-泛华"><a href="#过早扩大化-泛华" class="headerlink" title="过早扩大化/泛华"></a>过早扩大化/泛华</h4><blockquote><p>画扇面——调侃目标和远景</p></blockquote><h3 id="技能的反面"><a href="#技能的反面" class="headerlink" title="技能的反面"></a>技能的反面</h3><blockquote><p>通过不断的练习，把低层次的问题解决，变成不用经过大脑的自动操作，然后才有时间和脑力来解决较高层次的问题</p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;软件工程师的成长&quot;&gt;&lt;a href=&quot;#软件工程师的成长&quot; class=&quot;headerlink&quot; title=&quot;软件工程师的成长&quot;&gt;&lt;/a&gt;软件工程师的成长&lt;/h3&gt;&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;积累软件开发相关的知识，提升技术技能&lt;/li&gt;
&lt;li
      
    
    </summary>
    
    
      <category term="构建之法" scheme="https://kxbk100.github.io/tags/%E6%9E%84%E5%BB%BA%E4%B9%8B%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>【构建之法】 第2章 个人技术和流程</title>
    <link href="https://kxbk100.github.io/2017/12/07/%E3%80%90%E6%9E%84%E5%BB%BA%E4%B9%8B%E6%B3%95%E3%80%91-%E7%AC%AC2%E7%AB%A0-%E4%B8%AA%E4%BA%BA%E6%8A%80%E6%9C%AF%E5%92%8C%E6%B5%81%E7%A8%8B/"/>
    <id>https://kxbk100.github.io/2017/12/07/【构建之法】-第2章-个人技术和流程/</id>
    <published>2017-12-07T14:44:01.000Z</published>
    <updated>2017-12-07T16:21:39.242Z</updated>
    
    <content type="html"><![CDATA[<h3 id="单元测试"><a href="#单元测试" class="headerlink" title="单元测试"></a>单元测试</h3><h4 id="单元测试-1"><a href="#单元测试-1" class="headerlink" title="单元测试"></a>单元测试</h4><h4 id="回归测试"><a href="#回归测试" class="headerlink" title="回归测试"></a>回归测试</h4><blockquote><p>回退操作</p></blockquote><h3 id="效能分析工具"><a href="#效能分析工具" class="headerlink" title="效能分析工具"></a>效能分析工具</h3><blockquote><p>先用抽样的方法找到效能瓶颈所在，然后对特定的模块用代码注入的方法进行详细分析</p></blockquote><h3 id="个人开发流程"><a href="#个人开发流程" class="headerlink" title="个人开发流程"></a>个人开发流程</h3><h4 id="任务清单"><a href="#任务清单" class="headerlink" title="任务清单"></a>任务清单</h4><blockquote><p>计划</p><ul><li>明确需求和其他相关因素，指明时间成本和依赖关系</li></ul><p>开发</p><ul><li>分析需求</li><li>生成设计文档</li><li>设计复审（和同事审核设计文档）</li><li>代码规范（为目前的开发定制合适的规范）</li><li>具体设计</li><li>具体编码</li><li>代码复审</li><li>测试（包括自测，修改代码，提交修改）</li><li>记录用时</li></ul><p>报告</p><ul><li>测试报告</li><li>计算工作量</li><li>事后总结</li><li>提出过程改进计划</li></ul></blockquote><h3 id="软件设计的原则"><a href="#软件设计的原则" class="headerlink" title="软件设计的原则"></a>软件设计的原则</h3><h4 id="单一职责原则"><a href="#单一职责原则" class="headerlink" title="单一职责原则"></a>单一职责原则</h4><blockquote><p>一个模块（类）应该只有一个导致它变化的原因，一个模块应该完全对某个功能负责</p></blockquote><h4 id="开放-封闭原则"><a href="#开放-封闭原则" class="headerlink" title="开放-封闭原则"></a>开放-封闭原则</h4><blockquote><ul><li>允许拓展。当应用的需求发生改变时，我们可以对模块进行拓展，从而改变模块的功能</li><li>不允许修改。对模块行为进行拓展时，不必改变模块的本身</li></ul></blockquote><h3 id="程序的健壮性"><a href="#程序的健壮性" class="headerlink" title="程序的健壮性"></a>程序的健壮性</h3><h4 id="数据"><a href="#数据" class="headerlink" title="数据"></a>数据</h4><blockquote><p>属性拓展</p><ul><li>超过64位的数字</li></ul><p>数量拓展</p><ul><li>十万条数据</li></ul><p>维度拓展</p><ul><li>多维数组</li></ul><p>其他属性拓展</p></blockquote><h4 id="需求"><a href="#需求" class="headerlink" title="需求"></a>需求</h4><blockquote><p>形象的显示数据处理的过程</p><p>维度拓展</p><p>数量拓展</p><p>增量改进</p></blockquote><h4 id="用户"><a href="#用户" class="headerlink" title="用户"></a>用户</h4><blockquote><p>让用户更喜欢这个软件</p><ul><li>记住上次的状态</li><li>自动展现上次文档最后编辑的地方</li></ul><p>多用户</p><p>多语言</p><p>安全性</p></blockquote><h4 id="软件构建"><a href="#软件构建" class="headerlink" title="软件构建"></a>软件构建</h4><blockquote><p>平台的迁移</p><p>多语言接口</p><p>增量升级部分模块</p></blockquote><h3 id="实践"><a href="#实践" class="headerlink" title="实践"></a>实践</h3><h4 id="工作的细分"><a href="#工作的细分" class="headerlink" title="工作的细分"></a>工作的细分</h4><blockquote><p>基本功能</p><p>拓展功能</p><p>高级功能</p></blockquote><h4 id="如何保证质量——回归测试"><a href="#如何保证质量——回归测试" class="headerlink" title="如何保证质量——回归测试"></a>如何保证质量——回归测试</h4><blockquote><p>保证在加入新功能的过程中，已有的功能可继续工作，我们需要建立起一系列测试文件</p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;单元测试&quot;&gt;&lt;a href=&quot;#单元测试&quot; class=&quot;headerlink&quot; title=&quot;单元测试&quot;&gt;&lt;/a&gt;单元测试&lt;/h3&gt;&lt;h4 id=&quot;单元测试-1&quot;&gt;&lt;a href=&quot;#单元测试-1&quot; class=&quot;headerlink&quot; title=&quot;单元测试&quot;
      
    
    </summary>
    
    
      <category term="构建之法" scheme="https://kxbk100.github.io/tags/%E6%9E%84%E5%BB%BA%E4%B9%8B%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>ThinkPHP学习小记</title>
    <link href="https://kxbk100.github.io/2017/11/28/ThinkPHP%E5%AD%A6%E4%B9%A0%E5%B0%8F%E8%AE%B0/"/>
    <id>https://kxbk100.github.io/2017/11/28/ThinkPHP学习小记/</id>
    <published>2017-11-28T08:32:00.000Z</published>
    <updated>2017-11-28T12:26:50.857Z</updated>
    
    <content type="html"><![CDATA[<h3 id="ID不从1开始"><a href="#ID不从1开始" class="headerlink" title="ID不从1开始"></a>ID不从1开始</h3><blockquote><p><code>truncate table 你的表名</code></p></blockquote><h3 id="无法访问"><a href="#无法访问" class="headerlink" title="无法访问"></a>无法访问</h3><blockquote><p>可能保存了带bom的utf编码</p></blockquote><h3 id="部署到iis服务器"><a href="#部署到iis服务器" class="headerlink" title="部署到iis服务器"></a>部署到iis服务器</h3><blockquote><p>将runtime设定到支持写入的目录</p></blockquote><h3 id="数据不为空显示"><a href="#数据不为空显示" class="headerlink" title="数据不为空显示"></a>数据不为空显示</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 不等于 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">if</span> <span class="attr">condition</span>=<span class="string">"$result[0]['jiyao_id'] neq null"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span> <span class="attr">style</span>=<span class="string">"vertical-align: middle;text-align:center;width: 20%"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">span</span>&gt;</span><span class="tag">&lt;<span class="name">b</span>&gt;</span>机要编号<span class="tag">&lt;/<span class="name">b</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span> <span class="attr">class</span>=<span class="string">"description"</span>&gt;</span>&#123;$result[0]['jiyao_id']&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="1-0转换"><a href="#1-0转换" class="headerlink" title="1 0转换"></a>1 0转换</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 字符串用'' --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">if</span> <span class="attr">condition</span>=<span class="string">"$student.is_searched eq 1"</span>&gt;</span>已查询<span class="tag">&lt;<span class="name">else</span>/&gt;</span>未查询<span class="tag">&lt;/<span class="name">if</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;ID不从1开始&quot;&gt;&lt;a href=&quot;#ID不从1开始&quot; class=&quot;headerlink&quot; title=&quot;ID不从1开始&quot;&gt;&lt;/a&gt;ID不从1开始&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;truncate table 你的表名&lt;/code&gt;&lt;/p&gt;

      
    
    </summary>
    
    
      <category term="PHP" scheme="https://kxbk100.github.io/tags/PHP/"/>
    
      <category term="ThinkPHP" scheme="https://kxbk100.github.io/tags/ThinkPHP/"/>
    
      <category term="MySQL" scheme="https://kxbk100.github.io/tags/MySQL/"/>
    
  </entry>
  
  <entry>
    <title>Hexo使用心得</title>
    <link href="https://kxbk100.github.io/2017/11/28/Hexo%E4%BD%BF%E7%94%A8%E5%BF%83%E5%BE%97/"/>
    <id>https://kxbk100.github.io/2017/11/28/Hexo使用心得/</id>
    <published>2017-11-27T17:31:00.000Z</published>
    <updated>2017-12-07T16:09:55.512Z</updated>
    
    <content type="html"><![CDATA[<h3 id="新建文章"><a href="#新建文章" class="headerlink" title="新建文章"></a>新建文章</h3><blockquote><p><code>hexo new &quot;Hexo使用心得&quot;</code></p></blockquote><h3 id="上传图片到github并使用"><a href="#上传图片到github并使用" class="headerlink" title="上传图片到github并使用"></a>上传图片到github并使用</h3><blockquote><ul><li>将<code>_config.yml</code>中有的<code>post_asset_folder</code>设置为<code>true</code></li><li>在<code>hexo</code>的目录下执行<code>npm install https://github.com/CodeFalling/hexo-asset-image --save</code></li><li>完成安装后用<code>hexo</code>新建文章的时候会发现<code>_posts</code>目录下面会多出一个和文章名字一样的文件夹</li><li>使用<code>![test](Hexo使用心得/test.jpg)</code>就可以插入图片。其中<code>[]</code>里面不写文字则没有图片标题</li></ul></blockquote><h3 id="Hexo-admin"><a href="#Hexo-admin" class="headerlink" title="Hexo-admin"></a>Hexo-admin</h3><blockquote><p>本地的文章编辑器，不支持在线<code>/admin</code>访问，<code>github.io</code>都是静态界面</p></blockquote><h3 id="更新文章"><a href="#更新文章" class="headerlink" title="更新文章"></a>更新文章</h3><blockquote><p><code>hexo d -g</code></p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;新建文章&quot;&gt;&lt;a href=&quot;#新建文章&quot; class=&quot;headerlink&quot; title=&quot;新建文章&quot;&gt;&lt;/a&gt;新建文章&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;hexo new &amp;quot;Hexo使用心得&amp;quot;&lt;/code&gt;&lt;/p&gt;
&lt;/
      
    
    </summary>
    
    
      <category term="Hexo" scheme="https://kxbk100.github.io/tags/Hexo/"/>
    
  </entry>
  
  <entry>
    <title>Java学习小记</title>
    <link href="https://kxbk100.github.io/2017/11/25/Java%E5%AD%A6%E4%B9%A0%E5%B0%8F%E8%AE%B0/"/>
    <id>https://kxbk100.github.io/2017/11/25/Java学习小记/</id>
    <published>2017-11-25T03:50:20.000Z</published>
    <updated>2017-11-27T19:07:29.177Z</updated>
    
    <content type="html"><![CDATA[<h3 id="Scanner"><a href="#Scanner" class="headerlink" title="Scanner"></a>Scanner</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">Scanner s = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line"><span class="comment">//  使用hasNextXxx()方法进行验证，再使用nextXxx()来读取</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//  next()</span></span><br><span class="line"><span class="comment">//  next() 不能得到带有空格的字符串</span></span><br><span class="line"><span class="keyword">import</span> java.util.Scanner; </span><br><span class="line"> </span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ScannerDemo</span> </span>&#123;  </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;  </span><br><span class="line">        Scanner scan = <span class="keyword">new</span> Scanner(System.in); </span><br><span class="line">        <span class="comment">// 从键盘接收数据  </span></span><br><span class="line">        <span class="comment">//next方式接收字符串</span></span><br><span class="line">        System.out.println(<span class="string">"next方式接收："</span>);</span><br><span class="line">        <span class="comment">// 判断是否还有输入</span></span><br><span class="line">        <span class="keyword">if</span>(scan.hasNext())&#123;   </span><br><span class="line">          String str1 = scan.next();</span><br><span class="line">          System.out.println(<span class="string">"输入的数据为："</span>+str1);  </span><br><span class="line">        &#125;  </span><br><span class="line"> </span><br><span class="line">    &#125;  </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//nextLine()</span></span><br><span class="line"><span class="comment">//  以Enter为结束符，可以获得空白</span></span><br><span class="line"><span class="keyword">import</span> java.util.Scanner; </span><br><span class="line"> </span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ScannerDemo</span> </span>&#123;  </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;  </span><br><span class="line">        Scanner scan = <span class="keyword">new</span> Scanner(System.in); </span><br><span class="line">        <span class="comment">// 从键盘接收数据  </span></span><br><span class="line">        <span class="comment">//nextLine方式接收字符串</span></span><br><span class="line">        System.out.println(<span class="string">"nextLine方式接收："</span>);</span><br><span class="line">        <span class="comment">// 判断是否还有输入</span></span><br><span class="line">        <span class="keyword">if</span>(scan.hasNextLine())&#123;   </span><br><span class="line">          String str2 = scan.nextLine();</span><br><span class="line">          System.out.println(<span class="string">"输入的数据为："</span>+str2);  </span><br><span class="line">        &#125;  </span><br><span class="line"> </span><br><span class="line">    &#125;  </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">scanner.close();</span><br></pre></td></tr></table></figure><h3 id="数组大小用size"><a href="#数组大小用size" class="headerlink" title="数组大小用size()"></a>数组大小用size()</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">students.size();</span><br></pre></td></tr></table></figure><h3 id="数组访问用get"><a href="#数组访问用get" class="headerlink" title="数组访问用get()"></a>数组访问用get()</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">temp = students.get(i);</span><br></pre></td></tr></table></figure><h3 id="数组修改用set"><a href="#数组修改用set" class="headerlink" title="数组修改用set()"></a>数组修改用set()</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">students.set(i, stu);</span><br></pre></td></tr></table></figure><h3 id="for的遍历"><a href="#for的遍历" class="headerlink" title="for的遍历"></a>for的遍历</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//打印所有学生的信息</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">displayAllStudent</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (students.size() &gt; <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="keyword">for</span> (Student stu : students) &#123;</span><br><span class="line">            System.out.println(<span class="string">"学号: "</span> + stu.getSno() + <span class="string">"\t姓名: "</span></span><br><span class="line">                    + stu.getSname() + <span class="string">"\t系部: "</span> + stu.getSdept());</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">"数据库中无学生记录!"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="读取文件"><a href="#读取文件" class="headerlink" title="读取文件"></a>读取文件</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 读取文件获得原始数据</span></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">getData</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        FileReader in_ = <span class="keyword">new</span> FileReader(<span class="string">"StudentDAO.txt"</span>);</span><br><span class="line">        BufferedReader in = <span class="keyword">new</span> BufferedReader(in_);</span><br><span class="line">        String line;</span><br><span class="line">        String reg1 = <span class="string">"\\s+"</span>;</span><br><span class="line">        String str[] = <span class="keyword">new</span> String[<span class="number">3</span>];</span><br><span class="line">        <span class="keyword">while</span> ((line = in.readLine()) != <span class="keyword">null</span>) &#123;</span><br><span class="line">            Student temp = <span class="keyword">new</span> Student();</span><br><span class="line">            str = line.split(reg1);</span><br><span class="line">            temp.setSno(str[<span class="number">0</span>]);</span><br><span class="line">            temp.setSname(str[<span class="number">1</span>]);</span><br><span class="line">            temp.setSdept(str[<span class="number">2</span>]);</span><br><span class="line">            students.add(temp);</span><br><span class="line">        &#125;</span><br><span class="line">        in.close();</span><br><span class="line">    &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">        System.out.println(e);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="写入文件"><a href="#写入文件" class="headerlink" title="写入文件"></a>写入文件</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//更新数据库,把数据输入文件</span></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">updateData</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        FileWriter out_ = <span class="keyword">new</span> FileWriter(<span class="string">"StudentDAO.txt"</span>);</span><br><span class="line">        BufferedWriter out = <span class="keyword">new</span> BufferedWriter(out_);</span><br><span class="line">        Student temp = <span class="keyword">new</span> Student();</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; students.size(); i++) &#123;</span><br><span class="line">            temp = students.get(i);</span><br><span class="line">            out.write(temp.getSno() + <span class="string">" "</span> + temp.getSname() + <span class="string">" "</span></span><br><span class="line">                    + temp.getSdept() + <span class="string">"\r\n"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        out.close();</span><br><span class="line">    &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">        System.out.println(e);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="BufferedReader"><a href="#BufferedReader" class="headerlink" title="BufferedReader"></a>BufferedReader</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">do</span> &#123;</span><br><span class="line">    <span class="comment">//从输入流读取一个字符并把该字符作为整数值返回， 当流结束的时候返回 -1</span></span><br><span class="line">    c = (<span class="keyword">char</span>)br.read();</span><br><span class="line">    System.out.println(c);</span><br><span class="line">&#125; <span class="keyword">while</span> (c != <span class="string">'q'</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">do</span> &#123;</span><br><span class="line">    str = br.readLine();</span><br><span class="line">    System.out.println(str);</span><br><span class="line">&#125; <span class="keyword">while</span>(!str.equals(<span class="string">"end"</span>));</span><br></pre></td></tr></table></figure><h3 id="FileInputStream（从文件读取数据）"><a href="#FileInputStream（从文件读取数据）" class="headerlink" title="FileInputStream（从文件读取数据）"></a>FileInputStream（从文件读取数据）</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">InputStream f = <span class="keyword">new</span> FileInputStream(<span class="string">"C:/java/hello"</span>);</span><br><span class="line"></span><br><span class="line">File f = <span class="keyword">new</span> File(<span class="string">"C:/java/hello"</span>);</span><br><span class="line">InputStream out = <span class="keyword">new</span> FileInputStream(f);</span><br></pre></td></tr></table></figure><h3 id="FileOutputStream（向文件中写数据）"><a href="#FileOutputStream（向文件中写数据）" class="headerlink" title="FileOutputStream（向文件中写数据）"></a>FileOutputStream（向文件中写数据）</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">OutputStream f = <span class="keyword">new</span> FileOutputStream(<span class="string">"C:/java/hello"</span>)</span><br><span class="line"></span><br><span class="line">File f = <span class="keyword">new</span> File(<span class="string">"C:/java/hello"</span>);</span><br><span class="line">OutputStream f = <span class="keyword">new</span> FileOutputStream(f);</span><br></pre></td></tr></table></figure><h3 id="读取写入流最后都要close"><a href="#读取写入流最后都要close" class="headerlink" title="读取写入流最后都要close();"></a>读取写入流最后都要close();</h3><h3 id="读写一定要用byte"><a href="#读写一定要用byte" class="headerlink" title="读写一定要用byte"></a>读写一定要用byte</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">byte</span> bWrite[] = &#123; <span class="number">11</span>, <span class="number">21</span>, <span class="number">3</span>, <span class="number">40</span>, <span class="number">5</span> &#125;;</span><br><span class="line"><span class="keyword">byte</span> bWrite[] = <span class="string">"zhouzhiwenishandsome"</span>.getBytes();</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;Scanner&quot;&gt;&lt;a href=&quot;#Scanner&quot; class=&quot;headerlink&quot; title=&quot;Scanner&quot;&gt;&lt;/a&gt;Scanner&lt;/h3&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;
      
    
    </summary>
    
    
      <category term="Java" scheme="https://kxbk100.github.io/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>JavaScript学习小记</title>
    <link href="https://kxbk100.github.io/2017/11/25/JavaScript%E5%AD%A6%E4%B9%A0%E5%B0%8F%E8%AE%B0/"/>
    <id>https://kxbk100.github.io/2017/11/25/JavaScript学习小记/</id>
    <published>2017-11-25T03:50:00.000Z</published>
    <updated>2017-11-29T12:10:07.149Z</updated>
    
    <content type="html"><![CDATA[<h3 id="二级联动"><a href="#二级联动" class="headerlink" title="二级联动"></a>二级联动</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>二级联动<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">form</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">select</span> <span class="attr">name</span>=<span class="string">"province "</span> <span class="attr">id</span>=<span class="string">"province "</span> <span class="attr">onchange</span>=<span class="string">"getCity() "</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"0 "</span>&gt;</span>请选择所在省份<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"直辖市 "</span>&gt;</span>直辖市<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"江苏省 "</span>&gt;</span>江苏省<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"福建省 "</span>&gt;</span>福建省<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"广东省 "</span>&gt;</span>广东省<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"甘肃省 "</span>&gt;</span>甘肃省<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"city "</span> <span class="attr">name</span>=<span class="string">"city "</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"0 "</span>&gt;</span>请选择所在城市<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="undefined">//定义城市数据</span></span><br><span class="line"><span class="undefined">var city = [</span></span><br><span class="line"><span class="undefined">["北京", "天津", "上海", "重庆"],</span></span><br><span class="line"><span class="undefined">["南京", "苏州", "南通", "常州"],</span></span><br><span class="line"><span class="undefined">["福州", "福安", "龙岩", "南平"],</span></span><br><span class="line"><span class="undefined">["广州", "潮阳", "潮州", "澄海"],</span></span><br><span class="line"><span class="undefined">["兰州", "白银", "定西", "敦煌"]</span></span><br><span class="line"><span class="undefined">];</span></span><br><span class="line"><span class="undefined">var value = [</span></span><br><span class="line"><span class="undefined">["Beijing","Tianjing","Shanghai","Chongqing"],</span></span><br><span class="line"><span class="undefined">["Nanjing","Suzhou","Nantong","Changzhou"],</span></span><br><span class="line"><span class="undefined">["Fuzhou","Fuan","Longyan","Nanping"],</span></span><br><span class="line"><span class="undefined">["Guangzhou","Chaoyang","Chaozhou","Chenghai"],</span></span><br><span class="line"><span class="undefined">["Lanzhou","Baiyin","Dingxi","Dunhuang"]</span></span><br><span class="line"><span class="undefined">];</span></span><br><span class="line"><span class="undefined">//选择省下拉框改变时触发</span></span><br><span class="line"><span class="undefined">function getCity() &#123;</span></span><br><span class="line"><span class="undefined">//得到省下拉框dom</span></span><br><span class="line"><span class="undefined">var sltProvince = document.getElementById("province");</span></span><br><span class="line"><span class="undefined">//得到市下拉框dom</span></span><br><span class="line"><span class="undefined">var sltCity = document.getElementById("city");</span></span><br><span class="line"><span class="undefined">//得到指定市的数据通过选择的省的index（index-1是为了排除，请选择省的option）</span></span><br><span class="line"><span class="undefined">var provinceCity = city[sltProvince.selectedIndex - 1];</span></span><br><span class="line"><span class="undefined">var provinceValue = value[sltProvince.selectedIndex - 1];</span></span><br><span class="line"><span class="undefined">//要调试才知道什么意思</span></span><br><span class="line"><span class="undefined">sltCity.length = 1;</span></span><br><span class="line"><span class="xml">//动态给城市下拉框加数据(加<span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">'测试'</span>&gt;</span>测试<span class="tag">&lt;<span class="name">option</span>/&gt;</span>)</span></span><br><span class="line"><span class="undefined">for (var i = 0; i &lt; provinceCity.length; i++) &#123;</span></span><br><span class="line"><span class="undefined">sltCity[i + 1] = new Option(provinceCity[i], provinceValue[i]);</span></span><br><span class="line"><span class="undefined">&#125;</span></span><br><span class="line"><span class="undefined">&#125;</span></span><br><span class="line"><span class="undefined">// 修改的时候既传值又联动，函数后面不需要括号</span></span><br><span class="line"><span class="undefined">window.onload = getCity;</span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;二级联动&quot;&gt;&lt;a href=&quot;#二级联动&quot; class=&quot;headerlink&quot; title=&quot;二级联动&quot;&gt;&lt;/a&gt;二级联动&lt;/h3&gt;&lt;figure class=&quot;highlight html&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;
      
    
    </summary>
    
    
      <category term="JavaScript" scheme="https://kxbk100.github.io/tags/JavaScript/"/>
    
  </entry>
  
  <entry>
    <title>HTML+CSS学习小记</title>
    <link href="https://kxbk100.github.io/2017/11/25/HTML+CSS%E5%AD%A6%E4%B9%A0%E5%B0%8F%E8%AE%B0/"/>
    <id>https://kxbk100.github.io/2017/11/25/HTML+CSS学习小记/</id>
    <published>2017-11-25T03:42:20.000Z</published>
    <updated>2017-11-28T12:26:03.431Z</updated>
    
    <content type="html"><![CDATA[<h3 id="Bootstrap引入"><a href="#Bootstrap引入" class="headerlink" title="Bootstrap引入"></a>Bootstrap引入</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"zh-CN"</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1.0"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"X-UA-Compatible"</span> <span class="attr">content</span>=<span class="string">"ie=edge"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>贴吧后台管理页面<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">href</span>=<span class="string">"../css/bootstrap.min.css"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"../js/jquery.min.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"../js/bootstrap.min.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 页眉 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">header</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 导航条部分 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">nav</span>&gt;</span></span><br><span class="line">            ...</span><br><span class="line">        <span class="tag">&lt;/<span class="name">nav</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">header</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 主要内容 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"container"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"row"</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!-- 左侧目录 --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-xs-12 col-sm-2 col-md-2 col-lg-2"</span>&gt;</span></span><br><span class="line">                ...</span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!-- 右侧主要内容 --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-xs-12 col-sm-10 col-md-10 col-lg-10"</span>&gt;</span></span><br><span class="line">                ...</span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 页尾 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">footer</span>&gt;</span></span><br><span class="line">        ...</span><br><span class="line">    <span class="tag">&lt;/<span class="name">footer</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="制作一个页面的流程"><a href="#制作一个页面的流程" class="headerlink" title="制作一个页面的流程"></a>制作一个页面的流程</h3><blockquote><ul><li>引入框架</li><li>实现页面布局代码</li><li>构建导航的整体架构</li><li>设计标题和导航链接</li><li>设计搜索框和通知系统</li><li>设置管理员登录系统</li><li>设计响应式导航</li><li>左侧边栏设计</li><li>页面主体设计</li></ul></blockquote><h3 id="span1-2-3-4"><a href="#span1-2-3-4" class="headerlink" title="span1/2/3/4"></a>span1/2/3/4</h3><h3 id="ul-unstyled"><a href="#ul-unstyled" class="headerlink" title="ul.unstyled"></a>ul.unstyled</h3><h3 id="ul-inline"><a href="#ul-inline" class="headerlink" title="ul.inline"></a>ul.inline</h3><h3 id="描述-lt-dl-gt-gt-lt-dt-gt-gt-lt-dd-gt"><a href="#描述-lt-dl-gt-gt-lt-dt-gt-gt-lt-dd-gt" class="headerlink" title="描述 &lt;dl&gt; &gt; &lt;dt&gt; &gt; &lt;dd&gt;"></a>描述 <code>&lt;dl&gt; &gt; &lt;dt&gt; &gt; &lt;dd&gt;</code></h3><h3 id="响应式导航条"><a href="#响应式导航条" class="headerlink" title="响应式导航条"></a>响应式导航条</h3><h3 id="Glyphicons-lt-span-gt-或者-lt-a-gt"><a href="#Glyphicons-lt-span-gt-或者-lt-a-gt" class="headerlink" title="Glyphicons &lt;span&gt;或者&lt;a&gt;"></a>Glyphicons <code>&lt;span&gt;或者&lt;a&gt;</code></h3><h3 id="动态模态对话框"><a href="#动态模态对话框" class="headerlink" title="动态模态对话框"></a>动态模态对话框</h3><h3 id="滚动监听"><a href="#滚动监听" class="headerlink" title="滚动监听"></a>滚动监听</h3><h3 id="工具提示框"><a href="#工具提示框" class="headerlink" title="工具提示框"></a>工具提示框</h3><h3 id="弹出框"><a href="#弹出框" class="headerlink" title="弹出框"></a>弹出框</h3><h3 id="状态按钮"><a href="#状态按钮" class="headerlink" title="状态按钮"></a>状态按钮</h3><blockquote><p>加载中…</p></blockquote><h3 id="折叠"><a href="#折叠" class="headerlink" title="折叠"></a>折叠</h3><h3 id="幻灯"><a href="#幻灯" class="headerlink" title="幻灯"></a>幻灯</h3><h3 id="视频响应式"><a href="#视频响应式" class="headerlink" title="视频响应式"></a>视频响应式</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"embed-responsive embed-responsive-16by9"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">iframe</span> <span class="attr">class</span>=<span class="string">"embed-responsive-item"</span> <span class="attr">src</span>=<span class="string">"iqiyi.catilog2015/24551221.swf"</span>&gt;</span><span class="tag">&lt;/<span class="name">iframe</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="扁平化风格页面"><a href="#扁平化风格页面" class="headerlink" title="扁平化风格页面"></a>扁平化风格页面</h3><h3 id="各种风格的按钮"><a href="#各种风格的按钮" class="headerlink" title="各种风格的按钮"></a>各种风格的按钮</h3><h3 id="jQuery插件-DataTables响应式表格"><a href="#jQuery插件-DataTables响应式表格" class="headerlink" title="jQuery插件 DataTables响应式表格"></a>jQuery插件 DataTables响应式表格</h3><blockquote><ul><li>支持及时分页、搜索、排序</li><li>Json、数组、Ajax</li></ul></blockquote><h3 id="可视化图表ECharts"><a href="#可视化图表ECharts" class="headerlink" title="可视化图表ECharts"></a>可视化图表ECharts</h3><h3 id="jQuery-UI-Bootstrap工具"><a href="#jQuery-UI-Bootstrap工具" class="headerlink" title="jQuery UI Bootstrap工具"></a>jQuery UI Bootstrap工具</h3><h3 id="aria-expanded-”false”"><a href="#aria-expanded-”false”" class="headerlink" title="aria-expanded=”false”"></a>aria-expanded=”false”</h3><blockquote><p>aria-expanded表示展开状态。默认为undefined, 表示当前展开状态未知。其它可选值：true表示元素是展开的；false表示元素不是展开的。</p></blockquote><h3 id="aria-hidden字符串"><a href="#aria-hidden字符串" class="headerlink" title="aria-hidden字符串"></a>aria-hidden字符串</h3><blockquote><p>可选值为true和false,true表示元素隐藏(不可见)，false表示元素可见。</p></blockquote><h3 id="快捷键"><a href="#快捷键" class="headerlink" title="快捷键"></a>快捷键</h3><blockquote><ul><li>Ctrl+Shift+Enter 在上一行另起一行</li><li>Ctrl+Enter 光标不在末尾回车</li><li>Ctrl+Backspace 删除一个词</li></ul></blockquote><h3 id="col-xs-n中放图片不生效"><a href="#col-xs-n中放图片不生效" class="headerlink" title="col-xs-n中放图片不生效"></a>col-xs-n中放图片不生效</h3><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">img</span> &#123;</span><br><span class="line"><span class="attribute">display</span>: block;</span><br><span class="line"><span class="attribute">max-width</span>: <span class="number">100%</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="display"><a href="#display" class="headerlink" title="display"></a>display</h3><blockquote><ul><li>block   此元素将显示为块级元素，此元素前后会带有换行符</li><li>inline  默认。此元素会被显示为内联元素，元素前后没有换行符|</li><li>inline-block    行内块元素。（CSS2.1 新增的值）</li></ul></blockquote><h3 id="使用col就要在母元素上清除浮动，因为col栅格也是浮动的"><a href="#使用col就要在母元素上清除浮动，因为col栅格也是浮动的" class="headerlink" title="使用col就要在母元素上清除浮动，因为col栅格也是浮动的"></a>使用col就要在母元素上清除浮动，因为col栅格也是浮动的</h3><h3 id="使用flag覆盖叠加新的属性"><a href="#使用flag覆盖叠加新的属性" class="headerlink" title="使用flag覆盖叠加新的属性"></a>使用flag覆盖叠加新的属性</h3><blockquote><ul><li>css中使用<code>.side-bar-card.flag {}</code>来调用</li><li>html中用<code>&lt;div class=&quot;side-bar-card flag clearfix&quot;&gt;</code></li></ul></blockquote><h3 id="a标签链接不带下划线，并列换行写"><a href="#a标签链接不带下划线，并列换行写" class="headerlink" title="a标签链接不带下划线，并列换行写"></a>a标签链接不带下划线，并列换行写</h3><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">a</span>,</span><br><span class="line"><span class="selector-tag">a</span><span class="selector-pseudo">:hover</span>,</span><br><span class="line"><span class="selector-tag">a</span><span class="selector-pseudo">:visited</span>,</span><br><span class="line"><span class="selector-tag">a</span><span class="selector-pseudo">:link</span>,</span><br><span class="line"><span class="selector-tag">a</span><span class="selector-pseudo">:active</span> &#123;</span><br><span class="line">    <span class="attribute">text-decoration</span>: none;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="line-heigh不要写px"><a href="#line-heigh不要写px" class="headerlink" title="line-heigh不要写px"></a>line-heigh不要写px</h3><h3 id="表格居中"><a href="#表格居中" class="headerlink" title="表格居中"></a>表格居中</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">table</span> <span class="attr">align</span>=<span class="string">"center"</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="bootstrap响应式表格"><a href="#bootstrap响应式表格" class="headerlink" title="bootstrap响应式表格"></a>bootstrap响应式表格</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"table-responsive"</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="表格内容水平垂直居中"><a href="#表格内容水平垂直居中" class="headerlink" title="表格内容水平垂直居中"></a>表格内容水平垂直居中</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">th</span> <span class="attr">style</span>=<span class="string">'text-align: center;'</span>&gt;</span>host<span class="tag">&lt;/<span class="name">th</span>&gt;</span>   水平居中</span><br><span class="line"><span class="tag">&lt;<span class="name">td</span> <span class="attr">rowspan</span>=<span class="string">$row_host1</span> <span class="attr">style</span>=<span class="string">'vertical-align: middle;'</span>&gt;</span>host1<span class="tag">&lt;/<span class="name">td</span>&gt;</span>   垂直居中</span><br><span class="line"><span class="tag">&lt;<span class="name">td</span> <span class="attr">rowspan</span>=<span class="string">$rowspan</span> <span class="attr">style</span>=<span class="string">'vertical-align: middle;text-align: center;'</span>&gt;</span>hello<span class="tag">&lt;/<span class="name">td</span>&gt;</span>  既水平又垂直居中</span><br></pre></td></tr></table></figure><h3 id="图片撑满"><a href="#图片撑满" class="headerlink" title="图片撑满"></a>图片撑满</h3><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">background-size</span>: <span class="selector-tag">cover</span>;</span><br></pre></td></tr></table></figure><h3 id="input-select-textarea-…-form-control"><a href="#input-select-textarea-…-form-control" class="headerlink" title="input/select/textarea/… + .form-control"></a>input/select/textarea/… + .form-control</h3><h3 id="form-group"><a href="#form-group" class="headerlink" title=".form-group"></a>.form-group</h3><blockquote><p>单独的表单控件会被自动赋予一些全局样式。所有设置了<code>.form-control</code>类的<code>&lt;input&gt;、&lt;textarea&gt;和&lt;select&gt;</code>元素都将被默认设置宽度属性为<code>width: 100%;</code>。将<code>label</code>元素和前面提到的控件包裹在<code>.form-group</code>中可以获得最好的排列</p></blockquote><h3 id="响应式表格"><a href="#响应式表格" class="headerlink" title="响应式表格"></a>响应式表格</h3><blockquote><p>将任何<code>.table</code>元素包裹在<code>&lt;div class=&quot;table-responsive&quot;&gt;</code>元素内</p></blockquote><h3 id="垂直方向的内容截断"><a href="#垂直方向的内容截断" class="headerlink" title="垂直方向的内容截断"></a>垂直方向的内容截断</h3><blockquote><p>响应式表格使用了<code>overflow-y: hidden</code>属性，这样就能将超出表格底部和顶部的内容截断。特别是，也可以截断下拉菜单和其他第三方组件</p></blockquote><h3 id="form-inline"><a href="#form-inline" class="headerlink" title=".form-inline"></a>.form-inline</h3><blockquote><ul><li>输入框和单选/多选框控件默认被设置为 width: 100%; 宽度。在内联表单，我们将这些元素的宽度设置为 width: auto;，因此，多个控件可以排列在同一行。根据布局需求，手动设置宽度</li><li>一定要添加<code>label</code>标签，对于内联表单，可以通过为<code>label</code>设置<code>.sr-only</code>类将其隐藏。还有一些辅助技术提供<code>label</code>标签的替代方案，比如<code>aria-label、aria-labelledby</code>或<code>title</code>属性</li></ul></blockquote><h3 id="form-horizontal"><a href="#form-horizontal" class="headerlink" title=".form-horizontal"></a>.form-horizontal</h3><blockquote><p>无需再添加.row了</p></blockquote><h3 id="margin对span无效"><a href="#margin对span无效" class="headerlink" title="margin对span无效"></a>margin对span无效</h3><blockquote><ul><li>display:block;</li><li>line-height</li></ul></blockquote><h3 id="button后退"><a href="#button后退" class="headerlink" title="button后退"></a>button后退</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">"btn btn-danger ycx"</span> <span class="attr">onclick</span>=<span class="string">"javascript :history.back(-1);"</span>&gt;</span>返回<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="居中"><a href="#居中" class="headerlink" title="居中"></a>居中</h3><blockquote><ul><li>文本内容居中：text-center</li><li>图片居中：center-block</li><li>其他类型元素居中：col-md-offset-X</li></ul></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;Bootstrap引入&quot;&gt;&lt;a href=&quot;#Bootstrap引入&quot; class=&quot;headerlink&quot; title=&quot;Bootstrap引入&quot;&gt;&lt;/a&gt;Bootstrap引入&lt;/h3&gt;&lt;figure class=&quot;highlight html&quot;&gt;&lt;table
      
    
    </summary>
    
    
      <category term="HTML" scheme="https://kxbk100.github.io/tags/HTML/"/>
    
      <category term="CSS" scheme="https://kxbk100.github.io/tags/CSS/"/>
    
  </entry>
  
  <entry>
    <title>Android学习小记</title>
    <link href="https://kxbk100.github.io/2017/11/25/Android%E5%AD%A6%E4%B9%A0%E5%B0%8F%E8%AE%B0/"/>
    <id>https://kxbk100.github.io/2017/11/25/Android学习小记/</id>
    <published>2017-11-25T02:31:20.000Z</published>
    <updated>2018-01-14T16:21:08.109Z</updated>
    
    <content type="html"><![CDATA[<h3 id="禁止Android不跟随屏幕密度加载不同文件夹的资源"><a href="#禁止Android不跟随屏幕密度加载不同文件夹的资源" class="headerlink" title="禁止Android不跟随屏幕密度加载不同文件夹的资源"></a>禁止Android不跟随屏幕密度加载不同文件夹的资源</h3><blockquote><p>在AndroidManifest.xml文件中添加android:anyDensity=”false”字段</p></blockquote><h3 id="高分辨率，一般我们把图片丢这里mipmap-hdpi"><a href="#高分辨率，一般我们把图片丢这里mipmap-hdpi" class="headerlink" title="高分辨率，一般我们把图片丢这里mipmap-hdpi"></a>高分辨率，一般我们把图片丢这里mipmap-hdpi</h3><h3 id="调试时默认生成的apk在：app-build-outputs-apk目录下"><a href="#调试时默认生成的apk在：app-build-outputs-apk目录下" class="headerlink" title="调试时默认生成的apk在：app/build/outputs/apk目录下"></a>调试时默认生成的apk在：app/build/outputs/apk目录下</h3><h3 id="Android-Studio-打包时-Signature-Version-V1-V2"><a href="#Android-Studio-打包时-Signature-Version-V1-V2" class="headerlink" title="Android Studio 打包时 Signature Version V1 V2"></a>Android Studio 打包时 Signature Version V1 V2</h3><blockquote><ul><li>同时勾选V1和V2则所有机型都没问题</li><li>生成目录 E:\wamp64\www\EAider\app\release</li></ul></blockquote><h3 id="发布apk做代码混淆-爱加密"><a href="#发布apk做代码混淆-爱加密" class="headerlink" title="发布apk做代码混淆 爱加密"></a>发布apk做代码混淆 爱加密</h3><h3 id="match-parent和fill-parent"><a href="#match-parent和fill-parent" class="headerlink" title="match_parent和fill_parent"></a>match_parent和fill_parent</h3><blockquote><ul><li>fill_parent = match_parent（一般用match_parent）</li><li>wrap_content设置一个视图的尺寸为wrap_content将强制性地使视图扩展以显示全部内容。以TextView和ImageView控件为例，设置为wrap_content将完整显示其内部的文本和图像。布局元素将根据内容更改大小。设置一个视图的尺寸为wrap_content大体等同于设置Windows控件的Autosize属性为True。</li></ul></blockquote><h3 id="layout-gravity和gravity"><a href="#layout-gravity和gravity" class="headerlink" title="layout_gravity和gravity"></a>layout_gravity和gravity</h3><blockquote><ul><li><code>android:gravity</code>属性是对该<code>view</code>中内容的限定，比如一个button上面的text，你可以设置该text相对于view的靠左，靠右等位置</li><li><code>android:layout_gravity</code>是用来设置该view相对与父view的位置，比如一个button在linearlayout里，你想把该button放在linearlayout里靠左、靠右等位置就可以通过该属性设置 </li><li><code>android:gravity</code>用于设置View中内容相对于View组件的对齐方式</li><li><code>android:layout_gravity</code>用于设置View组件相对于Container的对齐方式</li></ul></blockquote><h3 id="线性布局"><a href="#线性布局" class="headerlink" title="线性布局"></a>线性布局</h3><blockquote><ul><li>权重用途很大</li><li>当<code>android:orientation=&quot;vertical&quot;</code>时，只有水平方向的设置才起作用，垂直方向的设置不起作用。即：<code>left,right,center_horizontal</code>是生效的</li><li>当<code>android:orientation=&quot;horizontal&quot;</code>时，只有垂直方向的设置才起作用，水平方向的设置不起作用。即：<code>top,bottom,center_vertical</code>是生效的</li></ul></blockquote><h3 id="分隔线"><a href="#分隔线" class="headerlink" title="分隔线"></a>分隔线</h3><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">View</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">"1px"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:background</span>=<span class="string">"#000000"</span>/&gt;</span></span><br></pre></td></tr></table></figure><h3 id="布局使用RelativeLayout-LinearLayout的weight属性搭配使用"><a href="#布局使用RelativeLayout-LinearLayout的weight属性搭配使用" class="headerlink" title="布局使用RelativeLayout+LinearLayout的weight属性搭配使用"></a>布局使用<code>RelativeLayout+LinearLayout</code>的<code>weight</code>属性搭配使用</h3><h3 id="相对布局广告弹出框Demo"><a href="#相对布局广告弹出框Demo" class="headerlink" title="相对布局广告弹出框Demo"></a>相对布局广告弹出框Demo</h3><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line">&lt;?xml version="1.0" encoding="utf-8"?&gt;</span><br><span class="line"><span class="tag">&lt;<span class="name">RelativeLayout</span> <span class="attr">xmlns:android</span>=<span class="string">"http://schemas.android.com/apk/res/android"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:tools</span>=<span class="string">"http://schemas.android.com/tools"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:id</span>=<span class="string">"@+id/RelativeLayout1"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:background</span>=<span class="string">"#00CCCCFF"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">ImageView</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">"@+id/img1"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:background</span>=<span class="string">"#000"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_centerInParent</span>=<span class="string">"true"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">"200dp"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">"200dp"</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">ImageView</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">"@+id/imgCancle"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_alignRight</span>=<span class="string">"@id/img1"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_alignTop</span>=<span class="string">"@id/img1"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:background</span>=<span class="string">"#5555"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_marginTop</span>=<span class="string">"-15dp"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_marginRight</span>=<span class="string">"-10dp"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">"28dp"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">"28dp"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">RelativeLayout</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="表格布局"><a href="#表格布局" class="headerlink" title="表格布局"></a>表格布局</h3><h3 id="帧布局FrameLayout"><a href="#帧布局FrameLayout" class="headerlink" title="帧布局FrameLayout"></a>帧布局FrameLayout</h3><blockquote><ul><li><code>android:foreground</code>:设置改帧布局容器的前景图像</li><li><code>android:foregroundGravity</code>:设置前景图像显示的位置</li></ul></blockquote><h3 id="网格布局GridLayout"><a href="#网格布局GridLayout" class="headerlink" title="网格布局GridLayout"></a>网格布局GridLayout</h3><blockquote><ul><li>默认每个组件都是占一行一列</li><li>通过<code>android:layout_rowSpan</code>与<code>android:layout_columnSpan</code>设置了组件横跨多行或者多列的话，如果你要让组件填满横越过的行或列的话，需要添加<code>android:layout_gravity = &quot;fill&quot;</code></li></ul></blockquote><h3 id="低版本sdk如何使用GridLayout"><a href="#低版本sdk如何使用GridLayout" class="headerlink" title="低版本sdk如何使用GridLayout"></a>低版本sdk如何使用GridLayout</h3><blockquote><p><code>&lt;android.support.v7.widget.GridLayout&gt;</code>，<code>v7</code>包一般在<code>sdk</code>下的<code>sdk\extras\android\support\v7\gridlayout</code>目录下</p></blockquote><h3 id="几个单位"><a href="#几个单位" class="headerlink" title="几个单位"></a>几个单位</h3><blockquote><ul><li><code>dp(dip): device independent pixels(设备独立像素)</code>，不同设备有不同的显示效果，这个和设备硬件有关，一般我们为了支持WVGA、HVGA和QVGA推荐使用这个，不依赖像素</li><li><code>px: pixels(像素)</code>，不同设备显示效果相同，一般我们HVGA代表320x480像素，这个用的比较多</li><li><code>pt: point</code>，是一个标准的长度单位，1pt＝1/72英寸，用于印刷业，非常简单易用</li><li><code>sp: scaled pixels(放大像素)</code>，主要用于字体显示best for textsize</li></ul></blockquote><h3 id="布局层次越少，性能越好"><a href="#布局层次越少，性能越好" class="headerlink" title="布局层次越少，性能越好"></a>布局层次越少，性能越好</h3><h3 id="设置的drawable并不能自行设置大小，在XML是无法直接设置的，所以需要在Java代码中来进行修改"><a href="#设置的drawable并不能自行设置大小，在XML是无法直接设置的，所以需要在Java代码中来进行修改" class="headerlink" title="设置的drawable并不能自行设置大小，在XML是无法直接设置的，所以需要在Java代码中来进行修改"></a>设置的drawable并不能自行设置大小，在XML是无法直接设置的，所以需要在Java代码中来进行修改</h3><p>### </p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;禁止Android不跟随屏幕密度加载不同文件夹的资源&quot;&gt;&lt;a href=&quot;#禁止Android不跟随屏幕密度加载不同文件夹的资源&quot; class=&quot;headerlink&quot; title=&quot;禁止Android不跟随屏幕密度加载不同文件夹的资源&quot;&gt;&lt;/a&gt;禁止Androi
      
    
    </summary>
    
    
      <category term="Android" scheme="https://kxbk100.github.io/tags/Android/"/>
    
  </entry>
  
</feed>
