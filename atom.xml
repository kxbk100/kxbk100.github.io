<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>冯天祥</title>
  
  <subtitle>前端小白的技术博客</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://fengtx.tk/"/>
  <updated>2020-12-06T14:36:48.565Z</updated>
  <id>http://fengtx.tk/</id>
  
  <author>
    <name>冯天祥</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>区块链及比特币</title>
    <link href="http://fengtx.tk/2020/12/03/yuque/%E5%8C%BA%E5%9D%97%E9%93%BE%E5%8F%8A%E6%AF%94%E7%89%B9%E5%B8%81/"/>
    <id>http://fengtx.tk/2020/12/03/yuque/区块链及比特币/</id>
    <published>2020-12-03T08:07:00.000Z</published>
    <updated>2020-12-06T14:36:48.565Z</updated>
    
    <content type="html"><![CDATA[<p><strong>比特币世界中，私钥就是一切</strong></p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://cdn.nlark.com/yuque/0/2020/png/366539/1606983004441-ee9ab28d-503f-4a9d-831d-248928812d0e.png#align=left&display=inline&height=565&margin=%5Bobject%20Object%5D&name=image.png&originHeight=1130&originWidth=1610&size=920682&status=done&style=none&width=805" alt="image.png" title>                </div>                <div class="image-caption">image.png</div>            </figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://cdn.nlark.com/yuque/0/2020/png/366539/1606983022649-baf1227b-8338-4cc2-bc26-fe83481d436f.png#align=left&display=inline&height=526&margin=%5Bobject%20Object%5D&name=image.png&originHeight=1052&originWidth=1678&size=870298&status=done&style=none&width=839" alt="image.png" title>                </div>                <div class="image-caption">image.png</div>            </figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://cdn.nlark.com/yuque/0/2020/png/366539/1606982885940-e830333e-e8d6-415b-b885-7d43d6762e45.png#align=left&display=inline&height=479&margin=%5Bobject%20Object%5D&name=image.png&originHeight=958&originWidth=1528&size=676040&status=done&style=none&width=764" alt="image.png" title>                </div>                <div class="image-caption">image.png</div>            </figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://cdn.nlark.com/yuque/0/2020/png/366539/1606983291975-10cdeca5-0037-4a6f-a08b-c6b87d922823.png#align=left&display=inline&height=485&margin=%5Bobject%20Object%5D&name=image.png&originHeight=970&originWidth=1560&size=1193346&status=done&style=none&width=780" alt="image.png" title>                </div>                <div class="image-caption">image.png</div>            </figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://cdn.nlark.com/yuque/0/2020/png/366539/1606984403971-870b8fc8-db9f-4d78-bda5-1890cf22afb3.png#align=left&display=inline&height=1386&margin=%5Bobject%20Object%5D&name=image.png&originHeight=1386&originWidth=2356&size=1287474&status=done&style=none&width=2356" alt="image.png" title>                </div>                <div class="image-caption">image.png</div>            </figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://cdn.nlark.com/yuque/0/2020/png/366539/1606984574577-27c7b737-f7ff-4160-8d3f-b8f2e467aa8a.png#align=left&display=inline&height=548&margin=%5Bobject%20Object%5D&name=image.png&originHeight=1096&originWidth=1694&size=989030&status=done&style=none&width=847" alt="image.png" title>                </div>                <div class="image-caption">image.png</div>            </figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://cdn.nlark.com/yuque/0/2020/png/366539/1606984986961-fc824295-4e53-419a-8e91-9a285d6a68f6.png#align=left&display=inline&height=582&margin=%5Bobject%20Object%5D&name=image.png&originHeight=1164&originWidth=1740&size=925711&status=done&style=none&width=870" alt="image.png" title>                </div>                <div class="image-caption">image.png</div>            </figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://cdn.nlark.com/yuque/0/2020/png/366539/1606985247354-95d69def-83f9-4015-bacb-52b804e0725a.png#align=left&display=inline&height=558&margin=%5Bobject%20Object%5D&name=image.png&originHeight=1116&originWidth=1748&size=1622639&status=done&style=none&width=874" alt="image.png" title>                </div>                <div class="image-caption">image.png</div>            </figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://cdn.nlark.com/yuque/0/2020/png/366539/1606987114348-21fd740d-d31a-4c82-a05b-fd57078a821a.png#align=left&display=inline&height=513&margin=%5Bobject%20Object%5D&name=image.png&originHeight=1026&originWidth=1554&size=644452&status=done&style=none&width=777" alt="image.png" title>                </div>                <div class="image-caption">image.png</div>            </figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://cdn.nlark.com/yuque/0/2020/png/366539/1606987240222-2416e31c-c354-42cf-b26b-72524eb14068.png#align=left&display=inline&height=443&margin=%5Bobject%20Object%5D&name=image.png&originHeight=886&originWidth=1580&size=737418&status=done&style=none&width=790" alt="image.png" title>                </div>                <div class="image-caption">image.png</div>            </figure><p>节点数量多的作为主链</p><p>新的币种就是硬分叉</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://cdn.nlark.com/yuque/0/2020/png/366539/1607005532560-ced70a8e-4e5a-4d13-86f5-c0384765230c.png#align=left&display=inline&height=379&margin=%5Bobject%20Object%5D&name=image.png&originHeight=758&originWidth=1240&size=380693&status=done&style=none&width=620" alt="image.png" title>                </div>                <div class="image-caption">image.png</div>            </figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;strong&gt;比特币世界中，私钥就是一切&lt;/strong&gt;&lt;/p&gt;
&lt;figure class=&quot;image-bubble&quot;&gt;
                &lt;div class=&quot;img-lightbox&quot;&gt;
                    &lt;div clas
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Image Compression</title>
    <link href="http://fengtx.tk/2020/11/12/yuque/Image%20Compression/"/>
    <id>http://fengtx.tk/2020/11/12/yuque/Image Compression/</id>
    <published>2020-11-12T07:51:32.000Z</published>
    <updated>2020-12-06T14:36:48.799Z</updated>
    
    <content type="html"><![CDATA[<p>大家都知道图片在现在的网页中占据了很大一部分的内容，在每个页面中大概占到了一半的比例，平均来看的话，任何给定流量的页面，其传输的字节中有 50％是图像，特别是我们 A 站，很多页面完全就是由图片组成的。</p><p>最近在研究这个问题的时候，我会下载一些 A 站线上的图片来实验，对它们进行重新压缩。通常情况下，我可以将图片的大小减半，且不会损失任何的精度。</p><p>我们可以不光局限于开发场景，我们平时一定遇到过上传证件照限制大小的情况，一般情况下我们会求助 Photoshop 或者是美图秀秀之类的第三方图片处理平台，大小虽然减小了，但是精度却常常不尽如人意。</p><p>所以我想说的是我们过去错失了太多保留图片精度的机会，很多图片可以更好地进行压缩，包括：</p><ul><li>使用其他格式</li><li>使用更好的编码器</li><li>优化编码器的设置</li><li>…</li></ul><p>所以这次我主要想探讨下：</p><ul><li>不同图像格式实际占用的字节是怎样分配的</li><li><del>不同图像格式的适用场景</del></li><li>图像编解码器及其原理</li><li>一些流行图像格式鲜为人知的功能</li><li>AVIF</li></ul><table><thead><tr><th>Lossy</th><th>Lossless</th><th>Vector</th></tr></thead><tbody><tr><td>JPEG</td><td>PNG</td><td>SVG</td></tr><tr><td>WebP</td><td>GIF</td><td></td></tr><tr><td></td><td>Also WebP</td></tr></tbody></table><p>如果我们要在计算机上绘制一张图片，我们肯定最先想到的是 SVG，因为如果在条件都满足的情况下，SVG 可以满足在任何分辨率下的显示，作为无损图像，SVG 的尺寸很小，压缩很快，所以它是绘图的理想选择。</p><p>但是有时图像会很复杂，可能会有很多渐变和阴影，对用户来说，在视觉效果不会太糟的情况下，以有损格式存储，文件可能会更小。</p><table><thead><tr><th>Lossy</th><th>Lossless</th><th>Vector</th></tr></thead><tbody><tr><td></td></tr></tbody></table><p>| Increases size with:<br>Sharp edges | Increases size with:<br>Frequent, unpredictable, large changes in color | Increases size with:<br>Number of shapes |<br>| Samll details in otherwise undetailed areas | Large number of colors | Shape complexity |</p><p>对于有损压缩图像：</p><ul><li>很难避免锯齿边缘，对于边缘的处理加大了图像文件的大小</li><li>还有在不用太详尽的地方的一些小细节</li></ul><p>大家可能很难理解，所以过会儿我们会看到几个例子</p><p>对于无损压缩图像：</p><ul><li>问题则是颜色变化，特别是不可预测的那种</li><li>颜色总数也会影响档案大小</li></ul><p>这部分我们也会有些例子</p><p>对于矢量图像：</p><ul><li>文件大小会因形状数和形状复杂性加大</li><li>矢量有一点特别之处，就是形状的复杂性会导致 CPU 使用成本增加，这点与其他格式不同</li></ul><p>所以之后请留意这部分的内容</p><h1 id="Lossy"><a href="#Lossy" class="headerlink" title="Lossy"></a>Lossy</h1><p>这是我在德国租房附近的一处秋日街景，大家通过这个大屏幕看可能比较难辨别，大家有注意到照片的特殊之处吗？</p><ul><li>这张照片的亮度数据是 full HD 1920 x 1080</li><li>但图像中的颜色数据为 96 x 54 只占数据的 0.3％</li></ul><p>大家几乎没留意到，拉近些，我们可以看到，一些围栏周围有些变色，其中一个好像没了</p><ul><li>即使亮度数据仍能给出轮廓</li><li>如果颜色的分辨率很小，颜色会在边界处消失</li></ul><p>这不是因为大家的眼神不好，是因为人眼本来就对颜色的变化非常不敏感，但是非常擅长于观察亮度的变化</p><p>接下来我要把这张照片变一下</p><ul><li>把亮度变成低分辨率</li><li>但颜色变成高分辨率</li></ul><p>大家注意到的第一件事就是这看不清，但数据量是相同的，只是调转了一下</p><p>刚才的图中没有表现的很极端，这张我在图书馆拍的图色彩数据比较复杂</p><p>大家可以看到这本 PHP5 的书，红色和绿色的分界线肉眼可见的模糊了，但是随着我们增加颜色的数据量，图片的再次清晰了起来</p><p>这就是有损编解码器所做的，我们被称之为色度二次采样</p><p>这意味着我们可以省去一些颜色数据从而节省文件的大小，虽然会出现一些褪色，但这几乎不被觉察</p><p><strong>有损编解码器压缩图片除了利用色度二次采样，还有另一种方式</strong></p><p>大家看一下这张图，我对这张图像进行了一些处理，大家能看到我做了什么吗？</p><ul><li>在树之间，有一个非常奇怪的圆圈，这是我画上去的</li><li>我另外还做了一处改动不知道大家发现了没有，在这里，我用噪声替换了亮度数据，但大家起初并没有注意到这个</li></ul><p>让我们看下这个图与原图的差异</p><ul><li>现在，天空中的圆圈很微弱，几乎看不出</li><li>但是底部的亮度噪音，形成了一个巨大的差异</li></ul><p>但是，人的眼睛很糟糕</p><ul><li>只善于看到我们所说的，低频区域的细微变化，像天空，那里没有太多的东西，你就会发现细微的差异</li><li>而很难看到高频区域的变化</li></ul><p>大家知道那里有个圆，但是它的形状融入整个环境，看起来就像是一个灌木丛，所以我们视觉是有盲点的，大脑有自动校正的功能，大脑为我们填补了那里的空白</p><p><strong>这也是有损图像编解码器的一部分</strong></p><ul><li>有损图像编码器就是利用了这些特性，把图像划分成 8x8 的小块</li><li>图像并不是逐个用像素描述，而是用这 64 种 8x8 的小块相乘</li><li>而我们可以使用这些形状自由组合，重建任何 8x8 的图像</li></ul><blockquote><p>8x8 的小块不一定是同一种强度的，每个方块的强度可能不同，甚至可以是负片，但通过自由组合相乘都可以重建任何 8x8 的图像</p></blockquote><blockquote><p><a href="https://jakearchibald.github.io/image-experiments/quant/" target="_blank" rel="noopener">https://jakearchibald.github.io/image-experiments/quant/</a></p><ul><li>woods</li></ul></blockquote><p>这是以前树林的照片，我选一片草地，大家可以看到的，在下方的是所有不同强度的小图形，用于重建该图像，一共 64 种</p><ul><li>如果用低频的，图像就比较模糊</li><li>而当它们变成高频时，图像就变得清晰了</li></ul><p>当我降低画面质量，有损编解码器要做的是</p><ul><li>尝试放弃一些数据，这里也就是 JPEG 质量</li><li>这就是为什么有这些 0，没有使用所有这些形状</li><li>压缩后的图像并不是 100％准确的，这两张并排的图很难看出哪些像素有问题</li><li>但是节省了大量的数据</li></ul><p>让我们再看另一个例子，这是一个弯曲图</p><ul><li>在这种情况下，即使稍微降低一点儿质量，曲线也会很明显的模糊</li><li>特别是在该曲线的两边，都是纯色的情况下，白噪音就很明显</li></ul><p>就像那个天空中的圆圈一样这个弯曲图也算作是低频数据，很容易分辨出来，这就是为什么有损压缩<br>处理纯色旁边的硬线条不是很好</p><p>所以最后我们来看通过两种途径压缩后的图片，</p><p>有损压缩的图片种类只有两种：JPEG、WebP<br>有损压缩的方式只有两种：色度二次采样、减少 8x8 方块</p><table><thead><tr><th><strong>人眼的缺陷</strong></th><th><strong>途径</strong></th><th><strong>结果</strong></th></tr></thead><tbody><tr><td></td><td>色度二次采样</td><td>褪色</td></tr><tr><td></td><td>减少 8x8 方块</td><td>低频：严重模糊</td></tr><tr><td>高频：轻微模糊</td></tr></tbody></table><p>**</p><p>我有个问题<br>我在想 WebP<br>也是这种基于频率的转换<br>所谓的离散余弦转换<br>转换为该频率模式<br>然后将它们加合<br>是的，那就是我们刚刚看到的<br>如果是低噪音<br>WebP 也会用更大的方块<br>但是我不确定<br>是的，WebP 更好些<br>这是有几点要注意<br>就像你所说的<br>它可以使用不同大小的正块<br>当您开始一个方块时<br>可以从附近的方块<br>开始作为起点<br>而且，JPEG 必须对给定通道中<br>每个 8x8 方块使用<br>相同的数学转换方法<br>是吗<br>而 WebP 可以用四种<br>因此，对于多细节区域<br>和少细节区域<br>它可能有不同的策略<br>而且它还有更好的无损压缩功能<br>使用算术压缩而不是 Huffman<br>而且它的后解码过滤器更好<br>所以它更好<br>它还支持 Alpha 透明度<br>而 JPEG 不支持<br>那我为什么浪费时间<br>谈论 JPEG？<br>因为…<br>Safari 不支持 WebP<br>这是唯一不支持它的浏览器<br>因此，这是 JPEG 的唯一好处<br>真的<br>我们仍然可以使用 WebP<br>只要浏览器支持它<br>这是图片元素<br>我们支持<br>支持 WebP 的浏览器<br>也支持使用 JPEG 的<br>Safari 和旧版浏览器<br>在服务器端也有客户提示<br>我不打算讨论它<br>如果您感兴趣<br>我会放一些链接<br>因此，让我们压缩一些图像<br>现在的压缩工具<br>诸如 Photoshop 之类的东西<br>不是特别好<br>这是我们构建<br>Squoosh 的原因之一-<br>不只是我们两个<br>我们是个团队<br>好了，Squoosh.app<br>它具有最新的 WebP 版本<br>也有 MozJPEG<br>来自 Mozilla 的一个<br>非常好的 JPEG 编码器<br>所以我用之前的 F1 图片<br>因为压缩它有点难度<br>我要做的第一件事是将其缩小<br>这样它的大小<br>与网站上显示的大小相同<br>如果您的图片为 1000 CSS 像素<br>但您希望它在 HD 屏幕上看起来不错<br>您想要一个 2000 像素宽的图像<br>然后，您想将其缩小<br>正好是在屏幕上显示的尺寸<br>为了压缩<br>我开始使用 WebP<br>我要做的就是<br>我想之前提到过<br>只是降低质量<br>直到看不清<br>尤其是像这种高密度图像<br>您会惊讶<br>它的质量能低到什么程度<br>您仍然无法看出<br>有件事很诱人<br>但是请不要<br>不要把鼻子贴到屏幕上<br>不要放大<br>因为如果您这样做了<br>它会看起来很糟糕<br>看起来不会很好<br>放大得越多<br>看起来越糟<br>呃，看那个，真恶心<br>老实说，考虑到<br>我们已经减少了 98％的数据<br>即使放大后，仍然看起来不错<br>不是很酷吗<br>是的，不可思议<br>所以，如果有人对你说<br>我从您的网站上下载了一张图片<br>我将其放大了 1000％<br>看起来很糟<br>就说“有病”，然后别理他们<br>因为那不是真正的用户会做的<br>您应该优化一切<br>为的是实际用户<br>因此，请使其大小<br>保持在网站上的大小<br>我研究了一下 WebP 中的<br>一些高级设置<br>因为当我们第一次构建 Squoosh 时<br>我并不知道它们的功能<br>我拿了编解码器所做的<br>制作了 UI</p><ul><li>很多功能</li><li>我不知道它们是干什么的<br>我还做了一些研究<br>有些很有趣的东西：<br>自动调整过滤器<br>这个不错<br>这确实减慢了编码时间<br>但却大大改善了视觉效果<br>该过滤器实际上是<br>一个解码过滤器<br>这可以消除那些模糊的小块块<br>但这会增加编码时间<br>因为它通过查看图像<br>来找出最佳的过滤方式<br>是的，它只是个一位标记<br>或者不是一位，而是两位<br>我想如果是八级的滤镜清晰度<br>应该是三位标记<br>对，是这样的<br>我认为实际上可能还更多<br>实际上可能从 0 到 100<br>可能是一个字节<br>另一个，我一直都知道：<br>它对图像做了很大的改变<br>但是我不知道它在做什么<br>这就是空间噪声整形<br>针对 WebP 可以有<br>四种不同的策略<br>我们是不是拼错了“空间的”<br>哦，也许吧<br>[Surma 笑]<br>哦，这太经典了<br>你知道逗的地方<br>我在笔记中就拼错了<br>好吧，那是一个错误报告<br>无论如何，下一个<br>是空间噪声整形<br>因此，WebP 可以针对图像的不同部分<br>采用这些不同的策略<br>SNS 所做的是改变了<br>这些不同策略之间的极端性<br>因此，较高的 SNS 会将<br>字节从最不需要它的内容中删除<br>并将其提供给最需要的地方<br>这就像 Robin Hood 用于图像压缩<br>在某些图像中<br>将其设置为 100 可产生积极的效果<br>这里没有，对于该图像<br>实际上 50 就相当不错了<br>会不会太高<br>就像设的太高<br>图像反而变差了<br>会的<br>对于这个图像<br>的确会变得更糟<br>有趣<br>如果我在这里极端些<br>就会为道路提供更多数据<br>因为那是小块块所在之处<br>但这会使汽车的轮胎<br>看起来很糟糕<br>我懂了<br>您会开始注意到那些块效应<br>因为它正在将数据从高频区域移走<br>而补充低频区域<br>刚才看到的树林那张<br>实际上，SNS 设为 100 非常有效<br>因为从叶子那里拿走了<br>很多您看不到的白噪音<br>并将其传递到天空区域<br>所以它显得很好<br>我们也有 JPEG<br>只是为了好玩<br>我使 JPEG 与 WebP 的大小相同<br>只是为了显示<br>此处压缩质量的差异<br>所以我必须再次用这个<br>质量下降到大约 40 KB<br>我要去做<br>我说不要做的事<br>就我来说<br>我觉得真的很糟糕<br>但是通过视频压缩<br>可能不那么明显<br>所以我将其放大<br>JPEG 造成了马路上的块状效应<br>这种后果很可怕<br>就像我说的<br>这是低频数据<br>这就像天空中那个圆圈<br>非常明显<br>在黄线周围<br>从黄线到马路的过渡<br>使得丢失数据的地方非常明显<br>您会在那里看到块状效应<br>这就是 WebP 过滤要好得多的地方<br>我只需要增加 JPEG 的大小<br>直到这种可怕的小块块消失<br>在这个时候<br>好像是 WebP 的两倍<br>超过了两倍<br>如果您愿意花时间<br>可以做进一步的改善<br>更高级的设置<br>这里最有趣的高级设置<br>我认为是色度二次采样<br>我们之前讨论过<br>就是减少颜色数据<br>特别是在高密度屏幕上时<br>看不太出来<br>实际上，大多数时候<br>您可以将其设到 4<br>但这张有些特殊<br>对减色比较敏感<br>所以 3 比较好<br>但这敲掉了 10K<br>但值得<br>我也经常将其与<br>单独的色度质量合用<br>这样您就可以只将颜色引入小块块<br>而亮度不变<br>这样数据就少很多<br>那很有意思<br>但我从来没有成功过<br>我尝试过<br>但对结果始终不满意<br>但是的，可以数据可以不同<br>是另一种可能<br>人们可以试一试<br>绝对的<br>在这种情况下，我认为对于<br>WebP 和 JPEG 值得一试<br>因为它的大小<br>只有支持它的浏览器的一半<br>这就是<br>我要谈的有损压缩<br>您说您对这些选项<br>进行了大量的研究<br>那无意义的规范合规性<br>到底是什么？<br>无意义的规范合规是指<br>根据 JPEG 规范的严格规定<br>删除了逐行编码和其他一些内容<br>而这是不应该做的<br>但每个人都支持它<br>而且对文件大小很有用<br>我以为我会让你冷场<br>但你知道答案<br>做得好<br>我没研究过 JPEG<br>但从编码器中了解到的信息<br>我知道了答案<br>无损压缩是一个完全不同的世界<br>无损压缩一个个的描述像素<br>从上到下，从左到右<br>但是与其从头开始描述每种颜色<br>它会使用周围的<br>一些像素进行预测<br>然后只是编码差异<br>可以使用多种策略<br>可以对照左侧的像素<br>上面的像素<br>也可使用其中一些像素的平均值<br>但这里有个小陷阱<br>它无法对每个像素都更改策略<br>因为那样会增加太多数据<br>相反，它必须坚持某一特定的策略<br>直到决定改变策略为止<br>PNG 只能在一开头更改策略<br>WebP 可以对 2D 块定义不同的策略<br>这就是为什么无损压缩器很慢的原因<br>因为它一直在通过<br>这些不同的策略<br>来找出哪种才是最好<br>就像尝试所有组合一样<br>如果其旁边的或上方的<br>像素完全相同<br>这意味着这种压缩效果会很好<br>因为其间没有区别<br>所以很容易压缩<br>这也是为什么无损格式<br>难以处理照片的原因<br>因为有很多自然的颜色变化<br>哦，无损压缩还有另一招<br>如果少于 256 种颜色<br>用颜色表格就行<br>在表格中，它们有各自的编号<br>因此，不用每次<br>说红色，绿色，蓝色和透明<br>只是说：伙计，5 号色<br>好了，把它放在那里<br>压缩效果非常好<br>那么格式之间的差异<br>WebP-没有多少人知道<br>无损的 WebP 格式<br>这像一个完全不同的编解码器<br>实际上，它是一个完全<br>不同的编解码器<br>两者之间的唯一关系是<br>当使用 Alpha 通道进行有损 WebP 时<br>它对 Alpha 通道使用无损格式<br>对大多数人来说毫无意义<br>哦，很高兴知道这个<br>是的，只是更好<br>它有更多的策略<br>可以对 2D 进行处理<br>压缩效果更好<br>但是 Safari 确实需要 PNG<br>我们提到过<br>但永远不要使用 GIF<br>就是请别用<br>永远不要使用它<br>什么都不好<br>真不好<br>因此，请停止使用 GIF<br>让我们将这些内容实践一下<br>现在回到 Squoosh<br>我将使用很多纯色的东西<br>我要感谢 Stephen Waller<br>把他的作品捐给我<br>在这里使用<br>他是个艺术家<br>我以前的同事<br>他制作了这些精美的图画<br>其实，这些是他当时<br>一起工作的队友<br>我没有问他那值熊的轶事<br>那没什么<br>要做的第一件事<br>和以前一样，将其缩小<br>保持在网站上相同的大小<br>在高密度设备中<br>需要使用的缩放比例<br>现在我去使用 WebP<br>因为那是最好的<br>我选择无损<br>是的，完全不同的编解码器<br>很少有人知道<br>但这真的很好<br>我们直接降至 43K<br>有这个“损失一点”的选择<br>我觉得很有趣<br>特棒，是吧<br>它将改变像素<br>使它们更可预测<br>我实际上不喜欢它的视觉效果<br>所以我不太用它<br>但是您的习惯可能有所不同<br>尝试一下会很有趣<br>但记得我之前说过<br>这些格式，如果不超过 256 色<br>会表现不错<br>我们要这样做<br>减少调色板的颜色<br>这张图像看起来没有太多的颜色<br>由于曲线周边的反走样效果<br>从一种颜色过度到另一种颜色<br>有很多细微的变化<br>我也将编解码器变成浏览器 PNG<br>那只是因为压缩特别快<br>当我更改颜色号码时<br>我将得到快速响应<br>我还要关掉抖色<br>如果减少颜色的数量<br>您可以在此处看到<br>这种条纹效果<br>抖色通过点画法<br>消除条纹<br>或用这些点来重新创建阴影<br>超级有效<br>但无损压缩<br>处理单色效果很好<br>因此会增加文件大小<br>因此，除非确实需要<br>否则我会避免使用它<br>这让我印象深刻<br>我通过抖色<br>将几张照片压缩为 PNG<br>如果把它们缩小，足够小<br>实际上看起来<br>和原版几乎一样<br>通常让人不可察觉<br>是的，有时候<br>您需要这样做<br>所以现在和以前一样<br>我将尽可能降低色调<br>直到看起来不好为止<br>这就是我们构建<br>Squoosh 的原因之一<br>因为通过视觉响应做到这一点<br>比让计算机尝试解决这个问题好得多<br>因为它不会做得很好<br>重要的建议<br>和以前一样，不要放大<br>因为它看起来会很糟<br>你可以看到<br>这些生硬的边<br>但是缩小，您几乎注意不到<br>那样就好<br>这就是用户能看到的<br>就可以了<br>我们已经能够将颜色减少到 68 种<br>现在我们要切换回 WebP<br>把效果调高<br>让它使用所有迭代来进行压缩<br>就这样<br>降至 13K<br>棒极了<br>对吧，节省得令人难以置信<br>对于 Safari，我们需要 PNG<br>PNG 压缩器多种多样<br>我们使用 OxiPNG<br>这是一个非常不错的选择<br>它将降至 17K<br>那接近第二，很不错<br>很接近<br>我要推荐 OxiPNG<br>随附的 ImageOptim<br>还有很多其他的 PNG 压缩器<br>我们都想随后添加到 Squoosh 中<br>但还没有<br>能使文件大小进一步减少<br>实际上，仅 3K<br>所以在这个例子中，我忽略它<br>除非页面上有大量图片<br>这种差异加起来会突显<br>否则就关注于 PNG<br>3K 不值得搞得那么复杂<br>因此，与其为特定类型的图像<br>考虑压缩格式<br>我的理解是<br>考虑压缩的实际工作原理<br>并以此作为您的第一个猜测<br>但是正如您之前所说<br>总是值得尝试其他方法<br>因此，我将看一些边的情况<br>来结束此讲座<br>看这个<br>太漂亮了<br>这是 SVG<br>我正要说<br>这看起来像<br>CSS 美术师仅需十亿个 div<br>以及渐变和阴影<br>然后像照片一样逼真的东西<br>就是 CSS<br>差不多就是这么回事<br>但使用了 SVG<br>我认为这是人工创建的<br>是的，非常相似<br>如果我在 SVG OMG 中将其缩小<br>这是我制作的 GUI<br>但是基于 SVGO<br>是一个节点应用<br>我可以将其降到 37K<br>但这太复杂了<br>并使用了很多过滤器<br>调整后就会有问题<br>这还是在高端的 MacBook 上<br>占用了大量 CPU<br>来渲染该图像<br>而在 Squoosh 中<br>有损 WebP 真的很棒，大约 53K<br>它实际上比 SVG 大<br>但是节省 CPU 其实是个更好的决定<br>这很有趣<br>因为那是 Squoosh<br>不允许您量化的东西，对吧？<br>节省 CPU<br>是的<br>如果我们能找到某种方式<br>做到这一点就太好了<br>是的，是比较棘手<br>就这张图片<br>您会注意到加载多慢<br>并且在 SVG OMG 中<br>调整大小的速度多慢<br>所以这是一个好的提示<br>相当于 PNG<br>因为我们不能使用 JPEG<br>因为它具有 alpha 透明性<br>PNG 为 86K<br>而且我不得不减少颜色<br>因为带来很多条纹<br>所以我必须使用抖色<br>这实际上很明显<br>您可以看到这些点<br>那不好，但是不<br>减少色调，将为 300K<br>在这种情况下，您可能会说<br>对不起，Safari 用户<br>您不会获得很好的图像<br>是的<br>但控制文件大小值得<br>我想您也可以使用 SVG<br>因为在图片元素中<br>您可以按优先级顺序指定来源<br>您可以将 WebP 放在首位<br>而将 SVG 放在第二<br>是的，您可以说<br>Safari 用户很可能使用的是高端设备<br>因此 SVG 可能不会太糟<br>但这仍然会使页面上的其他内容变糟<br>就像在高端 MacBook 上，会很糟<br>但是，是的<br>您可以做出那样的判断<br>你可以说那些糟糕的地方<br>比 30K，条纹等好<br>我再举一个例子<br>这是 Steve 的另一幅画<br>有很多纯色<br>因此我的直觉是<br>采用无损格式<br>但是也有很多阴影<br>还有很多渐变<br>同样，有损 WebP 能做到这点<br>降低到 28K<br>如果您选择无损格式<br>即使减少了色调<br>也要 118K，还会有许多条纹<br>所以，这只是工具<br>而不是规则<br>这就是我的主要收获<br>考虑一下编解码器的特长<br>想想它们是如何工作的<br>这样就可以缩小图像<br>请缩小您的图像<br>我真的很喜欢这样交流<br>这就像-<br>对于 203，我们是不是也这样？<br>多些远程教学？<br>因为我不知道什么时候<br>才能回到办公室<br>我本来打算的<br>绝对可以<br>我们设备齐全<br>所以让我们做吧！<br>保持快乐，下次见<br>保持快乐<br>再会<br>[音乐]<br>web.dev LIVE<br>还有更多相关视频</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;大家都知道图片在现在的网页中占据了很大一部分的内容，在每个页面中大概占到了一半的比例，平均来看的话，任何给定流量的页面，其传输的字节中有 50％是图像，特别是我们 A 站，很多页面完全就是由图片组成的。&lt;/p&gt;
&lt;p&gt;最近在研究这个问题的时候，我会下载一些 A 站线上的图片
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Vite分享</title>
    <link href="http://fengtx.tk/2020/11/04/yuque/Vite%E5%88%86%E4%BA%AB/"/>
    <id>http://fengtx.tk/2020/11/04/yuque/Vite分享/</id>
    <published>2020-11-04T06:14:17.000Z</published>
    <updated>2020-12-06T14:36:48.921Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1-什么是-Vite"><a href="#1-什么是-Vite" class="headerlink" title="1 什么是 Vite"></a>1 什么是 Vite</h2><ul><li>在当今主流的 web 项目里，我们大多数情况下会使用现有的脚手架，如 Vue-cli 或者一些公司内部的脚手架</li><li>往下刨刨会发现它们大多基于 webpack 进行开发</li><li>webpack 主要借助胶水代码来组装各模块内容，这样打包出的代码量十分庞大，随着项目的不断迭代更新，随意更改一行代码需要等待的热更新时间会长达数秒甚至十几秒，很大程度上拖累了开发的效率</li><li>Vite 主要解决的是开发环境下的痛点。和其他 CLI 相比，Vite 的冷启动和热更新简直是光速级别的</li></ul><p>Vite 很快</p><p>youyuxi Twitter</p><ul><li>Vite 是一个由原生 ESM 驱动的 Web 开发构建工具</li><li>在开发环境下基于浏览器原生 ES imports 开发，在生产环境下基于 Rollup 打包</li></ul><h2 id="2-Hello-World"><a href="#2-Hello-World" class="headerlink" title="2 Hello World"></a>2 Hello World</h2><h3 id="2-1-setup"><a href="#2-1-setup" class="headerlink" title="2.1 setup"></a>2.1 setup</h3><p>先写个 demo 看看项目的具体实现</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span> yarn create vite-app HelloWorld</span><br><span class="line"><span class="meta">$</span> cd HelloWorld</span><br><span class="line"><span class="meta">$</span> yarn</span><br><span class="line"><span class="meta">$</span> yarn dev</span><br></pre></td></tr></table></figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://i.loli.net/2020/09/17/MSIFKQbRPtATG8c.png#align=left&display=inline&height=697&margin=%5Bobject%20Object%5D&originHeight=697&originWidth=1214&status=done&style=none&width=1214" alt title>                </div>                <div class="image-caption"></div>            </figure><ul><li>初次启动 vite 项目可能会慢一点，会存在一个搜集依赖的过程，但之后的启动基本都是毫秒级别的，随起随用，没有 webpack 那种沉甸甸的感觉</li></ul><h3 id="2-2-index-html"><a href="#2-2-index-html" class="headerlink" title="2.2 index.html"></a>2.2 index.html</h3><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://i.loli.net/2020/09/17/BpRcWDFPmG9ukbA.png#align=left&display=inline&height=394&margin=%5Bobject%20Object%5D&originHeight=394&originWidth=1087&status=done&style=none&width=1087" alt title>                </div>                <div class="image-caption"></div>            </figure><ul><li>如上图，项目已经成功跑起来了，让我们瞅一眼它的项目代码</li><li>可以看到 demo 内部是一个基本的 vue 项目的结构</li><li>根目录的 index.html 里的 script 标签</li><li>目前主流的浏览器都已经支持使用 <code>export</code>、<code>import</code> 的方式导入和导出模块</li><li>浏览器会识别添加 <code>type=&quot;module&quot;</code> 的 <code>&lt;script&gt;</code> 元素，浏览器会把这段内联 script 认为是 <code>ECMAScript</code> 模块，浏览器将对其内部的 <code>import</code> 引用发起 http 请求获取模块内容</li><li>从而实现真正的按需编译，从而在开发阶段抛弃了打包这件事，想用什么直接引即可</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"module"</span> <span class="attr">src</span>=<span class="string">"/src/main.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="2-3-Network"><a href="#2-3-Network" class="headerlink" title="2.3 Network"></a>2.3 Network</h3><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://i.loli.net/2020/09/17/ChmSQnZE7qjocOy.png#align=left&display=inline&height=456&margin=%5Bobject%20Object%5D&originHeight=456&originWidth=948&status=done&style=none&width=948" alt title>                </div>                <div class="image-caption"></div>            </figure><ul><li>发现这些请求好像确实有点不太一样</li><li>没有了 <code>webpack</code> 那种长长的 <code>bundle</code>，变成这种模式</li><li>仔细看会发现每个 Vue 文件被拆成多块部分进行请求，主要通过 type 的类型进行区分，而这里的每一个文件完全是根据项目文件的依赖按需引入的</li></ul><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://i.loli.net/2020/09/17/45DLCvZ1QkpTogN.png#align=left&display=inline&height=243&margin=%5Bobject%20Object%5D&originHeight=243&originWidth=1425&status=done&style=none&width=1425" alt title>                </div>                <div class="image-caption"></div>            </figure><ul><li>点开 <code>main.js</code>，右侧显示的内容和项目中的代码几乎没有区别，唯一变更的地方是模块的导入路径被 vite 拦截修改了</li></ul><p>和启动图上写的那样，让我们修改 <code>HelloWorld.vue</code> 文件来测试下热更新</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://i.loli.net/2020/09/17/z7XDgMjLdWR4kQf.png#align=left&display=inline&height=270&margin=%5Bobject%20Object%5D&originHeight=270&originWidth=1156&status=done&style=none&width=1156" alt title>                </div>                <div class="image-caption"></div>            </figure><ul><li>很不错，在还没反应过来的时候，<code>vite</code> 就完成了热更新，这种开发体验确实很丝滑</li><li>可以看到浏览器新请求了一个文件，后面参数包含了当前的时间戳</li><li>从 type 的参数可以看出 vite 成功识别到了我只更改了 <code>HelloWorld.vue</code> 的 <code>template</code> 部分代码，并也确实只更新了该部分</li><li>这要换做是 <code>webpack</code>，那估计得等好长的编译和打包然后再更新</li><li>Vite 这种拆分文件成多块进行请求的方式也在最大程度上利用了浏览器的缓存功能，也许这就是作者为什么会说 vite 热更新的速度不会随着模块增多而变慢。</li></ul><p>所以 Vite 在此处至少干了两件事：</p><ul><li>一件是拆分了 Vue 的文件内容进行分别请求</li><li>第二是拦截并重写了部分模块的请求路径</li></ul><h2 id="3-Vite-VS-Webpack"><a href="#3-Vite-VS-Webpack" class="headerlink" title="3 Vite VS Webpack"></a>3 Vite VS Webpack</h2><ul><li>我们在说 Vite 的时候一直在挂 Webpack，所以我们很有必要好好的对比下他俩的区别</li><li>但是在聊区别之前，我们先来聊聊模块</li></ul><h3 id="3-1-聊聊模块"><a href="#3-1-聊聊模块" class="headerlink" title="3.1 聊聊模块"></a>3.1 聊聊模块</h3><p>假设有三个 js 文件 a、b、c：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// a.js</span></span><br><span class="line"><span class="keyword">const</span> a = <span class="function"><span class="params">()</span> =&gt;</span> &#123; ... &#125;</span><br><span class="line"><span class="keyword">export</span> &#123; a &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// b.js</span></span><br><span class="line"><span class="keyword">const</span> b = <span class="function"><span class="params">()</span> =&gt;</span> &#123; ... &#125;</span><br><span class="line"><span class="keyword">export</span> &#123; b &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// c.js</span></span><br><span class="line"><span class="keyword">import</span> &#123; a &#125; <span class="keyword">from</span> <span class="string">'./a'</span></span><br><span class="line"><span class="keyword">import</span> &#123; b &#125; <span class="keyword">from</span> <span class="string">'./b'</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> c = <span class="function"><span class="params">()</span> =&gt;</span> a() + b()</span><br><span class="line"><span class="keyword">export</span> &#123; c &#125;</span><br></pre></td></tr></table></figure><p>如果以 c 文件为入口，那么打包就会变成如下结果（简化代码）：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// bundle.js</span></span><br><span class="line"><span class="keyword">const</span> a = <span class="function"><span class="params">()</span> =&gt;</span> &#123; ... &#125;</span><br><span class="line"><span class="keyword">const</span> b = <span class="function"><span class="params">()</span> =&gt;</span> &#123; ... &#125;</span><br><span class="line"><span class="keyword">const</span> c = <span class="function"><span class="params">()</span> =&gt;</span> a() + b()</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> &#123; c &#125;</span><br></pre></td></tr></table></figure><p>如果按照 <code>webpack</code> 的热更新编译原理来说的话</p><ul><li>一旦某个依赖模块发生了改变，例如 a 文件内的代码进行了调整，系统会整体重新编译打包此处的 <code>bundle</code> 文件，并重新发送给浏览器</li><li>当文件中的依赖变得非常多的时候，就算只修改一个文件中的一行代码，整个系统的热更新速度也会变得越来越慢</li></ul><p>那 <code>Vite</code> 的话是直接不用打包，只做编译这一层</p><ul><li>打包的本质无非就是将各个模块集合在一起形成新的 <code>bundle</code>，然后以一定规则读取模块的代码</li><li>当浏览器解析到 <code>ESM</code> 中的 <code>import</code> 时，会自动发起请求读取对应的文件</li><li>在热更新时，a 文件发生了改变，只需要更新 a 文件然后让浏览器重新请求这部分代码，b 文件完全不需要重新编译，可以直接从缓存中读 b 文件的内容</li><li>也不用 <code>webpack</code> 用胶水代码去进行一些 <code>&quot;require&quot;</code>，节省了很多时间</li></ul><h3 id="3-2-对比"><a href="#3-2-对比" class="headerlink" title="3.2 对比"></a>3.2 对比</h3><table><thead><tr><th></th><th>Vite</th><th>Webpack</th></tr></thead><tbody><tr><td>开发环境需打包</td><td>❎</td><td>✅</td></tr><tr><td>生产环境需打包</td><td>✅</td><td>✅</td></tr><tr><td>冷启动速度</td><td>🚀</td><td>🐢</td></tr><tr><td>热更新速度</td><td>🚀🚀</td><td>🐢🐢</td></tr><tr><td>开发环境模块化</td><td>ESM</td><td>胶水代码</td></tr></tbody></table><ul><li>当然我们也得承认 <code>webpack</code> 有在使用一些 <code>tree shaking</code> 等方式去尽力减少包的体积</li><li>但 <code>Vite</code> 的做法完全高了一个维度，根本比不了。不过目前 <code>Vite</code> 这种高效的模块化方式只能用在开发环境，上生产环境还是老老实实打包吧</li></ul><h2 id="4-看看源码"><a href="#4-看看源码" class="headerlink" title="4 看看源码"></a>4 看看源码</h2><p>那么问题来了，vite 内部是咋实现的，是怎么在浏览器里使用 ESM 的呢。</p><p>实际上 vite 在后台起了一个 koa 的服务拦截了浏览器对于模块的请求并且返回它处理后的数据结果。</p><p>结合前文的截图，如下图两块代码所示，可以发现 <code>main.js</code> 文件的内容从被 vite 编译后在 npm 模块引入的路径等方面做了转换。</p><p><code>main.js</code> 编译前 👇</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; createApp &#125; <span class="keyword">from</span> <span class="string">"vue"</span>;</span><br><span class="line"><span class="keyword">import</span> App <span class="keyword">from</span> <span class="string">"./App.vue"</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="string">"./index.css"</span>;</span><br><span class="line"></span><br><span class="line">createApp(App).mount(<span class="string">"#app"</span>);</span><br></pre></td></tr></table></figure><p><code>main.js</code> 编译后 👇</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; createApp &#125; <span class="keyword">from</span> <span class="string">"/@modules/vue.js"</span>;</span><br><span class="line"><span class="keyword">import</span> App <span class="keyword">from</span> <span class="string">"/src/App.vue"</span>;</span><br><span class="line"><span class="keyword">import</span> <span class="string">"/src/index.css?import"</span>;</span><br><span class="line"></span><br><span class="line">createApp(App).mount(<span class="string">"#app"</span>);</span><br></pre></td></tr></table></figure><p>createApp 是 Vue3 新提供的 api 不难理解。重点是路径被拦截重写了，特别是 <code>&#39;vue&#39;</code> 加了一个 <code>/@modules/</code> 的前缀。对于引用 node_modules 模块的路径，vite 都进行替换，增加了 <code>/@modules/</code> 这个前缀，之后浏览器再重新发起 <code>/@modules/xxx</code> 的请求，然后 vite 再拦截，再去访问真正的模块路径，听着似乎有点绕。</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://i.loli.net/2020/09/17/HMj3nr1KLxSazq9.png#align=left&display=inline&height=1048&margin=%5Bobject%20Object%5D&originHeight=1048&originWidth=1182&status=done&style=none&width=1182" alt title>                </div>                <div class="image-caption"></div>            </figure><p>上图是在 <code>vite/dist/node/server/serverPluginModuleRewrite.js</code> 源码中截取的一段代码，从函数名就可以看到获取了请求 body 之后，有一个判断是否为 npm 模块，然后返回重写后的路径。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// vite/dist/node/server/serverPluginModuleRewrite.js</span></span><br><span class="line">exports.resolveImport = <span class="function">(<span class="params">root, importer, id, resolver, timestamp</span>) =&gt;</span> &#123;</span><br><span class="line">    id = resolver.alias(id) || id;</span><br><span class="line">    <span class="keyword">if</span> (utils_1.bareImportRE.test(id)) &#123;</span><br><span class="line">        id = <span class="string">`/@modules/<span class="subst">$&#123;resolver_1.resolveBareModuleRequest(root, id, importer, resolver)&#125;</span>`</span>;</span><br><span class="line">    &#125;</span><br><span class="line">      ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>可以看到这里的 id 增加了 <code>/@modules/</code> 的前缀。</p><p>重写完路径之后，vite 也不会直接不管。在新的路径前面加上 <code>/@modules/</code> 前缀后，浏览器发送这个请求，它会再解析并重新响应，去 <code>node_modules</code> 里找到这个库，再基于库的 package.json 里的 modules 返回内容。</p><p>这部分代码我们可以在 <code>vite/dist/node/server/serverPluginModuleResolve.js</code> 里看到</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://i.loli.net/2020/09/17/NO4vXgJ5jbFHlwY.png#align=left&display=inline&height=1314&margin=%5Bobject%20Object%5D&originHeight=1314&originWidth=1028&status=done&style=none&width=1028" alt title>                </div>                <div class="image-caption"></div>            </figure><h3 id="编译-Vue"><a href="#编译-Vue" class="headerlink" title="编译 Vue"></a>编译 Vue</h3><p>在前文中我们已经发现 vite 会把 Vue 的单文件拆成多个部分分别进行请求访问，比如 template。</p><p>项目文件中的 <code>HelloWorld.vue</code> 👇</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;h1&gt;&#123;&#123; msg &#125;&#125;&lt;/h1&gt;</span><br><span class="line">  &lt;button @click=&quot;count++&quot;&gt;count is: &#123;&#123; count &#125;&#125;&lt;/button&gt;</span><br><span class="line">  &lt;p&gt;</span><br><span class="line">    Edit &lt;code&gt;components/HelloWorld.vue&lt;/code&gt; to test hot module replacement.</span><br><span class="line">  &lt;/p&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">export default &#123;</span><br><span class="line">  name: &quot;HelloWorld&quot;,</span><br><span class="line">  props: &#123;</span><br><span class="line">    msg: String,</span><br><span class="line">  &#125;,</span><br><span class="line">  data() &#123;</span><br><span class="line">    return &#123;</span><br><span class="line">      count: 0,</span><br><span class="line">    &#125;;</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style scoped&gt;</span><br><span class="line">button &#123;</span><br><span class="line">  background-color: lightgreen;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure><p>Vite 编译之后的 <code>HelloWorld.vue</code> 👇</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// http://localhost:3000/src/components/HelloWorld.vue</span></span><br><span class="line"><span class="comment">// script部分</span></span><br><span class="line"><span class="keyword">const</span> __script = &#123;</span><br><span class="line">  name: <span class="string">"HelloWorld"</span>,</span><br><span class="line">  props: &#123;</span><br><span class="line">    msg: <span class="built_in">String</span>,</span><br><span class="line">  &#125;,</span><br><span class="line">  data() &#123;</span><br><span class="line">    <span class="keyword">return</span> &#123;</span><br><span class="line">      count: <span class="number">0</span>,</span><br><span class="line">    &#125;;</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;;</span><br><span class="line"><span class="comment">// style部分</span></span><br><span class="line"><span class="keyword">import</span> <span class="string">"/src/components/HelloWorld.vue?type=style&amp;index=0"</span>;</span><br><span class="line">__script.__scopeId = <span class="string">"data-v-62a9ebed"</span>;</span><br><span class="line"><span class="comment">// template部分</span></span><br><span class="line"><span class="keyword">import</span> &#123; render <span class="keyword">as</span> __render &#125; <span class="keyword">from</span> <span class="string">"/src/components/HelloWorld.vue?type=template"</span>;</span><br><span class="line">__script.render = __render;</span><br><span class="line">__script.__hmrId = <span class="string">"/src/components/HelloWorld.vue"</span>;</span><br><span class="line">__script.__file = <span class="string">"/.../src/components/HelloWorld.vue"</span>;</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> __script;</span><br></pre></td></tr></table></figure><p>如上图的两块代码所示，<code>HelloWorld.vue</code> 真正进行请求时 <code>Vite</code> 会对它做一个编译。一个项目文件中的 Vue 单文件就这样大致被编译成了 script、style、template 三部分，浏览器会先收到含有 script 逻辑的 <code>HelloWorld.vue</code>，然后当解析到样式 style 和 template 部分时，浏览器会再次发起 http 请求来获取相对应的资源，这时候的 vite 会再次拦截并处理这部分。</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://i.loli.net/2020/09/17/neBIiypGXkEgzrH.png#align=left&display=inline&height=742&margin=%5Bobject%20Object%5D&originHeight=742&originWidth=1660&status=done&style=none&width=1660" alt title>                </div>                <div class="image-caption"></div>            </figure><p>那这里是怎么把一个请求拆分成多个的呢，源码在 <code>vite/dist/node/server/serverPluginVue.js</code> 里可以看到。</p><p>注意这个 vuePlugin 函数，在一开始它解析了当前的单文件，然后进到了第一个 <code>if(!query.type)</code> 的里面，通过这个 <code>compileSFCMain</code> 函数进行了一顿操作，这个操作先按下不表。这个操作执行完后，之后再次请求进来的 import 就会携带 type 类型的值，此处就会根据这个 Query 进行分类，根据 Query 的参数不同来做不同的处理。</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://i.loli.net/2020/09/17/LHIpva5hVABjmzF.png#align=left&display=inline&height=1271&margin=%5Bobject%20Object%5D&originHeight=1271&originWidth=1403&status=done&style=none&width=1403" alt title>                </div>                <div class="image-caption"></div>            </figure><p>那这一顿操作的函数是干了什么事呢。其实就是根据当前 .vue 文件的情况生成并注入了这段代码类似的一些信息：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="string">"/src/components/HelloWorld.vue?type=style&amp;index=0"</span>;</span><br><span class="line">__script.__scopeId = <span class="string">"data-v-62a9ebed"</span>;</span><br><span class="line"><span class="keyword">import</span> &#123; render <span class="keyword">as</span> __render &#125; <span class="keyword">from</span> <span class="string">"/src/components/HelloWorld.vue?type=template"</span>;</span><br><span class="line">__script.render = __render;</span><br><span class="line">__script.__hmrId = <span class="string">"/src/components/HelloWorld.vue"</span>;</span><br><span class="line">__script.__file = <span class="string">"/.../src/components/HelloWorld.vue"</span>;</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> __script;</span><br></pre></td></tr></table></figure><p>这样下来整个链路就通了，从一开始访问 .vue 文件，解析后再注入代码进行返回。浏览器解析到此处的两个 <code>import</code> 就会自动发起 http 请求。然后请求又被重新捕获到，又经过这里的代码，再次对请求进行相应返回。这就完美解释了为什么之前开发者工具里可以看到一个 vue 文件请求了三次的事情了。</p><h3 id="热更新"><a href="#热更新" class="headerlink" title="热更新"></a>热更新</h3><p>Vite 主要是通过 WebSocket 来实现热更新的。</p><p>客户端和服务端的代码分别在 <code>vite/dist/client/client.js</code> 和 <code>vite/dist/node/server/serverPluginHmr.js</code> 中。`</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://i.loli.net/2020/09/17/GTrPR3cABXh4nLw.png#align=left&display=inline&height=1216&margin=%5Bobject%20Object%5D&originHeight=1216&originWidth=984&status=done&style=none&width=984" alt title>                </div>                <div class="image-caption"></div>            </figure><p>客户端通过 websocket 监听了更新的文件类型，之后再分别进行处理。这部分在源码中写得也比较清晰，其中对于 vue 组件使用的是 vue3 提供的 HMRRuntime 进行处理的。针对 Vue 组件本身的一些更新，都可以使用 HMRRuntime 提供的方法，也是比较方便的。其他大部分的文件热更新是把 timestamp 塞进 query 里的方式来达到的。</p><p>在服务端，通过 watch 项目文件的变更，然后根据文件的类型：vue 或 js 文件，分别进行热更新通知处理。</p><h2 id="5-结语"><a href="#5-结语" class="headerlink" title="5 结语"></a>5 结语</h2><p>总的来说，vite 还是有点像 webpack-dev-server 这个东西干的事。而且到了生产环境还是也得用 rollup 进行打包，逃不了这一步。但是相比 webapck，它在开发过程中提供的体验真的非常好。而且这也算是一个新鲜的事物，说不准随着 vue3 正式版的推出，vite 会乘一波东风，被越来越多人所关注发现呢。虽然从目前来说，它替代 webpack 不太可能，但从另一个方面来说，它会让开发者去思考 webpack 本身的存在，没准之后会迅速出现个新工具，干掉了 webpack，再解放了一大波生产力呢，在技术迭代偏快的前端届，似乎也不是不可能。但在当下，还是用一种拓展技术视野的角度去看待它吧。<br><a href="https://jelly.jd.com/article/5f6c5650cd232101562cb51e" target="_blank" rel="noopener">https://jelly.jd.com/article/5f6c5650cd232101562cb51e</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;1-什么是-Vite&quot;&gt;&lt;a href=&quot;#1-什么是-Vite&quot; class=&quot;headerlink&quot; title=&quot;1 什么是 Vite&quot;&gt;&lt;/a&gt;1 什么是 Vite&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;在当今主流的 web 项目里，我们大多数情况下会使用现有的脚手架
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>基于Vue 3造轮子</title>
    <link href="http://fengtx.tk/2020/08/10/yuque/%E5%9F%BA%E4%BA%8EVue%203%E9%80%A0%E8%BD%AE%E5%AD%90/"/>
    <id>http://fengtx.tk/2020/08/10/yuque/基于Vue 3造轮子/</id>
    <published>2020-08-10T10:08:19.000Z</published>
    <updated>2020-12-06T14:36:48.556Z</updated>
    
    <content type="html"><![CDATA[<h1 id="1-技术栈"><a href="#1-技术栈" class="headerlink" title="1 技术栈"></a>1 技术栈</h1><ul><li>Vite - 针对 Vue 单页面组件的无打包开发服务器，可以直接在浏览器运行请求的 Vue 文件</li><li>Vue 3.0</li><li>Typescript</li><li>Vue Router 4</li></ul><h1 id="2-任务"><a href="#2-任务" class="headerlink" title="2 任务"></a>2 任务</h1><ul><li>使用 Vite 搭建官网</li><li>Switch 组件</li><li>Button 组件</li><li>Dialog 组件</li><li>Tabs 组件</li><li>发布到 npm</li></ul><h1 id="3-Vue-3-和-Vue-2-的区别"><a href="#3-Vue-3-和-Vue-2-的区别" class="headerlink" title="3 Vue 3 和 Vue 2 的区别"></a>3 Vue 3 和 Vue 2 的区别</h1><p>90% 的写法完全一致，除了以下几点</p><ul><li>Vue 3 的 Template 支持多个根标签，Vue 2 不支持</li><li>Vue 3 有 createApp()，而 Vue 2 的是 new Vue()</li><li>createApp(组件)，new Vue({template, render})</li></ul><h1 id="4-引入-Vue-Router-4"><a href="#4-引入-Vue-Router-4" class="headerlink" title="4 引入 Vue Router 4"></a>4 引入 Vue Router 4</h1><ul><li>使用命令行查看 vue-router 所有版本号：npm info vue-router versions</li><li>yarn add <a href="mailto:vue-router@4.0.0-beta.3" target="_blank" rel="noopener">vue-router@4.0.0-beta.3</a></li></ul><h1 id="5-初始化-vue-router"><a href="#5-初始化-vue-router" class="headerlink" title="5 初始化 vue-router"></a>5 初始化 vue-router</h1><ul><li>新建 history 对象</li><li>新建 router 对象</li><li>引入 TypeScript</li><li>app.use(router)</li><li>添加 <router-view></router-view></li><li>添加 <router-link></router-link></li></ul><h2 id="找不到模块-xxx-vue"><a href="#找不到模块-xxx-vue" class="headerlink" title="找不到模块 xxx.vue"></a>找不到模块 xxx.vue</h2><p>出现原因</p><ul><li>TypeScript 只能理解 .ts 文件，无法理解 .vue 文件</li></ul><p>解决办法</p><ul><li>创建 xxx.d.ts，告诉 TS 如何理解 .vue 文件</li></ul><h1 id="知识点"><a href="#知识点" class="headerlink" title="知识点"></a>知识点</h1><ul><li>先实现手机，还是先实现 PC？ - 先手机！因为 80% 的用户，只用手机上网</li><li>Scss 写&gt; .logo {}，用&gt;选择器比较好，都写 scoped</li><li>写 ts 比较好</li><li>JS 获取页面宽度来确定值</li></ul><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">const width = document.documentElement.clientWidth;</span><br><span class="line">const menuVisible = ref(width &lt;= 500 ? false : true);</span><br></pre></td></tr></table></figure><ul><li>使用 Vite 搭建官网：<a href="https://github.com/FrankFang/fIHOZKRf4eu9/commits/master" target="_blank" rel="noopener">https://github.com/FrankFang/fIHOZKRf4eu9/commits/master</a></li><li>Vue 3 Switch 组件：</li></ul><p>初始代码：<a href="https://github.com/FrankFang/fIHOZKRf4eu9" target="_blank" rel="noopener">https://github.com/FrankFang/fIHOZKRf4eu9</a><br>最终代码：<a href="https://github.com/FrankFang/8pPES5Jg7mjh" target="_blank" rel="noopener">https://github.com/FrankFang/8pPES5Jg7mjh</a><br>commit 历史：<a href="https://github.com/FrankFang/8pPES5Jg7mjh/commits/master" target="_blank" rel="noopener">https://github.com/FrankFang/8pPES5Jg7mjh/commits/master</a></p><ul><li>Vue 3 Button 组件：</li></ul><p>初始代码：<a href="https://github.com/FrankFang/8pPES5Jg7mjh" target="_blank" rel="noopener">https://github.com/FrankFang/8pPES5Jg7mjh</a><br>最终代码：<a href="https://github.com/FrankFang/qjVPO7f89org" target="_blank" rel="noopener">https://github.com/FrankFang/qjVPO7f89org</a><br>commit 历史：<a href="https://github.com/FrankFang/qjVPO7f89org/commits/master" target="_blank" rel="noopener">https://github.com/FrankFang/qjVPO7f89org/commits/master</a></p><ul><li>value=”true” 和 :value=”true” 的区别</li><li>使用 CSS transition 添加过渡动画</li><li>使用 ref 创建内部数据</li><li>框架就是把你框起来：不准改 props</li></ul><h2 id="Vue-3-编程模型"><a href="#Vue-3-编程模型" class="headerlink" title="Vue 3 编程模型"></a>Vue 3 编程模型</h2><ol><li>内部数据</li><li>父子数据：一个环</li></ol><ul><li>使用 \$event：使用 :value 和 @input 让父子组件进行交流(组件通信)，</li><li>使用 v-model：也可以使用 Vue 3 新的 v-model 的 update:xxx 代替</li></ul><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://cdn.nlark.com/yuque/0/2020/png/366539/1597160651887-0c14280d-a7a9-4bce-97fc-94eca1773d6f.png#align=left&display=inline&height=385&margin=%5Bobject%20Object%5D&name=image.png&originHeight=1406&originWidth=1052&size=620307&status=done&style=none&width=288" alt="image.png" title>                </div>                <div class="image-caption">image.png</div>            </figure><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 父组件</span></span><br><span class="line">&lt;!-- :<span class="function"><span class="params">value</span> =&gt;</span> 变量y，value =&gt; 字符串y --&gt;</span><br><span class="line">&lt;Switch :value=<span class="string">"y"</span> <span class="meta">@input</span>=<span class="string">"y = $event"</span> /&gt;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 子组件</span></span><br><span class="line">setup(props, context) &#123;</span><br><span class="line">    <span class="keyword">const</span> toggle = <span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">      context.emit(<span class="string">'input'</span>, !props.value);</span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="keyword">return</span> &#123; toggle &#125;;</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure><h2 id="Vue-2-和-Vue-3-的区别"><a href="#Vue-2-和-Vue-3-的区别" class="headerlink" title="Vue 2 和 Vue 3 的区别"></a>Vue 2 和 Vue 3 的区别</h2><ul><li>新 v-model 代替以前的 v-model 和 .sync</li><li>新增 context.emit（写在 setup 里），与 this.\$emit 作用相同）（写在 methods 里），共存</li><li>不写声明周期函数和 methods 等，全部写在 setup 里面，以后 script 里面只会写 props, components, setup</li></ul><h2 id="Vue-3-属性绑定"><a href="#Vue-3-属性绑定" class="headerlink" title="Vue 3 属性绑定"></a>Vue 3 属性绑定</h2><ul><li>Vue 会把事件默认传给子组件的最外层元素</li><li>默认所有属性都绑定到根元素</li><li>使用 inheritAttrs: false 可以取消默认绑定</li><li>使用 v-bind=”\$attrs” 或者 context.attrs 获取所有属性</li><li>使用 v-bind=”\$attrs” 批量绑定属性</li><li>使用 const {size, level, …xxx} = context.attrs 将属性分开</li></ul><h1 id="props-V-S-attrs"><a href="#props-V-S-attrs" class="headerlink" title="props V.S. attrs"></a>props V.S. attrs</h1><ul><li>props 要先声明才能取值，attrs 不用先声明</li><li>props 不包含事件，attrs 包含</li><li>props 没有声明的属性，会跑到 attrs 里</li><li>props 支持 string 以外的类型，attrs 只有 string 类型</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div :size=&quot;size&quot;&gt;</span><br><span class="line">    &lt;button v-bind=&quot;$attrs&quot;&gt;</span><br><span class="line">      &lt;slot /&gt;</span><br><span class="line">    &lt;/button&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script lang=&quot;ts&quot;&gt;</span><br><span class="line">export default &#123;</span><br><span class="line">  // 不继承属性</span><br><span class="line">  inheritAttrs: false,</span><br><span class="line">  setup(props, context) &#123;</span><br><span class="line">    const &#123; size, ...rest &#125; = context.attrs;</span><br><span class="line">    return &#123; size, rest &#125;;</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><h1 id="UI-库的-CSS-注意事项"><a href="#UI-库的-CSS-注意事项" class="headerlink" title="UI 库的 CSS 注意事项"></a>UI 库的 CSS 注意事项</h1><ul><li>不能使用 scoped<ul><li>因为 data-v-xxx 中的 xxx 每次运行可能不同</li><li>必须输出稳定不变的 class 选择器，方便使用者覆盖</li></ul></li><li>必须加前缀<ul><li>.button 不行，很容易被使用者覆盖</li><li>.gulu-button 可以，不太容易被覆盖</li><li>.theme-link 不行，很容易被使用者覆盖</li><li>.gulu-theme-link 可以，不太容易被覆盖</li></ul></li><li>你的 CSS 绝对不能影响库使用者</li><li>手绘风尝试： Wired Elements</li></ul><h1 id="如何在运行时确认子组件的类型"><a href="#如何在运行时确认子组件的类型" class="headerlink" title="如何在运行时确认子组件的类型"></a>如何在运行时确认子组件的类型</h1><ul><li>default 是一个函数</li><li>检查 context.slots.default() 数组</li></ul><h1 id="如何用-JS-获取插槽内容"><a href="#如何用-JS-获取插槽内容" class="headerlink" title="如何用 JS 获取插槽内容"></a>如何用 JS 获取插槽内容</h1><p>const defaults = context.slots.default()</p><h1 id="使用-Vue-3-遇到-bug"><a href="#使用-Vue-3-遇到-bug" class="headerlink" title="使用 Vue 3 遇到 bug"></a>使用 Vue 3 遇到 bug</h1><ul><li>确定不是自己代码的问题</li><li>用一个例子复现 bug</li><li>把例子链接和 bug 的复现步骤提交给 Vue 团队</li></ul><h1 id="钩子"><a href="#钩子" class="headerlink" title="钩子"></a>钩子</h1><p>onMounted / onUpdated / watchEffect</p><h1 id="TypeScript-泛型"><a href="#TypeScript-泛型" class="headerlink" title="TypeScript 泛型"></a>TypeScript 泛型</h1><p>const indicator = ref<htmldivelement> (null)</htmldivelement></p><h1 id="获取宽高和位置"><a href="#获取宽高和位置" class="headerlink" title="获取宽高和位置"></a>获取宽高和位置</h1><p>const { width, height, left, right } = el.getBoundingClientRect()</p><h1 id="ES-6-析构赋值的重命名语法"><a href="#ES-6-析构赋值的重命名语法" class="headerlink" title="ES 6 析构赋值的重命名语法"></a>ES 6 析构赋值的重命名语法</h1><ul><li>const { left: left1 } = x. getBoundingClientRect()</li><li>const { left: left2 } = y. getBoundingClientRect()</li></ul><p>rollup 不支持 import() 时拼字符串</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;1-技术栈&quot;&gt;&lt;a href=&quot;#1-技术栈&quot; class=&quot;headerlink&quot; title=&quot;1 技术栈&quot;&gt;&lt;/a&gt;1 技术栈&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;Vite - 针对 Vue 单页面组件的无打包开发服务器，可以直接在浏览器运行请求的 Vue 文件&lt;/l
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>React学习小记</title>
    <link href="http://fengtx.tk/2020/05/03/yuque/React%E5%AD%A6%E4%B9%A0%E5%B0%8F%E8%AE%B0/"/>
    <id>http://fengtx.tk/2020/05/03/yuque/React学习小记/</id>
    <published>2020-05-03T14:08:48.000Z</published>
    <updated>2020-12-06T14:36:41.566Z</updated>
    
    <content type="html"><![CDATA[<h1 id="React-文档"><a href="#React-文档" class="headerlink" title="React 文档"></a>React 文档</h1><h2 id="入门"><a href="#入门" class="headerlink" title="入门"></a>入门</h2><ul><li>React 是一个声明式，高效且灵活的用于构建用户界面的 JavaScript 库</li><li>使用 React 可以将一些简短、独立的代码片段组合成复杂的 UI 界面，这些代码片段被称作“组件”</li><li>创建 React 项目，<code>npx create-react-app my-app</code></li><li>ShoppingList 是一个 <strong>React 组件类</strong>，或者说是一个 <strong>React 组件类型</strong></li><li>一个组件接收一些参数，我们把这些参数叫做 <code>props</code></li><li>然后通过 <code>render</code> 方法返回需要展示在屏幕上的视图的层次结构，<code>render</code> 方法的返回值描述了你希望在屏幕上看到的内容</li><li>在 JSX 中你可以任意使用 JavaScript 表达式，只需要用一个大括号把表达式括起来</li><li>在 React 中，有一个命名规范，通常会将代表事件的监听 prop 命名为 <code>on[Event]</code>，将处理事件的监听方法命名为 <code>handle[Event]</code> 这样的格式。</li></ul><h2 id="创建新的-React-应用"><a href="#创建新的-React-应用" class="headerlink" title="创建新的 React 应用"></a>创建新的 React 应用</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">npx create-react-app my-app</span><br><span class="line">cd my-app</span><br><span class="line">yarn start</span><br><span class="line"></span><br><span class="line">// 构建</span><br><span class="line">yarn build</span><br></pre></td></tr></table></figure><h2 id="JSX-简介"><a href="#JSX-简介" class="headerlink" title="JSX 简介"></a>JSX 简介</h2><ul><li>在 React 中配合使用 JSX，JSX 可以很好地描述 UI 应该呈现出它应有交互的本质形式</li><li>JSX 里的 <code>class</code> 变成了 <code>className</code>，而 <code>tabindex</code> 则变为 <code>tabIndex</code></li><li>在 JSX 语法中，你可以在大括号内放置任何有效的 JavaScript 表达式</li><li>建议将内容包裹在括号中，这样可以避免遇到自动插入分号陷阱</li><li>Babel 会把 JSX 转译成一个名为 <code>React.createElement()</code> 函数调用</li></ul><h2 id="元素渲染"><a href="#元素渲染" class="headerlink" title="元素渲染"></a>元素渲染</h2><p>与浏览器的 DOM 元素不同，React 元素是创建开销极小的普通对象，React DOM 会负责更新 DOM 来与 React 元素保持一致</p><h3 id="将一个元素渲染为-DOM"><a href="#将一个元素渲染为-DOM" class="headerlink" title="将一个元素渲染为 DOM"></a>将一个元素渲染为 DOM</h3><p>想要将一个 React 元素渲染到根 DOM 节点中，只需把它们一起传入 <code>ReactDOM.render()</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">const element = &lt;h1&gt;Hello, world&lt;/h1&gt;;</span><br><span class="line">ReactDOM.render(element, document.getElementById(&apos;root&apos;));</span><br></pre></td></tr></table></figure><h3 id="更新已渲染的元素"><a href="#更新已渲染的元素" class="headerlink" title="更新已渲染的元素"></a>更新已渲染的元素</h3><ul><li>React 元素是<a href="https://en.wikipedia.org/wiki/Immutable_object" target="_blank" rel="noopener">不可变对象</a>。一旦被创建，你就无法更改它的子元素或者属性</li><li>一个元素就像电影的单帧：它代表了某个特定时刻的 UI。</li><li>更新 UI 唯一的方式是创建一个全新的元素，并将其传入 <code>ReactDOM.render()</code></li></ul><h3 id="React-只更新它需要更新的部分"><a href="#React-只更新它需要更新的部分" class="headerlink" title="React 只更新它需要更新的部分"></a>React 只更新它需要更新的部分</h3><p>React DOM 会将元素和它的子元素与它们之前的状态进行比较，并只会进行必要的更新来使 DOM 达到预期的状态</p><h2 id="组件-amp-Props"><a href="#组件-amp-Props" class="headerlink" title="组件 &amp; Props"></a>组件 &amp; Props</h2><h3 id="函数组件与-class-组件"><a href="#函数组件与-class-组件" class="headerlink" title="函数组件与 class 组件"></a>函数组件与 class 组件</h3><ul><li>组件允许你将 UI 拆分为独立可复用的代码片段，并对每个片段进行独立构思</li><li>组件，从概念上类似于 JavaScript 函数。它接受任意的入参（即 “props”），并返回用于描述页面展示内容的 React 元素</li></ul><p>函数组件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">function Welcome(props) &#123;</span><br><span class="line">  return (</span><br><span class="line">    &lt;h1&gt;Hello, &#123;props.name&#125;&lt;/h1&gt;;</span><br><span class="line">  )</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>class 组件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">class Welcome extends React.Component &#123;</span><br><span class="line">  render() &#123;</span><br><span class="line">    return (</span><br><span class="line">      &lt;h1&gt;Hello, &#123;this.props.name&#125;&lt;/h1&gt;;</span><br><span class="line">    )</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>上述两个组件在 React 里是等效的</p><h3 id="渲染组件"><a href="#渲染组件" class="headerlink" title="渲染组件"></a>渲染组件</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">function Welcome(props) &#123;</span><br><span class="line">  return &lt;h1&gt;Hello, &#123;props.name&#125;&lt;/h1&gt;;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">const element = &lt;Welcome name=&quot;Sara&quot; /&gt;;</span><br><span class="line">ReactDOM.render(</span><br><span class="line">  element,</span><br><span class="line">  document.getElementById(&apos;root&apos;)</span><br><span class="line">);</span><br></pre></td></tr></table></figure><ul><li>React 元素也可以是用户自定义的组件</li><li>组件名称必须以大写字母开头</li></ul><h3 id="Props-的只读性"><a href="#Props-的只读性" class="headerlink" title="Props 的只读性"></a>Props 的只读性</h3><p><strong>所有 React 组件都必须像纯函数一样保护它们的 props 不被更改</strong></p><h2 id="State-amp-生命周期"><a href="#State-amp-生命周期" class="headerlink" title="State &amp; 生命周期"></a>State &amp; 生命周期</h2><h3 id="State"><a href="#State" class="headerlink" title="State"></a>State</h3><p>State 与 props 类似，但是 state 是私有的，并且完全受控于当前组件。</p><h3 id="将函数组件转换成-class-组件"><a href="#将函数组件转换成-class-组件" class="headerlink" title="将函数组件转换成 class 组件"></a>将函数组件转换成 class 组件</h3><ol><li>创建一个同名的 <a href="https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Classes" target="_blank" rel="noopener">ES6 class</a>，并且继承于 <code>React.Component</code>。</li><li>添加一个空的 <code>render()</code> 方法。</li><li>将函数体移动到 <code>render()</code> 方法之中。</li><li>在 <code>render()</code> 方法中使用 <code>this.props</code> 替换 <code>props</code>。</li><li>删除剩余的空函数声明。</li></ol><h3 id="向-class-组件中添加局部的-state"><a href="#向-class-组件中添加局部的-state" class="headerlink" title="向 class 组件中添加局部的 state"></a>向 class 组件中添加局部的 state</h3><ol><li>把 <code>render()</code> 方法中的 <code>this.props.date</code> 替换成 <code>this.state.date</code></li><li>添加一个 <a href="https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Classes#Constructor" target="_blank" rel="noopener">class 构造函数</a>，然后在该函数中为 <code>this.state</code> 赋初值，Class 组件应该始终使用 <code>props</code> 参数来调用父类的构造函数</li><li>移除 <code>&lt;Clock /&gt;</code> 元素中的 <code>date</code> 属性</li></ol><h3 id="将生命周期方法添加到-Class-中"><a href="#将生命周期方法添加到-Class-中" class="headerlink" title="将生命周期方法添加到 Class 中"></a>将生命周期方法添加到 Class 中</h3><ul><li>当 <code>Clock</code> 组件第一次被渲染到 DOM 中的时候，就为其<a href="https://developer.mozilla.org/en-US/docs/Web/API/WindowTimers/setInterval" target="_blank" rel="noopener">设置一个计时器</a>。这在 React 中被称为“挂载（mount）”</li><li>当 DOM 中 <code>Clock</code> 组件被删除的时候，应该<a href="https://developer.mozilla.org/en-US/docs/Web/API/WindowTimers/clearInterval" target="_blank" rel="noopener">清除计时器</a>。这在 React 中被称为“卸载（umount）”。</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line">import React from &apos;react&apos;;</span><br><span class="line">import ReactDOM from &apos;react-dom&apos;;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">class Clock extends React.Component &#123;</span><br><span class="line">  constructor(props) &#123;</span><br><span class="line">    super(props);</span><br><span class="line">    this.state = &#123; date: new Date() &#125;;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  componentDidMount() &#123;</span><br><span class="line">    this.timerID = setInterval(</span><br><span class="line">      () =&gt; this.tick(),</span><br><span class="line">      1000</span><br><span class="line">    )</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  componentWillMount() &#123;</span><br><span class="line">    clearInterval(this.timerID);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  tick() &#123;</span><br><span class="line">    this.setState(&#123;</span><br><span class="line">      date: new Date()</span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  render() &#123;</span><br><span class="line">    return (</span><br><span class="line">      &lt;div&gt;</span><br><span class="line">        &lt;h1&gt;Hello, world!&lt;/h1&gt;</span><br><span class="line">        &lt;h2&gt;It is &#123;this.state.date.toLocaleTimeString()&#125;.&lt;/h2&gt;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">    );</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">ReactDOM.render(</span><br><span class="line">  &lt;Clock /&gt;,</span><br><span class="line">  document.getElementById(&apos;root&apos;)</span><br><span class="line">);</span><br></pre></td></tr></table></figure><ol><li>当 <code>&lt;Clock /&gt;</code> 被传给 <code>ReactDOM.render()</code>的时候，React 会调用 <code>Clock</code> 组件的<strong>构造函数</strong>。 因为 <code>Clock</code> 需要显示当前的时间，所以它会用一个包含当前时间的对象来初始化 <code>this.state</code>。我们会在之后更新 state。</li><li>之后 React 会调用组件的 <code>render()</code> 方法。这就是　 React 确定该在页面上展示什么的方式。然后　 React 更新 DOM 来匹配 <code>Clock</code> 渲染的输出。</li><li>当 <code>Clock</code> 的输出被插入到 DOM 中后， React 就会调用 <code>ComponentDidMount()</code> 生命周期方法。在这个方法中，<code>Clock</code> 组件向浏览器请求设置一个计时器来每秒调用一次组件的 <code>tick()</code>方法。</li><li>浏览器每秒都会调用一次 <code>tick()</code> 方法。 在这方法之中，<code>Clock</code> 组件会通过调用 <code>setState()</code> 来计划进行一次 UI 更新。得益于 <code>setState()</code> 的调用，React 能够知道 state 已经改变了，然后会重新调用 <code>render()</code> 方法来确定页面上该显示什么。这一次，<code>render()</code> 方法中的 <code>this.state.date</code> 就不一样了，如此以来就会渲染输出更新过的时间。React 也会相应的更新 DOM。</li><li>一旦 <code>Clock</code> 组件从 DOM 中被移除，React 就会调用 <code>componentWillUnmount()</code> 生命周期方法，这样计时器就停止了。</li></ol><h3 id="正确地使用-State"><a href="#正确地使用-State" class="headerlink" title="正确地使用 State"></a>正确地使用 State</h3><ol><li>不要直接修改 State，构造函数是唯一可以给<code>this.state</code>赋值的地方</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">// Wrong</span><br><span class="line">this.state.comment = &apos;Hello&apos;;</span><br><span class="line"></span><br><span class="line">// Correct</span><br><span class="line">this.setState(&#123;comment: &apos;Hello&apos;&#125;);</span><br></pre></td></tr></table></figure><ol start="2"><li>State 的更新可能是异步的，因为 <code>this.props</code> 和 <code>this.state</code> 可能会异步更新，所以你不要依赖他们的值来更新下一个状态</li><li>State 的更新会被合并，可以分别调用 <code>setState()</code> 来单独地更新它们</li></ol><h3 id="数据是向下流动的"><a href="#数据是向下流动的" class="headerlink" title="数据是向下流动的"></a>数据是向下流动的</h3><p>如果你把一个以组件构成的树想象成一个 props 的数据瀑布的话，那么每一个组件的 state 就像是在任意一点上给瀑布增加额外的水源，但是它只能向下流动。</p><h2 id="事件处理"><a href="#事件处理" class="headerlink" title="事件处理"></a>事件处理</h2><ul><li>React 事件的命名采用小驼峰式（camelCase），而不是纯小写</li><li>使用 JSX 语法时你需要传入一个函数作为事件处理函数，而不是一个字符串</li><li>在 React 中另一个不同点是你不能通过返回 <code>false</code> 的方式阻止默认行为。你必须显式的使用 <code>preventDefault</code></li><li>为了在回调中使用 <code>this</code>，在 constructor 中 这个绑定是必不可少的 <code>this.handleClick = this.handleClick.bind(this);</code></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">// 无参数</span><br><span class="line">&lt;button onClick=&#123;activateLasers&#125;&gt;</span><br><span class="line">  Activate Lasers</span><br><span class="line">&lt;/button&gt;</span><br><span class="line"></span><br><span class="line">// 有参数</span><br><span class="line">&lt;button onClick=&#123;this.deleteRow.bind(this, id)&#125;&gt;Delete Row&lt;/button&gt;</span><br></pre></td></tr></table></figure><h2 id="条件渲染"><a href="#条件渲染" class="headerlink" title="条件渲染"></a>条件渲染</h2><ul><li>可以使用变量来储存元素。 它可以帮助你有条件地渲染组件的一部分，而其他的渲染部分并不会因此而改变</li><li>在 JSX 中调用变量使用{XXX}</li><li>使用 JavaScript 运算符<code>if</code>或者条件运算符去创建元素来表现当前的状态，然后让 React 根据它们来更新 UI</li><li>class 组件 if、let、const 等只能写在 Render() {…}中</li><li>组织组件渲染 return null;</li></ul><h2 id="列表-amp-Key"><a href="#列表-amp-Key" class="headerlink" title="列表 &amp; Key"></a>列表 &amp; Key</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">const numbers = [1, 2, 3, 4, 5];</span><br><span class="line">const listItems = numbers.map((number) =&gt;</span><br><span class="line">  &lt;li&gt;&#123;number&#125;&lt;/li&gt;</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line">ReactDOM.render(</span><br><span class="line">  &lt;ul&gt;&#123;listItems&#125;&lt;/ul&gt;,</span><br><span class="line">  document.getElementById(&apos;root&apos;)</span><br><span class="line">);</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">function NumberList(props) &#123;</span><br><span class="line">  const numbers = props.numbers;</span><br><span class="line">  const listItems = numbers.map((number) =&gt;</span><br><span class="line">    &lt;li key=&#123;number.toString()&#125;&gt;</span><br><span class="line">      &#123;number&#125;</span><br><span class="line">    &lt;/li&gt;</span><br><span class="line">  );</span><br><span class="line">  return (</span><br><span class="line">    &lt;ul&gt;&#123;listItems&#125;&lt;/ul&gt;</span><br><span class="line">  );</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">const numbers = [1, 2, 3, 4, 5];</span><br><span class="line">ReactDOM.render(</span><br><span class="line">  &lt;NumberList numbers=&#123;numbers&#125; /&gt;,</span><br><span class="line">  document.getElementById(&apos;root&apos;)</span><br><span class="line">);</span><br></pre></td></tr></table></figure><h3 id="key"><a href="#key" class="headerlink" title="key"></a>key</h3><ul><li>key 帮助 React 识别哪些元素改变了，比如被添加或删除。因此你应当给数组中的每一个元素赋予一个确定的标识</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">const numbers = [1, 2, 3, 4, 5];</span><br><span class="line">const listItems = numbers.map((number) =&gt;</span><br><span class="line">  // 一定要toString()</span><br><span class="line">  &lt;li key=&#123;number.toString()&#125;&gt;</span><br><span class="line">    &#123;number&#125;</span><br><span class="line">  &lt;/li&gt;</span><br><span class="line">);</span><br></pre></td></tr></table></figure><ul><li>一个元素的 key 最好是这个元素在列表中拥有的一个独一无二的字符串。通常，我们使用来自数据 id 来作为元素的 key</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">const todoItems = todos.map((todo) =&gt;</span><br><span class="line">  &lt;li key=&#123;todo.id&#125;&gt;</span><br><span class="line">    &#123;todo.text&#125;</span><br><span class="line">  &lt;/li&gt;</span><br><span class="line">);</span><br></pre></td></tr></table></figure><ul><li>当元素没有确定 id 的时候，万不得已你可以使用元素索引 index 作为 key</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">const todoItems = todos.map((todo, index) =&gt;</span><br><span class="line">  // Only do this if items have no stable IDs</span><br><span class="line">  &lt;li key=&#123;index&#125;&gt;</span><br><span class="line">    &#123;todo.text&#125;</span><br><span class="line">  &lt;/li&gt;</span><br><span class="line">);</span><br></pre></td></tr></table></figure><ul><li>记忆：在 <code>map()</code> 方法中的元素需要设置 key 属性。</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">function ListItem(props) &#123;</span><br><span class="line">  // 正确！这里不需要指定 key：</span><br><span class="line">  return &lt;li&gt;&#123;props.value&#125;&lt;/li&gt;;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">function NumberList(props) &#123;</span><br><span class="line">  const numbers = props.numbers;</span><br><span class="line">  const listItems = numbers.map((number) =&gt;</span><br><span class="line">    // 正确！key 应该在数组的上下文中被指定</span><br><span class="line">    &lt;ListItem key=&#123;number.toString()&#125; value=&#123;number&#125; /&gt;</span><br><span class="line">  );</span><br><span class="line">  return (</span><br><span class="line">    &lt;ul&gt;</span><br><span class="line">      &#123;listItems&#125;</span><br><span class="line">    &lt;/ul&gt;</span><br><span class="line">  );</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">const numbers = [1, 2, 3, 4, 5];</span><br><span class="line">ReactDOM.render(</span><br><span class="line">  &lt;NumberList numbers=&#123;numbers&#125; /&gt;,</span><br><span class="line">  document.getElementById(&apos;root&apos;)</span><br><span class="line">);</span><br></pre></td></tr></table></figure><ul><li>key 只是在兄弟节点之间必须唯一，当我们生成两个不同的数组时，我们可以使用相同的 key 值</li><li>key 会传递信息给 React ，但不会传递给你的组件，所以 组件可以读出 <code>props.id</code>，但是不能读出 <code>props.key</code></li><li>JSX 允许在大括号中嵌入任何表达式</li><li>如果一个 <code>map()</code> 嵌套了太多层级，那可能就是你提取组件的一个好时机</li></ul><h2 id="表单"><a href="#表单" class="headerlink" title="表单"></a>表单</h2><h3 id="input-textarea"><a href="#input-textarea" class="headerlink" title="input/textarea"></a>input/textarea</h3><ul><li>在 React 中，<code>&lt;textarea&gt;</code> 使用 <code>value</code> 属性代替文本内容，这样使用 <code>&lt;textarea&gt;</code> 的表单和使用单行 input 的表单非常类似</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">class NameForm extends React.Component &#123;</span><br><span class="line">  constructor(props) &#123;</span><br><span class="line">    super(props);</span><br><span class="line">    this.state = &#123;value: &apos;&apos;&#125;;</span><br><span class="line"></span><br><span class="line">    this.handleChange = this.handleChange.bind(this);</span><br><span class="line">    this.handleSubmit = this.handleSubmit.bind(this);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  handleChange(event) &#123;</span><br><span class="line">    this.setState(&#123;value: event.target.value&#125;);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  handleSubmit(event) &#123;</span><br><span class="line">    alert(&apos;提交的名字: &apos; + this.state.value);</span><br><span class="line">    // 注意！！！</span><br><span class="line">    event.preventDefault();</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  render() &#123;</span><br><span class="line">    return (</span><br><span class="line">      &lt;form onSubmit=&#123;this.handleSubmit&#125;&gt;</span><br><span class="line">        &lt;label&gt;</span><br><span class="line">          名字:</span><br><span class="line">          &lt;input type=&quot;text&quot; value=&#123;this.state.value&#125; onChange=&#123;this.handleChange&#125; /&gt;</span><br><span class="line">        &lt;/label&gt;</span><br><span class="line">        &lt;input type=&quot;submit&quot; value=&quot;提交&quot; /&gt;</span><br><span class="line">      &lt;/form&gt;</span><br><span class="line">    );</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="select"><a href="#select" class="headerlink" title="select"></a>select</h3><ul><li>React 并不会使用 <code>selected</code> 属性，而是在根 <code>select</code> 标签上使用 <code>value</code> 属性。这在受控组件中更便捷，因为您只需要在根标签中更新它</li><li><code>&lt;input type=&quot;text&quot;&gt;</code>, <code>&lt;textarea&gt;</code> 和 <code>&lt;select&gt;</code> 之类的标签都非常相似—它们都接受一个 <code>value</code> 属性</li><li>可以将数组传递到 <code>value</code> 属性中，以支持在 <code>select</code> 标签中选择多个选项</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;select multiple=&#123;true&#125; value=&#123;[&apos;B&apos;, &apos;C&apos;]&#125;&gt;</span><br></pre></td></tr></table></figure><h3 id="文件-input-标签"><a href="#文件-input-标签" class="headerlink" title="文件 input 标签"></a>文件 input 标签</h3><p>因为它的 value 只读，所以它是 React 中的一个<strong>非受控</strong>组件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;input type=&quot;file&quot; /&gt;</span><br></pre></td></tr></table></figure><h3 id="处理多个输入"><a href="#处理多个输入" class="headerlink" title="处理多个输入"></a>处理多个输入</h3><p>当需要处理多个 <code>input</code> 元素时，我们可以给每个元素添加 <code>name</code> 属性，并让处理函数根据 <code>event.target.name</code> 的值选择要执行的操作</p><h2 id="状态提升"><a href="#状态提升" class="headerlink" title="状态提升"></a>状态提升</h2><p>在 React 中，将多个组件中需要共享的 state 向上移动到它们的最近共同父组件中，便可实现共享 state。这就是所谓的“状态提升”</p><h2 id="组合-vs-继承"><a href="#组合-vs-继承" class="headerlink" title="组合 vs 继承"></a>组合 vs 继承</h2><h3 id="包含关系"><a href="#包含关系" class="headerlink" title="包含关系"></a>包含关系</h3><p><code>&lt;FancyBorder&gt;</code> JSX 标签中的所有内容都会作为一个 <code>children</code> prop 传递给 <code>FancyBorder</code>组件。因为 <code>FancyBorder</code> 将 <code>{props.children}</code> 渲染在一个 <code>&lt;div&gt;</code> 中</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">function SplitPane(props) &#123;</span><br><span class="line">  return (</span><br><span class="line">    &lt;div className=&quot;SplitPane&quot;&gt;</span><br><span class="line">      &lt;div className=&quot;SplitPane-left&quot;&gt;</span><br><span class="line">        &#123;props.left&#125;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">      &lt;div className=&quot;SplitPane-right&quot;&gt;</span><br><span class="line">        &#123;props.right&#125;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">  );</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">function App() &#123;</span><br><span class="line">  return (</span><br><span class="line">    &lt;SplitPane</span><br><span class="line">      left=&#123;</span><br><span class="line">        &lt;Contacts /&gt;</span><br><span class="line">      &#125;</span><br><span class="line">      right=&#123;</span><br><span class="line">        &lt;Chat /&gt;</span><br><span class="line">      &#125; /&gt;</span><br><span class="line">  );</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="Ant-Design"><a href="#Ant-Design" class="headerlink" title="Ant Design"></a>Ant Design</h1><ul><li>style 使用双花括号</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">style=&#123;&#123; width: &apos;64px&apos;, height: &apos;64px&apos;, borderRadius: &apos;32px&apos; &#125;&#125;</span><br></pre></td></tr></table></figure><ul><li>对于这种不能直接控制状态的组件，我们称之为“非受控组件”</li><li><code>exports.routes</code> 需要是一个数组，数组中的每一个对象是一个路由信息</li><li>path 表示页面访问路径，component 表示 page 下的文件名，比如 <code>App</code>, <code>User</code> 分别表示 <code>page/App</code>，<code>page/User</code></li><li>我们用 <code>Link</code> 组件（相当于<a href>) 实现路由的跳转</a></li></ul><h1 id="React-小书"><a href="#React-小书" class="headerlink" title="React 小书"></a>React 小书</h1><h2 id="前端组件化（二）：优化-DOM-操作"><a href="#前端组件化（二）：优化-DOM-操作" class="headerlink" title="前端组件化（二）：优化 DOM 操作"></a>前端组件化（二）：优化 DOM 操作</h2><ul><li>一旦状态发生改变，就重新调用 render 方法，构建一个新的 DOM 元素</li><li>新增一个 <code>setState</code> 函数，这个函数接受一个对象作为参数；它会设置实例的 <code>state</code>，然后重新调用一下 <code>render</code> 方法</li><li>用户每次点击，<code>changeLikeText</code> 都会调用改变组件状态然后调用 <code>setState</code> ；<code>setState</code> 会调用 <code>render</code> ，<code>render</code> 方法会根据 <code>state</code> 的不同重新构建不同的 DOM 元素</li><li>一个组件有自己的显示形态（上面的 HTML 结构和内容）行为，组件的显示形态和行为可以由数据状态（state）和配置参数（props）共同决定。数据状态和配置参数的改变都会影响到这个组件的显示形态</li></ul><h2 id="React-js-基本环境安装"><a href="#React-js-基本环境安装" class="headerlink" title="React.js 基本环境安装"></a><strong>React.js 基本环境安装</strong></h2><ul><li>使用 React.js 不管在开发阶段生产阶段都需要一堆工具和库辅助，编译阶段你需要借助 Babel；需要 Redux 等第三方的状态管理工具来组织代码；如果你要写单页面应用那么你需要 React-router。这就是所谓的“React.js 全家桶”</li></ul><h2 id="使用-JSX-描述-UI-信息"><a href="#使用-JSX-描述-UI-信息" class="headerlink" title="使用 JSX 描述 UI 信息"></a><strong>使用 JSX 描述 UI 信息</strong></h2><ul><li><code>ReactDOM</code> 可以帮助我们把 React 组件渲染到页面上去，没有其它的作用了</li><li>React.js 就把 JavaScript 的语法扩展了一下，让 JavaScript 语言能够支持这种直接在 JavaScript 代码里面编写类似 HTML 标签结构的语法，这样写起来就方便很多了。编译的过程会把类似 HTML 的 JSX 结构转换成 JavaScript 的对象结构</li><li>所谓的 JSX 其实就是 JavaScript 对象</li></ul><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://cdn.nlark.com/yuque/0/2020/png/366539/1588516937779-878461cc-d615-4f3c-900d-e4ffdec135cf.png#align=left&display=inline&height=318&margin=%5Bobject%20Object%5D&name=image.png&originHeight=768&originWidth=1799&size=433560&status=done&style=none&width=746" alt="image.png" title>                </div>                <div class="image-caption">image.png</div>            </figure><p>有些同学可能会问，为什么不直接从 JSX 直接渲染构造 DOM 结构，而是要经过中间这么一层呢？</p><ul><li>第一个原因是，当我们拿到一个表示 UI 的结构和信息的对象以后，不一定会把元素渲染到浏览器的普通页面上，我们有可能把这个结构渲染到 canvas 上，或者是手机 App 上。所以这也是为什么会要把 <code>react-dom</code> 单独抽离出来的原因，可以想象有一个叫 <code>react-canvas</code> 可以帮我们把 UI 渲染到 canvas 上，或者是有一个叫 <code>react-app</code> 可以帮我们把它转换成原生的 App（实际上这玩意叫 <code>ReactNative</code>）。</li><li>第二个原因是，有了这样一个对象。当数据变化，需要更新组件的时候，就可以用比较快的算法操作这个 JavaScript 对象，而不用直接操作页面上的 DOM，这样可以尽量少的减少浏览器重排，极大地优化性能</li></ul><h2 id="组件的-render-方法"><a href="#组件的-render-方法" class="headerlink" title="组件的 render 方法"></a><strong>组件的 render 方法</strong></h2><p>我们在编写 React.js 组件的时候，一般都需要继承 React.js 的 <code>Component</code>（还有别的编写组件的方式我们后续会提到）。一个组件类必须要实现一个 <code>render</code> 方法，这个 <code>render</code> 方法必须要返回一个 JSX 元素。但这里要注意的是，必须要用一个外层的 JSX 元素把所有内容包裹起来。返回并列多个 JSX 元素是不合法的</p><h1 id="React-单车视频"><a href="#React-单车视频" class="headerlink" title="React 单车视频"></a>React 单车视频</h1><h2 id="1-1-导学"><a href="#1-1-导学" class="headerlink" title="1-1 导学"></a>1-1 导学</h2><p>前端部分分为三层架构：</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://cdn.nlark.com/yuque/0/2020/png/366539/1588516999903-f9341bae-0877-46a8-a1b6-beec269beab0.png#align=left&display=inline&height=565&margin=%5Bobject%20Object%5D&name=image.png&originHeight=1130&originWidth=902&size=379572&status=done&style=none&width=451" alt="image.png" title>                </div>                <div class="image-caption">image.png</div>            </figure><ul><li>前端核心框架库</li><li>中间件和插件</li><li>公共机制</li></ul><h2 id="2-1-React-基本介绍"><a href="#2-1-React-基本介绍" class="headerlink" title="2-1 React 基本介绍"></a>2-1 React 基本介绍</h2><ul><li>声明式编码</li><li>组件化编码</li><li>高效的 DOM diff 算法，最小化页面重绘</li><li>单向数据流</li><li>Vue 生态：Vue + Vue-Router + Vuex + Axios + Babel + Webpack</li><li>React 生态：React + React-Router + Redux + Axios + Babel + Webpack</li></ul><h2 id="2-2-React-脚手架、Yarn-介绍"><a href="#2-2-React-脚手架、Yarn-介绍" class="headerlink" title="2-2 React 脚手架、Yarn 介绍"></a>2-2 React 脚手架、Yarn 介绍</h2><p>脚手架：辅助工具，提高开发项目，用来初始化配置，构建基础的模型</p><p>yarn 和 npm 一样都是包管理工具，但是 yarn 是新一代包管理工具，修复了 npm 的一些问题，是 facebook 出的</p><ul><li>速度快</li><li>安装版本统一、更安全 yarn.lock 锁定版本</li><li>更简洁的输出</li><li>更好的语义化</li></ul><p>如何使用 yarn</p><ul><li>yarn intit</li><li>yarn add</li><li>yarn remove</li><li>yarn/yarn install 安装项目所有的依赖包</li></ul><p>初始化一个 react 项目</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">npx create-react-app my-app</span><br><span class="line">yarn</span><br><span class="line">yarn start</span><br></pre></td></tr></table></figure><h2 id="2-3-React-生命周期"><a href="#2-3-React-生命周期" class="headerlink" title="2-3 React 生命周期"></a>2-3 React 生命周期</h2><p>React 的声明周期包括</p><ul><li>getDefaultProps</li><li>getlnitialState</li><li><strong>componentWillMount</strong>：初始化接口</li><li>render</li><li>ComponentDidMount：组件更新后的处理</li><li>componentWillReceiveProps</li><li>shouldComponentUpdate</li><li>componentWillUpdate</li><li>componentDidUpdate</li><li>componentWillUnmount</li></ul><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://cdn.nlark.com/yuque/0/2020/png/366539/1588516867735-156452c8-2595-463b-af2a-66c37fa5b4ef.png#align=left&display=inline&height=490&margin=%5Bobject%20Object%5D&name=image.png&originHeight=490&originWidth=1182&size=130759&status=done&style=none&width=1182" alt="image.png" title>                </div>                <div class="image-caption">image.png</div>            </figure><ul><li>每个页面实际上就是一个组件</li><li>React 必须只有一个根元素</li><li>项目中所有的变量，render 中所有的变量都通过 state 来调用，里面的值也都通过 state 去取值</li><li>变量是{}</li><li>style 是双花括号，里面的{}指的是一个对象</li><li>组件名字开头大写</li><li><strong>state 是组件内部数据传递，props 是组件间数据传递</strong></li><li>render 必须 return</li><li>return 必须只有<strong>一个</strong>根元素，不能同时有两个 div</li><li>使用 bind 直接声明函数，不使用 bind 用箭头函数</li></ul><h2 id="3-1-基础插件安装，Less-文件加载配置"><a href="#3-1-基础插件安装，Less-文件加载配置" class="headerlink" title="3-1 基础插件安装，Less 文件加载配置"></a>3-1 基础插件安装，Less 文件加载配置</h2><ul><li>安装 React-Router、Axios</li><li>安装 AntD</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yarn add react-router-dom axios less-loader</span><br></pre></td></tr></table></figure><ul><li>暴露 webpack 配置文件，为了可以修改支持 less，<a href="https://juejin.im/post/5c3d67066fb9a049f06a8323" target="_blank" rel="noopener">https://juejin.im/post/5c3d67066fb9a049f06a8323</a></li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yarn eject</span><br></pre></td></tr></table></figure><ul><li>安装 less-loader</li><li>修改 less-loader</li><li>安装 node-sass</li><li>babel 可以实现按需加载</li></ul><h2 id="3-3-项目主页结构开发"><a href="#3-3-项目主页结构开发" class="headerlink" title="3-3 项目主页结构开发"></a>3-3 项目主页结构开发</h2><ul><li>页面结构定义</li><li>目录结构定义</li><li>栅格系统使用</li><li>calc 计算方法使用</li><li>components 是用来放公共组件的</li></ul><h2 id="3-3-菜单组件开发"><a href="#3-3-菜单组件开发" class="headerlink" title="3-3 菜单组件开发"></a>3-3 菜单组件开发</h2><ul><li>获取到一个对象后要通过 setState 方法将变量保存进去</li><li>一旦调用 setState 之后就会调用 Render</li><li>Update 强制更新的时候也会去调用 Render</li></ul><h2 id="3-4-头部组件开发"><a href="#3-4-头部组件开发" class="headerlink" title="3-4 头部组件开发"></a>3-4 头部组件开发</h2><ul><li>import 当前目录一定要写./</li><li>创建 utils -&gt; utils.js 来暴露一些公共机制（公共的函数或方法）<br>-</li></ul><h2 id="3-5-底部组件开发"><a href="#3-5-底部组件开发" class="headerlink" title="3-5 底部组件开发"></a>3-5 底部组件开发</h2>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;React-文档&quot;&gt;&lt;a href=&quot;#React-文档&quot; class=&quot;headerlink&quot; title=&quot;React 文档&quot;&gt;&lt;/a&gt;React 文档&lt;/h1&gt;&lt;h2 id=&quot;入门&quot;&gt;&lt;a href=&quot;#入门&quot; class=&quot;headerlink&quot; titl
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Sass的使用</title>
    <link href="http://fengtx.tk/2020/05/03/yuque/Sass%E7%9A%84%E4%BD%BF%E7%94%A8/"/>
    <id>http://fengtx.tk/2020/05/03/yuque/Sass的使用/</id>
    <published>2020-05-03T14:06:25.000Z</published>
    <updated>2020-12-06T14:36:41.709Z</updated>
    
    <content type="html"><![CDATA[<h1 id="文件后缀名"><a href="#文件后缀名" class="headerlink" title="文件后缀名"></a>文件后缀名</h1><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//文件后缀名为sass的语法</span></span><br><span class="line"><span class="selector-tag">body</span></span><br><span class="line"><span class="attribute">background</span>: <span class="number">#eee</span></span><br><span class="line">font-size:<span class="number">12px</span></span><br><span class="line">p</span><br><span class="line">background: <span class="number">#0982c1</span></span><br><span class="line"> </span><br><span class="line">//文件后缀名为scss的语法</span><br><span class="line">body &#123;</span><br><span class="line">  background: <span class="number">#eee</span>;</span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">12px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">p</span> &#123;</span><br><span class="line">  <span class="attribute">background</span>: <span class="number">#0982c1</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="导入"><a href="#导入" class="headerlink" title="导入"></a>导入</h1><h2 id="css-文件：-import-‘reset-css’"><a href="#css-文件：-import-‘reset-css’" class="headerlink" title="css 文件：@import  ‘reset.css’"></a>css 文件：<a href>@import </a> ‘reset.css’</h2><p>跟普通 CSS 导入样式文件一样，导入的 css 文件不会合并到编译后的文件中，而是以@import 方式存在</p><h2 id="sass-文件：-import-‘reset’"><a href="#sass-文件：-import-‘reset’" class="headerlink" title="sass 文件：@import  ‘reset’"></a>sass 文件：<a href>@import </a> ‘reset’</h2><p>被导入 sass 文件 a.scss</p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//a.scss</span></span><br><span class="line"><span class="selector-tag">body</span> &#123;</span><br><span class="line">  <span class="attribute">background</span>: <span class="number">#eee</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>需要导入样式的 sass 文件 b.scss</p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">@import</span> <span class="string">"reset.css"</span>;</span><br><span class="line"><span class="keyword">@import</span> <span class="string">"a"</span>;</span><br><span class="line"><span class="selector-tag">p</span> &#123;</span><br><span class="line">  <span class="attribute">background</span>: <span class="number">#0982c1</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>转译出来的 b.css 样式</p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">@import</span> <span class="string">"reset.css"</span>;</span><br><span class="line"><span class="selector-tag">body</span> &#123;</span><br><span class="line">  <span class="attribute">background</span>: <span class="number">#eee</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">p</span> &#123;</span><br><span class="line">  <span class="attribute">background</span>: <span class="number">#0982c1</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="变量"><a href="#变量" class="headerlink" title="变量"></a>变量</h1><ul><li>sass 的变量必须是\$开头，后面紧跟变量名</li><li>变量值和变量名之间就需要使用冒号(:)分隔开</li><li>值后面加上!default 则表示默认值</li></ul><h2 id="普通变量：定义之后可以在全局范围内使用"><a href="#普通变量：定义之后可以在全局范围内使用" class="headerlink" title="普通变量：定义之后可以在全局范围内使用"></a>普通变量：定义之后可以在全局范围内使用</h2><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//sass style</span></span><br><span class="line"><span class="variable">$fontSize</span>: <span class="number">12px</span>;</span><br><span class="line"><span class="selector-tag">body</span> &#123;</span><br><span class="line">  <span class="attribute">font-size</span>: <span class="variable">$fontSize</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//css style</span></span><br><span class="line"><span class="selector-tag">body</span> &#123;</span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">12px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="默认变量"><a href="#默认变量" class="headerlink" title="默认变量"></a>默认变量</h2><ul><li>sass 的默认变量仅需要在值后面加上 !default</li></ul><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//sass style</span></span><br><span class="line"><span class="variable">$baseLineHeight</span>: <span class="number">1.5</span> !default;</span><br><span class="line"><span class="selector-tag">body</span> &#123;</span><br><span class="line">  <span class="attribute">line-height</span>: <span class="variable">$baseLineHeight</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//css style</span></span><br><span class="line"><span class="selector-tag">body</span> &#123;</span><br><span class="line">  <span class="attribute">line-height</span>: <span class="number">1.5</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>sass 的默认变量一般是用来设置默认值，然后根据需求来覆盖的，只需要在默认变量<strong>之前</strong>重新声明下变量即可</li></ul><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//sass style</span></span><br><span class="line"><span class="variable">$baseLineHeight</span>: <span class="number">2</span>;</span><br><span class="line"><span class="variable">$baseLineHeight</span>: <span class="number">1.5</span> !default;</span><br><span class="line"><span class="selector-tag">body</span> &#123;</span><br><span class="line">  <span class="attribute">line-height</span>: <span class="variable">$baseLineHeight</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//css style</span></span><br><span class="line"><span class="selector-tag">body</span> &#123;</span><br><span class="line">  <span class="attribute">line-height</span>: <span class="number">2</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="特殊变量"><a href="#特殊变量" class="headerlink" title="特殊变量"></a>特殊变量</h2><p>一般我们定义的变量都为属性值，可直接使用，但是如果变量作为属性或在某些特殊情况下，如运算、拼接等则必须要以 #{\$variables}形式使用</p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//sass style</span></span><br><span class="line"><span class="variable">$borderDirection</span>: top !default;</span><br><span class="line"><span class="variable">$baseFontSize</span>: <span class="number">12px</span> !default;</span><br><span class="line"><span class="variable">$baseLineHeight</span>: <span class="number">1.5</span> !default;</span><br><span class="line"><span class="comment">//应用于class和属性</span></span><br><span class="line"><span class="selector-class">.border-</span>#&#123;<span class="variable">$borderDirection</span>&#125; &#123;</span><br><span class="line">  <span class="attribute">border</span>-#&#123;<span class="variable">$borderDirection</span>&#125;: <span class="number">1px</span> solid <span class="number">#ccc</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//应用于复杂的属性值</span></span><br><span class="line"><span class="selector-tag">body</span> &#123;</span><br><span class="line">  <span class="attribute">font</span>: #&#123;<span class="variable">$baseFontSize</span>&#125;/#&#123;<span class="variable">$baseLineHeight</span>&#125;;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//css style</span></span><br><span class="line"><span class="selector-class">.border-top</span> &#123;</span><br><span class="line">  <span class="attribute">border-top</span>: <span class="number">1px</span> solid <span class="number">#ccc</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">body</span> &#123;</span><br><span class="line">  <span class="attribute">font</span>: <span class="number">12px</span>/<span class="number">1.5</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="全局变量"><a href="#全局变量" class="headerlink" title="全局变量"></a>全局变量</h2><p>在选择器中声明的变量会覆盖外面全局声明的变量</p><h1 id="嵌套"><a href="#嵌套" class="headerlink" title="嵌套"></a>嵌套</h1><h2 id="选择器嵌套"><a href="#选择器嵌套" class="headerlink" title="选择器嵌套"></a>选择器嵌套</h2><p>可以使用 &amp;表示父元素选择器</p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//sass style</span></span><br><span class="line"><span class="selector-id">#top_nav</span> &#123;</span><br><span class="line">  <span class="attribute">line-height</span>: <span class="number">40px</span>;</span><br><span class="line">  <span class="attribute">text-transform</span>: capitalize;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="number">#333</span>;</span><br><span class="line">  <span class="selector-tag">li</span> &#123;</span><br><span class="line">    <span class="attribute">float</span>: left;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="selector-tag">a</span> &#123;</span><br><span class="line">    <span class="attribute">display</span>: block;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">0</span> <span class="number">10px</span>;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#fff</span>;</span><br><span class="line">    &amp;<span class="selector-pseudo">:hover</span> &#123;</span><br><span class="line">      <span class="attribute">color</span>: <span class="number">#ddd</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//css style</span></span><br><span class="line"><span class="selector-id">#top_nav</span> &#123;</span><br><span class="line">  <span class="attribute">line-height</span>: <span class="number">40px</span>;</span><br><span class="line">  <span class="attribute">text-transform</span>: capitalize;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="number">#333</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-id">#top_nav</span> <span class="selector-tag">li</span> &#123;</span><br><span class="line">  <span class="attribute">float</span>: left;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-id">#top_nav</span> <span class="selector-tag">a</span> &#123;</span><br><span class="line">  <span class="attribute">display</span>: block;</span><br><span class="line">  <span class="attribute">padding</span>: <span class="number">0</span> <span class="number">10px</span>;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#fff</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-id">#top_nav</span> <span class="selector-tag">a</span><span class="selector-pseudo">:hover</span> &#123;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#ddd</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h1 id="混合"><a href="#混合" class="headerlink" title="混合"></a>混合</h1><p>sass 中使用 @mixin 声明混合，可以传递参数，参数名以\$符号开始，多个参数以逗号分开，也可以给参数设置默认值。声明的 @mixin 通过 @include 来调用。</p><h2 id="1-无参数-mixin"><a href="#1-无参数-mixin" class="headerlink" title="(1) 无参数 mixin"></a>(1) 无参数 mixin</h2><p>//sass style<br>//——————————-<br><a href>@mixin </a> center-block {<br>margin-left:auto;<br>margin-right:auto;<br>}<br>.demo{<br><a href>@include </a> center-block;<br>}</p><p>//css style<br>//——————————-<br>.demo{<br>margin-left:auto;<br>margin-right:auto;<br>}</p><h2 id="2-有参数-mixin"><a href="#2-有参数-mixin" class="headerlink" title="(2) 有参数 mixin"></a>(2) 有参数 mixin</h2><h2 id="3-多个参数-mixin"><a href="#3-多个参数-mixin" class="headerlink" title="(3) 多个参数 mixin"></a>(3) 多个参数 mixin</h2><h2 id="4-多组值参数-mixin"><a href="#4-多组值参数-mixin" class="headerlink" title="(4) 多组值参数 mixin"></a>(4) 多组值参数 mixin</h2><h2 id="5-content"><a href="#5-content" class="headerlink" title="(5) @content "></a>(5) <a href>@content </a></h2><h1 id="7-继承"><a href="#7-继承" class="headerlink" title="7 继承"></a>7 继承</h1><h2 id="1-继承-extend"><a href="#1-继承-extend" class="headerlink" title="(1) 继承 @extend "></a>(1) 继承 <a href>@extend </a></h2><p>//sass style<br>//——————————-<br>h1{<br>border: 4px solid #ff9aa9;<br>}<br>.speaker{<br><a href>@extend </a> h1;<br>border-width: 2px;<br>}</p><p>//css style<br>//——————————-<br>h1,.speaker{<br>border: 4px solid #ff9aa9;<br>}<br>.speaker{<br>border-width: 2px;<br>}</p><h2 id="2-占位选择器"><a href="#2-占位选择器" class="headerlink" title="(2) 占位选择器 %"></a>(2) 占位选择器 %</h2><p>定义了两个占位选择器 %ir 和 %clearfix，其中 %clearfix 这个没有调用，所以解析出来的 css 样式也就没有 clearfix 部分。占位选择器的出现，使 css 文件更加简练可控，没有多余。所以可以用其定义一些基础的样式文件，然后根据需要调用产生相应的 css</p><p>//sass style<br>//——————————-<br>%ir{<br>color: transparent;<br>text-shadow: none;<br>background-color: transparent;<br>border: 0;<br>}<br>%clearfix{<br>@if \$lte7 {<br>*zoom: 1;<br>}<br>&amp;:before,<br>&amp;:after {<br>content: “”;<br>display: table;<br>font: 0/0 a;<br>}<br>&amp;:after {<br>clear: both;<br>}<br>}</p><p>#header{<br>h1{<br><a href>@extend </a> %ir;<br>width:300px;<br>}<br>}<br>.ir{<br><a href>@extend </a> %ir;<br>}</p><p>//css style<br>//——————————-</p><p>#header h1,<br>.ir{<br>color: transparent;<br>text-shadow: none;<br>background-color: transparent;<br>border: 0;<br>}</p><p>#header h1{<br>width:300px;<br>}</p><h1 id="8-函数"><a href="#8-函数" class="headerlink" title="8 函数"></a>8 函数</h1><p>实际项目中我们使用最多的应该是颜色函数，而颜色函数中又以 lighten 减淡和 darken 加深为最，其调用方法为 lighten($color,$amount)和 darken($color,$amount)，它们的第一个参数都是颜色值，第二个参数都是百分比</p><p>//sass style<br>//——————————-<br>$baseFontSize:      10px !default;<br>$gray:              #ccc !defualt;</p><p>// pixels to rems<br><a href>@function </a> pxToRem($px) {<br><a href>@return </a> $px / \$baseFontSize * 1rem;<br>}</p><p>body{<br>font-size:$baseFontSize;<br>color:lighten($gray,10%);<br>}<br>.test{<br>font-size:pxToRem(16px);<br>color:darken(\$gray,10%);<br>}</p><p>//css style<br>//——————————-<br>body{<br>font-size:10px;<br>color:#E6E6E6;<br>}<br>.test{<br>font-size:1.6rem;<br>color:#B3B3B3;<br>}</p><h1 id="9-运算"><a href="#9-运算" class="headerlink" title="9 运算"></a>9 运算</h1><p>sass 具有运算的特性，可以对数值型的 Value(如：数字、颜色、变量等)进行加减乘除四则运算。请注意运算符前后请留一个空格，不然会出错</p><p>$baseFontSize:          14px !default;<br>$baseLineHeight:        1.5 !default;<br>$baseGap:               $baseFontSize * $baseLineHeight !default;<br>$halfBaseGap:           $baseGap / 2  !default;<br>$samllFontSize:         \$baseFontSize - 2px  !default;</p><p>//grid<br>$_columns:                     12 !default;      // Total number of columns<br>$_column-width:                60px !default;   // Width of a single column<br>\$_gutter:                      20px !default;     // Width of the gutter</p><p>$_gridsystem-width:            $_columns * ($_column-width + $_gutter); //grid system width</p><h1 id="10-条件判断及循环"><a href="#10-条件判断及循环" class="headerlink" title="10 条件判断及循环"></a>10 条件判断及循环</h1><h2 id="1-if-判断"><a href="#1-if-判断" class="headerlink" title="(1) @if 判断"></a>(1) @if 判断</h2><p>@if 可一个条件单独使用，也可以和 @else 结合多条件使用</p><p>//sass style<br>//——————————-<br>$lte7: true;<br>$type: monster;<br>.ib{<br>display:inline-block;<br>@if $lte7 {<br><em>display:inline;</em>zoom:1;<br>}<br>}<br>p {<br>@if $type == ocean {<br>color: blue;<br>} <a href>@else </a> if $type == matador {<br>color: red;<br>} <a href>@else </a> if $type == monster {<br>color: green;<br>} <a href>@else </a> {<br>color: black;<br>}<br>}</p><p>//css style<br>//——————————-<br>.ib{<br>display:inline-block;<br><em>display:inline;</em>zoom:1;<br>}<br>p {<br>color: green;<br>}</p><h2 id="2-三目判断"><a href="#2-三目判断" class="headerlink" title="(2) 三目判断"></a>(2) 三目判断</h2><p>语法为： if($condition, $if_true, \$if_false) 。三个参数分别表示：条件，条件为真的值，条件为假的值</p><p>if(true, 1px, 2px) =&gt; 1px<br>if(false, 1px, 2px) =&gt; 2px</p><h2 id="3-for-循环"><a href="#3-for-循环" class="headerlink" title="(3) for 循环"></a>(3) for 循环</h2><p>for 循环有两种形式，分别为： <a href>@for </a> $var from  through 和 <a href>@for </a> $var from  to 。\$i 表示变量，start 表示起始值，end 表示结束值，这两个的区别是关键字 through 表示包括 end 这个数，而 to 则不包括 end 这个数。</p><p>//sass style<br>//——————————-<br><a href>@for </a> $i from 1 through 3 {<br>.item-#{$i} { width: 2em * \$i; }<br>}</p><p>//css style<br>//——————————-<br>.item-1 {<br>width: 2em;<br>}<br>.item-2 {<br>width: 4em;<br>}<br>.item-3 {<br>width: 6em;<br>}</p><h2 id="4-each-循环"><a href="#4-each-循环" class="headerlink" title="(4) @each 循环"></a>(4) @each 循环</h2><p>语法为： <a href>@each </a> $var in 。其中 $var 表示变量，而 list 和 map 表示 list 类型数据和 map 类型数据。sass 3.3.0 新加入了多字段循环和 map 数据循环。</p><ul><li>单个字段 list 数据循环</li></ul><p>//sass style<br>//——————————-<br>$animal-list: puma, sea-slug, egret, salamander;<br><a href>@each </a> $animal in $animal-list {<br>.#{$animal}-icon {<br>background-image: url(‘/images/#{\$animal}.png’);<br>}<br>}</p><p>//css style<br>//——————————-<br>.puma-icon {<br>background-image: url(‘/images/puma.png’);<br>}<br>.sea-slug-icon {<br>background-image: url(‘/images/sea-slug.png’);<br>}<br>.egret-icon {<br>background-image: url(‘/images/egret.png’);<br>}<br>.salamander-icon {<br>background-image: url(‘/images/salamander.png’);<br>}</p><ul><li>多个字段 list 数据循环</li></ul><p>//sass style<br>//——————————-<br>$animal-data: (puma, black, default),(sea-slug, blue, pointer),(egret, white, move);<br><a href>@each </a> $animal, $color, $cursor in $animal-data {<br>.#{$animal}-icon {<br>background-image: url(‘/images/#{$animal}.png’);<br>border: 2px solid $color;<br>cursor: \$cursor;<br>}<br>}</p><p>//css style<br>//——————————-<br>.puma-icon {<br>background-image: url(‘/images/puma.png’);<br>border: 2px solid black;<br>cursor: default;<br>}<br>.sea-slug-icon {<br>background-image: url(‘/images/sea-slug.png’);<br>border: 2px solid blue;<br>cursor: pointer;<br>}<br>.egret-icon {<br>background-image: url(‘/images/egret.png’);<br>border: 2px solid white;<br>cursor: move;<br>}</p><ul><li>多个字段 map 数据循环</li></ul><p>//sass style<br>//——————————-<br>$headings: (h1: 2em, h2: 1.5em, h3: 1.2em);<br><a href>@each </a> $header, $size in $headings {</p><p>#{$header} {<br>font-size: $size;<br>}<br>}</p><p>//css style<br>//——————————-<br>h1 {<br>font-size: 2em;<br>}<br>h2 {<br>font-size: 1.5em;<br>}<br>h3 {<br>font-size: 1.2em;<br>}</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;文件后缀名&quot;&gt;&lt;a href=&quot;#文件后缀名&quot; class=&quot;headerlink&quot; title=&quot;文件后缀名&quot;&gt;&lt;/a&gt;文件后缀名&lt;/h1&gt;&lt;figure class=&quot;highlight scss&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>如何将vue-cli创建的项目关联到github或gitlab远程仓库</title>
    <link href="http://fengtx.tk/2020/05/03/yuque/%E5%A6%82%E4%BD%95%E5%B0%86vue-cli%E5%88%9B%E5%BB%BA%E7%9A%84%E9%A1%B9%E7%9B%AE%E5%85%B3%E8%81%94%E5%88%B0github%E6%88%96gitlab%E8%BF%9C%E7%A8%8B%E4%BB%93%E5%BA%93/"/>
    <id>http://fengtx.tk/2020/05/03/yuque/如何将vue-cli创建的项目关联到github或gitlab远程仓库/</id>
    <published>2020-05-03T10:32:05.000Z</published>
    <updated>2020-12-06T14:36:41.719Z</updated>
    
    <content type="html"><![CDATA[<p>进入需要关联到远程仓库的项目文件夹中，执行以下命令：</p><p>1、<code>git init</code></p><p>使用 git 初始化项目</p><p>2、<code>git remote add origin &lt;remote-project-repository-address&gt;</code></p><p>将项目关联到远程仓库，<remote-project-repository-address> 为远程项目仓库的地址，在 github 或 gitlab 中按如下图所示获取：</remote-project-repository-address></p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://img-blog.csdnimg.cn/20181221143352456.png#align=left&display=inline&height=72&margin=%5Bobject%20Object%5D&originHeight=72&originWidth=913&status=done&style=none&width=913" alt title>                </div>                <div class="image-caption"></div>            </figure><p>3、<code>git add .</code></p><p>将本地项目添加到暂存区</p><p>4、<code>git commit -m &#39;自己提交的描述&#39;</code></p><p>将项目提交本地版本库</p><p>5、<code>git push -u origin master</code></p><p>将项目推送到远程仓库</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;进入需要关联到远程仓库的项目文件夹中，执行以下命令：&lt;/p&gt;
&lt;p&gt;1、&lt;code&gt;git init&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;使用 git 初始化项目&lt;/p&gt;
&lt;p&gt;2、&lt;code&gt;git remote add origin &amp;lt;remote-project-rep
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>webpack大拷问</title>
    <link href="http://fengtx.tk/2020/05/03/yuque/webpack%E5%A4%A7%E6%8B%B7%E9%97%AE/"/>
    <id>http://fengtx.tk/2020/05/03/yuque/webpack大拷问/</id>
    <published>2020-05-03T10:02:46.000Z</published>
    <updated>2020-12-06T14:36:41.909Z</updated>
    
    <content type="html"><![CDATA[<h1 id="1-webpack-与-grunt、gulp-的不同？"><a href="#1-webpack-与-grunt、gulp-的不同？" class="headerlink" title="1 webpack 与 grunt、gulp 的不同？"></a>1 webpack 与 grunt、gulp 的不同？</h1><p>三者都是前端构建工具，grunt 和 gulp 在早期比较流行，现在 webpack 相对来说比较主流，不过一些轻量化的任务还是会用 gulp 来处理，比如单独打包 CSS 文件等。</p><p>grunt 和 gulp 是基于任务和流（Task、Stream）的。类似 jQuery，找到一个（或一类）文件，对其做一系列链式操作，更新流上的数据， 整条链式操作构成了一个任务，多个任务就构成了整个 web 的构建流程。</p><p>webpack 是基于入口的。webpack 会自动地递归解析入口所需要加载的所有资源文件，然后用不同的 Loader 来处理不同的文件，用 Plugin 来扩展 webpack 功能。</p><p>所以总结一下：</p><p>从构建思路来说</p><ul><li>gulp 和 grunt 需要开发者将整个前端构建过程拆分成多个<code>Task</code>，并合理控制所有<code>Task</code>的调用关系</li><li>webpack 需要开发者找到入口，并需要清楚对于不同的资源应该使用什么 Loader 做何种解析和加工</li></ul><p>对于知识背景来说</p><ul><li>gulp 更像后端开发者的思路，需要对于整个流程了如指掌 webpack 更倾向于前端开发者的思路</li></ul><h1 id="2-与-webpack-类似的工具还有哪些？谈谈你为什么最终选择（或放弃）使用-webpack？"><a href="#2-与-webpack-类似的工具还有哪些？谈谈你为什么最终选择（或放弃）使用-webpack？" class="headerlink" title="2 与 webpack 类似的工具还有哪些？谈谈你为什么最终选择（或放弃）使用 webpack？"></a>2 与 webpack 类似的工具还有哪些？谈谈你为什么最终选择（或放弃）使用 webpack？</h1><p>同样是基于入口的打包工具还有以下几个主流的：</p><ul><li>webpack</li><li>rollup</li><li>parcel</li></ul><p>从应用场景上来看：</p><ul><li>webpack 适用于大型复杂的前端站点构建</li><li>rollup 适用于基础库的打包，如 vue、react</li><li>parcel 适用于简单的实验性项目，他可以满足低门槛的快速看到效果</li></ul><p>由于 parcel 在打包过程中给出的调试信息十分有限，所以一旦打包出错难以调试，所以不建议复杂的项目使用 parcel</p><h1 id="3-有哪些常见的-Loader？他们是解决什么问题的？"><a href="#3-有哪些常见的-Loader？他们是解决什么问题的？" class="headerlink" title="3 有哪些常见的 Loader？他们是解决什么问题的？"></a>3 有哪些常见的 Loader？他们是解决什么问题的？</h1><ul><li>file-loader：把文件输出到一个文件夹中，在代码中通过相对 URL 去引用输出的文件</li><li>url-loader：和 file-loader 类似，但是能在文件很小的情况下以 base64 的方式把文件内容注入到代码中去</li><li>source-map-loader：加载额外的 Source Map 文件，以方便断点调试</li><li>image-loader：加载并且压缩图片文件</li><li>babel-loader：把 ES6 转换成 ES5</li><li>css-loader：加载 CSS，支持模块化、压缩、文件导入等特性</li><li>style-loader：把 CSS 代码注入到 JavaScript 中，通过 DOM 操作去加载 CSS。</li><li>eslint-loader：通过 ESLint 检查 JavaScript 代码</li></ul><h1 id="4-有哪些常见的-Plugin？他们是解决什么问题的？"><a href="#4-有哪些常见的-Plugin？他们是解决什么问题的？" class="headerlink" title="4 有哪些常见的 Plugin？他们是解决什么问题的？"></a>4 有哪些常见的 Plugin？他们是解决什么问题的？</h1><ul><li>define-plugin：定义环境变量</li><li>commons-chunk-plugin：提取公共代码</li><li>uglifyjs-webpack-plugin：通过 UglifyES 压缩 ES6 代码</li></ul><h1 id="5-Loader-和-Plugin-的不同？"><a href="#5-Loader-和-Plugin-的不同？" class="headerlink" title="5 Loader 和 Plugin 的不同？"></a>5 Loader 和 Plugin 的不同？</h1><p>不同的作用</p><ul><li>Loader 直译为”加载器”。Webpack 将一切文件视为模块，但是 webpack 原生是只能解析 js 文件，如果想将其他文件也打包的话，就会用到 loader。 所以 Loader 的作用是让 webpack 拥有了加载和解析非 JavaScript 文件的能力。</li><li>Plugin 直译为”插件”。Plugin 可以扩展 webpack 的功能，让 webpack 具有更多的灵活性。 在 - Webpack 运行的生命周期中会广播出许多事件，Plugin 可以监听这些事件，在合适的时机通过 Webpack 提供的 API 改变输出结果。</li></ul><p>不同的用法</p><ul><li>Loader 在 module.rules 中配置，也就是说他作为模块的解析规则而存在。 类型为数组，每一项都是一个 Object，里面描述了对于什么类型的文件（test），使用什么加载(loader)和使用的参数（options）</li><li>Plugin 在 plugins 中单独配置。 类型为数组，每一项是一个 plugin 的实例，参数都通过构造函数传入</li></ul><h1 id="6-webpack-的构建流程是什么"><a href="#6-webpack-的构建流程是什么" class="headerlink" title="6 webpack 的构建流程是什么?"></a>6 webpack 的构建流程是什么?</h1><p>Webpack 的运行流程是一个串行的过程，从启动到结束会依次执行以下流程：</p><ol><li>初始化参数：从配置文件和 Shell 语句中读取与合并参数，得出最终的参数；</li><li>开始编译：用上一步得到的参数初始化 Compiler 对象，加载所有配置的插件，执行对象的 run 方法开始执行编译；</li><li>确定入口：根据配置中的 entry 找出所有的入口文件；</li><li>编译模块：从入口文件出发，调用所有配置的 Loader 对模块进行翻译，再找出该模块依赖的模块，再递归本步骤直到所有入口依赖的文件都经过了本步骤的处理；</li><li>完成模块编译：在经过第 4 步使用 Loader 翻译完所有模块后，得到了每个模块被翻译后的最终内容以及它们之间的依赖关系；</li><li>输出资源：根据入口和模块之间的依赖关系，组装成一个个包含多个模块的 Chunk，再把每个 Chunk 转换成一个单独的文件加入到输出列表，这步是可以修改输出内容的最后机会；</li><li>输出完成：在确定好输出内容后，根据配置确定输出的路径和文件名，把文件内容写入到文件系统。</li></ol><p>在以上过程中，Webpack 会在特定的时间点广播出特定的事件，插件在监听到感兴趣的事件后会执行特定的逻辑，并且插件可以调用 Webpack 提供的 API 改变 Webpack 的运行结果。</p><h1 id="7-是否写过-Loader-和-Plugin？描述一下编写-loader-或-plugin-的思路？"><a href="#7-是否写过-Loader-和-Plugin？描述一下编写-loader-或-plugin-的思路？" class="headerlink" title="7 是否写过 Loader 和 Plugin？描述一下编写 loader 或 plugin 的思路？"></a>7 是否写过 Loader 和 Plugin？描述一下编写 loader 或 plugin 的思路？</h1><p>Loader 像一个”翻译官”把读到的源文件内容转义成新的文件内容，并且每个 Loader 通过链式操作，将源文件一步步翻译成想要的样子。</p><p>编写 Loader 时要遵循单一原则，每个 Loader 只做一种”转义”工作。 每个 Loader 的拿到的是源文件内容（source），可以通过返回值的方式将处理后的内容输出，也可以调用 this.callback()方法，将内容返回给 webpack。 还可以通过 this.async()生成一个 callback 函数，再用这个 callback 将处理后的内容输出出去。 此外 webpack 还为开发者准备了开发 loader 的工具函数集——loader-utils。</p><p>相对于 Loader 而言，Plugin 的编写就灵活了许多。 webpack 在运行的生命周期中会广播出许多事件，Plugin 可以监听这些事件，在合适的时机通过 Webpack 提供的 API 改变输出结果。</p><h1 id="8-webpack-的热更新是如何做到的？说明其原理？"><a href="#8-webpack-的热更新是如何做到的？说明其原理？" class="headerlink" title="8 webpack 的热更新是如何做到的？说明其原理？"></a>8 webpack 的热更新是如何做到的？说明其原理？</h1><p>webpack 的热更新又称热替换（Hot Module Replacement），缩写为 HMR。 这个机制可以做到不用刷新浏览器而将新变更的模块替换掉旧的模块。</p><p>原理：</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://img-blog.csdnimg.cn/20200405210420582.png#align=left&display=inline&height=837&margin=%5Bobject%20Object%5D&originHeight=837&originWidth=805&status=done&style=none&width=805" alt title>                </div>                <div class="image-caption"></div>            </figure><p>首先要知道 server 端和 client 端都做了处理工作</p><ol><li>第一步，在 webpack 的 watch 模式下，文件系统中某一个文件发生修改，webpack 监听到文件变化，根据配置文件对模块重新编译打包，并将打包后的代码通过简单的 JavaScript 对象保存在内存中。</li><li>第二步是 webpack-dev-server 和 webpack 之间的接口交互，而在这一步，主要是 dev-server 的中间件 webpack-dev-middleware 和 webpack 之间的交互，webpack-dev-middleware 调用 webpack 暴露的 API 对代码变化进行监控，并且告诉 webpack，将代码打包到内存中。</li><li>第三步是 webpack-dev-server 对文件变化的一个监控，这一步不同于第一步，并不是监控代码变化重新打包。当我们在配置文件中配置了 devServer.watchContentBase 为 true 的时候，Server 会监听这些配置文件夹中静态文件的变化，变化后会通知浏览器端对应用进行 live reload。注意，这儿是浏览器刷新，和 HMR 是两个概念。</li><li>第四步也是 webpack-dev-server 代码的工作，该步骤主要是通过 sockjs（webpack-dev-server 的依赖）在浏览器端和服务端之间建立一个 websocket 长连接，将 webpack 编译打包的各个阶段的状态信息告知浏览器端，同时也包括第三步中 Server 监听静态文件变化的信息。浏览器端根据这些 socket 消息进行不同的操作。当然服务端传递的最主要信息还是新模块的 hash 值，后面的步骤根据这一 hash 值来进行模块热替换。</li><li>webpack-dev-server/client 端并不能够请求更新的代码，也不会执行热更模块操作，而把这些工作又交回给了 webpack，webpack/hot/dev-server 的工作就是根据 webpack-dev-server/client 传给它的信息以及 dev-server 的配置决定是刷新浏览器呢还是进行模块热更新。当然如果仅仅是刷新浏览器，也就没有后面那些步骤了。</li><li>HotModuleReplacement.runtime 是客户端 HMR 的中枢，它接收到上一步传递给他的新模块的 hash 值，它通过 JsonpMainTemplate.runtime 向 server 端发送 Ajax 请求，服务端返回一个 json，该 json 包含了所有要更新的模块的 hash 值，获取到更新列表后，该模块再次通过 jsonp 请求，获取到最新的模块代码。这就是上图中 7、8、9 步骤。</li><li>而第 10 步是决定 HMR 成功与否的关键步骤，在该步骤中，HotModulePlugin 将会对新旧模块进行对比，决定是否更新模块，在决定更新模块后，检查模块之间的依赖关系，更新模块的同时更新模块间的依赖引用。</li><li>最后一步，当 HMR 失败后，回退到 live reload 操作，也就是进行浏览器刷新来获取最新打包代码。</li></ol><h1 id="9-如何利用-webpack-来优化前端性能？（提高性能和体验）"><a href="#9-如何利用-webpack-来优化前端性能？（提高性能和体验）" class="headerlink" title="9 如何利用 webpack 来优化前端性能？（提高性能和体验）"></a>9 如何利用 webpack 来优化前端性能？（提高性能和体验）</h1><p>用 webpack 优化前端性能是指优化 webpack 的输出结果，让打包的最终结果在浏览器运行快速高效。</p><ul><li>压缩代码。删除多余的代码、注释、简化代码的写法等等方式。可以利用 webpack 的 UglifyJsPlugin 和 ParallelUglifyPlugin 来压缩 JS 文件， 利用 cssnano（css-loader?minimize）来压缩 css</li><li>利用 CDN 加速。在构建过程中，将引用的静态资源路径修改为 CDN 上对应的路径。可以利用 webpack 对于 output 参数和各 loader 的 publicPath 参数来修改资源路径</li><li>删除死代码（Tree Shaking）。将代码中永远不会走到的片段删除掉。可以通过在启动 webpack 时追加参数–optimize-minimize 来实现</li><li>提取公共代码。</li></ul><h1 id="10-如何提高-webpack-的构建速度？"><a href="#10-如何提高-webpack-的构建速度？" class="headerlink" title="10 如何提高 webpack 的构建速度？"></a>10 如何提高 webpack 的构建速度？</h1><ul><li>多入口情况下，使用 CommonsChunkPlugin 来提取公共代码</li><li>通过 externals 配置来提取常用库</li><li>利用 DllPlugin 和 DllReferencePlugin 预编译资源模块 通过 DllPlugin 来对那些我们引用但是绝对不会修改的 npm 包来进行预编译，再通过 DllReferencePlugin 将预编译的模块加载进来。</li><li>使用 Happypack 实现多线程加速编译</li><li>使用 webpack-uglify-parallel 来提升 uglifyPlugin 的压缩速度。 原理上 webpack-uglify-parallel 采用了多核并行压缩来提升压缩速度</li><li>使用 Tree-shaking 和 Scope Hoisting 来剔除多余代码</li></ul><h1 id="11-怎么配置单页应用？怎么配置多页应用？"><a href="#11-怎么配置单页应用？怎么配置多页应用？" class="headerlink" title="11 怎么配置单页应用？怎么配置多页应用？"></a>11 怎么配置单页应用？怎么配置多页应用？</h1><p>单页应用可以理解为 webpack 的标准模式，直接在 entry 中指定单页应用的入口即可，这里不再赘述</p><p>多页应用的话，可以使用 webpack 的 AutoWebPlugin 来完成简单自动化的构建，但是前提是项目的目录结构必须遵守他预设的规范。 多页应用中要注意的是：</p><ul><li>每个页面都有公共的代码，可以将这些代码抽离出来，避免重复的加载。比如，每个页面都引用了同一套 css 样式表</li><li>随着业务的不断扩展，页面可能会不断的追加，所以一定要让入口的配置足够灵活，避免每次添加新页面还需要修改构建配置</li></ul><h1 id="12-npm-打包时需要注意哪些？如何利用-webpack-来更好的构建？"><a href="#12-npm-打包时需要注意哪些？如何利用-webpack-来更好的构建？" class="headerlink" title="12 npm 打包时需要注意哪些？如何利用 webpack 来更好的构建？"></a>12 npm 打包时需要注意哪些？如何利用 webpack 来更好的构建？</h1><p>Npm 是目前最大的 JavaScript 模块仓库，里面有来自全世界开发者上传的可复用模块。你可能只是 JS 模块的使用者，但是有些情况你也会去选择上传自己开发的模块。 关于 NPM 模块上传的方法可以去官网上进行学习，这里只讲解如何利用 webpack 来构建。</p><p>NPM 模块需要注意以下问题：</p><ul><li>要支持 CommonJS 模块化规范，所以要求打包后的最后结果也遵守该规则。</li><li>Npm 模块使用者的环境是不确定的，很有可能并不支持 ES6，所以打包的最后结果应该是采用 ES5 编写的。并且如果 ES5 是经过转换的，请最好连同 SourceMap 一同上传。</li><li>Npm 包大小应该是尽量小（有些仓库会限制包大小）</li><li>发布的模块不能将依赖的模块也一同打包，应该让用户选择性的去自行安装。这样可以避免模块应用者再次打包时出现底层模块被重复打包的情况。</li><li>UI 组件类的模块应该将依赖的其它资源文件，例如.css 文件也需要包含在发布的模块里。</li></ul><p>基于以上需要注意的问题，我们可以对于 webpack 配置做以下扩展和优化：</p><ul><li>CommonJS 模块化规范的解决方案： 设置 output.libraryTarget=’commonjs2’使输出的代码符合 CommonJS2 模块化规范，以供给其它模块导入使用</li><li>输出 ES5 代码的解决方案：使用 babel-loader 把 ES6 代码转换成 ES5 的代码。再通过开启 devtool: ‘source-map’输出 SourceMap 以发布调试。</li><li>Npm 包大小尽量小的解决方案：Babel 在把 ES6 代码转换成 ES5 代码时会注入一些辅助函数，最终导致每个输出的文件中都包含这段辅助函数的代码，造成了代码的冗余。解决方法是修改.babelrc 文件，为其加入 transform-runtime 插件</li><li>不能将依赖模块打包到 NPM 模块中的解决方案：使用 externals 配置项来告诉 webpack 哪些模块不需要打包。</li><li>对于依赖的资源文件打包的解决方案：通过 css-loader 和 extract-text-webpack-plugin 来实现，配置如下：</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> ExtractTextPlugin = <span class="built_in">require</span>(<span class="string">"extract-text-webpack-plugin"</span>);</span><br><span class="line"></span><br><span class="line"><span class="built_in">module</span>.exports = &#123;</span><br><span class="line">  <span class="built_in">module</span>: &#123;</span><br><span class="line">    rules: [</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="comment">// 增加对 CSS 文件的支持</span></span><br><span class="line">        test: <span class="regexp">/\.css/</span>,</span><br><span class="line">        <span class="comment">// 提取出 Chunk 中的 CSS 代码到单独的文件中</span></span><br><span class="line">        use: ExtractTextPlugin.extract(&#123;</span><br><span class="line">          use: [<span class="string">"css-loader"</span>],</span><br><span class="line">        &#125;),</span><br><span class="line">      &#125;,</span><br><span class="line">    ],</span><br><span class="line">  &#125;,</span><br><span class="line">  plugins: [</span><br><span class="line">    <span class="keyword">new</span> ExtractTextPlugin(&#123;</span><br><span class="line">      <span class="comment">// 输出的 CSS 文件名称</span></span><br><span class="line">      filename: <span class="string">"index.css"</span>,</span><br><span class="line">    &#125;),</span><br><span class="line">  ],</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h1 id="13-如何在-vue-项目中实现按需加载？"><a href="#13-如何在-vue-项目中实现按需加载？" class="headerlink" title="13 如何在 vue 项目中实现按需加载？"></a>13 如何在 vue 项目中实现按需加载？</h1><p>Vue UI 组件库的按需加载 为了快速开发前端项目，经常会引入现成的 UI 组件库如 ElementUI、iView 等，但是他们的体积和他们所提供的功能一样，是很庞大的。 而通常情况下，我们仅仅需要少量的几个组件就足够了，但是我们却将庞大的组件库打包到我们的源码中，造成了不必要的开销。</p><p>不过很多组件库已经提供了现成的解决方案，如 Element 出品的 babel-plugin-component 和 AntDesign 出品的 babel-plugin-import 安装以上插件后，在.babelrc 配置中或 babel-loader 的参数中进行设置，即可实现组件按需加载了。</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">"presets"</span>: [[<span class="string">"es2015"</span>, &#123; <span class="attr">"modules"</span>: <span class="literal">false</span> &#125;]],</span><br><span class="line">  <span class="attr">"plugins"</span>: [</span><br><span class="line">    [</span><br><span class="line">      <span class="string">"component"</span>,</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="attr">"libraryName"</span>: <span class="string">"element-ui"</span>,</span><br><span class="line">        <span class="attr">"styleLibraryName"</span>: <span class="string">"theme-chalk"</span></span><br><span class="line">      &#125;</span><br><span class="line">    ]</span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>单页应用的按需加载 现在很多前端项目都是通过单页应用的方式开发的，但是随着业务的不断扩展，会面临一个严峻的问题——首次加载的代码量会越来越多，影响用户的体验。</p><p>通过<code>import(*)</code>语句来控制加载时机，webpack 内置了对于<code>import(*)</code>的解析，会将<code>import(*)</code>中引入的模块作为一个新的入口在生成一个 chunk。 当代码执行到<code>import(*)</code>语句时，会去加载 Chunk 对应生成的文件。<code>import()</code>会返回一个 Promise 对象，所以为了让浏览器支持，需要事先注入 Promise polyfill。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;1-webpack-与-grunt、gulp-的不同？&quot;&gt;&lt;a href=&quot;#1-webpack-与-grunt、gulp-的不同？&quot; class=&quot;headerlink&quot; title=&quot;1 webpack 与 grunt、gulp 的不同？&quot;&gt;&lt;/a&gt;1 web
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Vue学习小记</title>
    <link href="http://fengtx.tk/2020/05/03/yuque/Vue%E5%AD%A6%E4%B9%A0%E5%B0%8F%E8%AE%B0/"/>
    <id>http://fengtx.tk/2020/05/03/yuque/Vue学习小记/</id>
    <published>2020-05-03T10:02:41.000Z</published>
    <updated>2020-12-06T14:36:42.156Z</updated>
    
    <content type="html"><![CDATA[<hr><h2 id="title-Vue-学习小记-date-2019-年-04-月-08-日-00-27-43"><a href="#title-Vue-学习小记-date-2019-年-04-月-08-日-00-27-43" class="headerlink" title="title: Vue 学习小记 date: 2019 年 04 月 08 日 00:27:43"></a>title: Vue 学习小记 date: 2019 年 04 月 08 日 00:27:43</h2><p>categories: Framework<br>typora-root-url: ..<br>typora-copy-images-to: ../images</p><h1 id="Vue-的安装及语法"><a href="#Vue-的安装及语法" class="headerlink" title="Vue 的安装及语法"></a>Vue 的安装及语法</h1><blockquote><ul><li>解析<code></code></li><li>页面中的数据与内存中的数据双向绑定</li><li><code>v-mdodel</code></li><li><code>v-show</code>：暂时隐藏</li><li><code>v-if</code>：直接从<code>dom</code>中删除</li></ul></blockquote><h1 id="v-for-指令"><a href="#v-for-指令" class="headerlink" title="v-for 指令"></a>v-for 指令</h1><h1 id="v-bind-指令（v-bind-可简写为-）"><a href="#v-bind-指令（v-bind-可简写为-）" class="headerlink" title="v-bind 指令（v-bind:可简写为:）"></a>v-bind 指令（v-bind:可简写为:）</h1><blockquote><ul><li>绑定数据和元素属性：src、href</li></ul></blockquote><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line">  .active &#123;</span><br><span class="line">    background: #a10;</span><br><span class="line">  &#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">:class</span>=<span class="string">"&#123;active: isActive&#125;"</span> <span class="attr">:href</span>=<span class="string">"url"</span>&gt;</span> 点我 <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> app = <span class="keyword">new</span> Vue(&#123;</span><br><span class="line">  el: <span class="string">"#app"</span>,</span><br><span class="line">  data: &#123;</span><br><span class="line">    url: <span class="string">"http://baidu.com"</span>,</span><br><span class="line">    img: <span class="string">"https://dummyimage.com/100x100/ffcc00/ffffff"</span>,</span><br><span class="line">    klass: <span class="string">"btn btn-default"</span>,</span><br><span class="line">    isActive: <span class="literal">true</span>,</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h1 id="v-on-指令（v-on-可简写为-，v-on-不可简写）"><a href="#v-on-指令（v-on-可简写为-，v-on-不可简写）" class="headerlink" title="v-on 指令（v-on:可简写为@，v-on=不可简写）"></a>v-on 指令（v-on:可简写为@，v-on=不可简写）</h1><blockquote><ul><li>v-on=”{事件:函数, 事件:函数}”</li><li>v-on:事件=”函数()”</li><li>一定要都写在 div#app 中</li><li>更多事件参考：<a href="https://cn.vuejs.org/v2/guide/events.html" target="_blank" rel="noopener">https://cn.vuejs.org/v2/guide/events.html</a></li></ul></blockquote><h1 id="v-model-指令及其修饰符"><a href="#v-model-指令及其修饰符" class="headerlink" title="v-model 指令及其修饰符"></a>v-model 指令及其修饰符</h1><blockquote><ul><li>适用于：<code>input、textarea、select</code></li><li><code>v-model</code>对变量进行绑定并操作，输出变量</li><li><code>v-model.lazy</code> 失焦更新</li><li><code>v-model.trim</code> 删去空格</li><li><code>v-model.number</code> 字符串转为 number</li></ul></blockquote><h1 id="v-model-在其他元素及类型上的用法"><a href="#v-model-在其他元素及类型上的用法" class="headerlink" title="v-model 在其他元素及类型上的用法"></a>v-model 在其他元素及类型上的用法</h1><h1 id="控制流指令"><a href="#控制流指令" class="headerlink" title="控制流指令"></a>控制流指令</h1><blockquote><ul><li>v-if</li><li>v-else-if</li><li>v-else</li></ul></blockquote><h1 id="计算属性"><a href="#计算属性" class="headerlink" title="计算属性"></a>计算属性</h1><blockquote><ul><li>和<code>method</code>的区别：缓存数据，提高了性能</li></ul></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">computed: &#123;</span><br><span class="line">    sum: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="built_in">parseFloat</span>(<span class="keyword">this</span>.math) + <span class="built_in">parseFloat</span>(<span class="keyword">this</span>.physics) + <span class="built_in">parseFloat</span>(<span class="keyword">this</span>.english);</span><br><span class="line">    &#125;,</span><br><span class="line">    average: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="built_in">Math</span>.round(<span class="keyword">this</span>.sum / <span class="number">3</span>);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">td</span>&gt;</span>总分<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">td</span>&gt;</span>&#123;&#123;sum&#125;&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">td</span>&gt;</span>平均分<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">td</span>&gt;</span>&#123;&#123;average&#125;&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br></pre></td></tr></table></figure><h1 id="组件-全局及局部组件"><a href="#组件-全局及局部组件" class="headerlink" title="组件 - 全局及局部组件"></a>组件 - 全局及局部组件</h1><ul><li>全局组件</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Vue.component(<span class="string">"like"</span>, &#123;</span><br><span class="line">  template: <span class="string">""</span>,</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><ul><li>局部组件</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> alert_component = &#123;</span><br><span class="line">  template: <span class="string">'&lt;button @click="on_click"&gt;弹弹弹&lt;/button&gt;'</span>,</span><br><span class="line">  methods: &#123;</span><br><span class="line">    on_click: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">      alert(<span class="string">"Yo."</span>);</span><br><span class="line">    &#125;,</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">new</span> Vue(&#123;</span><br><span class="line">  el: <span class="string">"#seg1"</span>,</span><br><span class="line">  components: &#123;</span><br><span class="line">    alert: alert_component,</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h1 id="组件-配置组件"><a href="#组件-配置组件" class="headerlink" title="组件 - 配置组件"></a>组件 - 配置组件</h1><blockquote><ul><li>template 必须放在 el 外面</li></ul></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">Vue.component(<span class="string">"like"</span>, &#123;</span><br><span class="line">  template: <span class="string">"#like-component-tpl"</span>,</span><br><span class="line">  data: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> &#123;</span><br><span class="line">      like_count: <span class="number">10</span>,</span><br><span class="line">      liked: <span class="literal">false</span>,</span><br><span class="line">    &#125;;</span><br><span class="line">  &#125;,</span><br><span class="line">  methods: &#123;</span><br><span class="line">    toggle_like: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">      <span class="keyword">if</span> (!<span class="keyword">this</span>.liked) <span class="keyword">this</span>.like_count++;</span><br><span class="line">      <span class="keyword">else</span> <span class="keyword">this</span>.like_count--;</span><br><span class="line"></span><br><span class="line">      <span class="keyword">this</span>.liked = !<span class="keyword">this</span>.liked;</span><br><span class="line">    &#125;,</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"app"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">like</span>&gt;</span><span class="tag">&lt;/<span class="name">like</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">template</span> <span class="attr">id</span>=<span class="string">"like-component-tpl"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">button</span> <span class="attr">:class</span>=<span class="string">"&#123;liked: liked&#125;"</span> @<span class="attr">click</span>=<span class="string">"toggle_like()"</span>&gt;</span></span><br><span class="line">    👍👍 &#123;&#123;like_count&#125;&#125;</span><br><span class="line">  <span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br></pre></td></tr></table></figure><h1 id="组件-父子通信"><a href="#组件-父子通信" class="headerlink" title="组件 - 父子通信"></a>组件 - 父子通信</h1><ul><li>自定义传参</li></ul><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Vue.component(<span class="string">"user"</span>, &#123;</span><br><span class="line">  template: <span class="string">"&lt;a :href=\"'/user/' + username\"&gt;&#123;&#123;username&#125;&#125;&lt;/a&gt;"</span>,</span><br><span class="line">  props: [<span class="string">"username"</span>],</span><br><span class="line">  methods: &#123;&#125;,</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"app"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">user</span> <span class="attr">username</span>=<span class="string">"biaoyansu"</span>&gt;</span><span class="tag">&lt;/<span class="name">user</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><h1 id="组件-子父通信"><a href="#组件-子父通信" class="headerlink" title="组件 - 子父通信"></a>组件 - 子父通信</h1><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">Vue.component(<span class="string">"balance"</span>, &#123;</span><br><span class="line">  template: <span class="string">`</span></span><br><span class="line"><span class="string">  &lt;div&gt;</span></span><br><span class="line"><span class="string">    &lt;show @show-balance="show_balance"&gt;&lt;/show&gt; //监听事件</span></span><br><span class="line"><span class="string">    &lt;div v-if="show"&gt;</span></span><br><span class="line"><span class="string">    您的余额：￥98逸</span></span><br><span class="line"><span class="string">    &lt;/div&gt;</span></span><br><span class="line"><span class="string">  &lt;/div&gt;</span></span><br><span class="line"><span class="string">  `</span>,</span><br><span class="line">  methods: &#123;</span><br><span class="line">    show_balance: <span class="function"><span class="keyword">function</span> (<span class="params">data</span>) </span>&#123;</span><br><span class="line">      <span class="keyword">this</span>.show = <span class="literal">true</span>;</span><br><span class="line">      <span class="built_in">console</span>.log(<span class="string">"data:"</span>, data);</span><br><span class="line">    &#125;,</span><br><span class="line">  &#125;,</span><br><span class="line">  data: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> &#123;</span><br><span class="line">      show: <span class="literal">false</span>,</span><br><span class="line">    &#125;;</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;);</span><br><span class="line">Vue.component(<span class="string">"show"</span>, &#123;</span><br><span class="line">  template: <span class="string">'&lt;button @click="on_click()"&gt;显示余额&lt;/button&gt;'</span>,</span><br><span class="line">  methods: &#123;</span><br><span class="line">    on_click() &#123;</span><br><span class="line">      <span class="keyword">this</span>.$emit(<span class="string">"show-balance"</span>, &#123; <span class="attr">a</span>: <span class="number">1</span>, <span class="attr">b</span>: <span class="number">2</span> &#125;); <span class="comment">//$emit向父级元素传递事件，触发一个事件</span></span><br><span class="line">    &#125;,</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="keyword">new</span> Vue(&#123;</span><br><span class="line">  el: <span class="string">"#app"</span>,</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h1 id="组件-任意及平行组件间通信"><a href="#组件-任意及平行组件间通信" class="headerlink" title="组件 - 任意及平行组件间通信"></a>组件 - 任意及平行组件间通信</h1><blockquote><ul><li>模板必须有最外层根元素<code>div</code>等</li></ul></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> Event = <span class="keyword">new</span> Vue(); <span class="comment">//调度器</span></span><br><span class="line"></span><br><span class="line">Vue.component(<span class="string">"huahua"</span>, &#123;</span><br><span class="line">  template: <span class="string">`</span></span><br><span class="line"><span class="string">    &lt;div&gt;</span></span><br><span class="line"><span class="string">        我说：&lt;input @keyup="on_change" v-model="i_said"/&gt;</span></span><br><span class="line"><span class="string">    &lt;/div&gt;`</span>,</span><br><span class="line">  methods: &#123;</span><br><span class="line">    on_change: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">      Event.$emit(<span class="string">"huahua-said-something"</span>, <span class="keyword">this</span>.i_said); <span class="comment">//$emit触发器返回函数名和函数值</span></span><br><span class="line">    &#125;,</span><br><span class="line">  &#125;,</span><br><span class="line">  data: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> &#123;</span><br><span class="line">      i_said: <span class="string">""</span>,</span><br><span class="line">    &#125;;</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;);</span><br><span class="line">Vue.component(<span class="string">"shuandan"</span>, &#123;</span><br><span class="line">  template: <span class="string">`&lt;div&gt;花花说：&#123;&#123;huahua_said&#125;&#125;&lt;/div&gt;`</span>,</span><br><span class="line">  data: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> &#123;</span><br><span class="line">      huahua_said: <span class="string">""</span>,</span><br><span class="line">    &#125;;</span><br><span class="line">  &#125;,</span><br><span class="line">  mounted: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="comment">//钩子，生命周期完成后，成熟后触发事件</span></span><br><span class="line">    <span class="keyword">var</span> me = <span class="keyword">this</span>;</span><br><span class="line">    Event.$on(<span class="string">"huahua-said-something"</span>, <span class="function"><span class="keyword">function</span> (<span class="params">data</span>) </span>&#123;</span><br><span class="line">      me.huahua_said = data;</span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="keyword">new</span> Vue(&#123;</span><br><span class="line">  el: <span class="string">"#app"</span>,</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h1 id="过滤器"><a href="#过滤器" class="headerlink" title="过滤器"></a>过滤器</h1><blockquote><ul><li><code>filter</code>和计算属性类似，简单的用<code>filter</code>，复杂的用计算属性，计算属性有缓存</li></ul></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">Vue.filter(<span class="string">"meter"</span>, <span class="function"><span class="keyword">function</span> (<span class="params">val, unit</span>) </span>&#123;</span><br><span class="line">  val = val || <span class="number">0</span>; <span class="comment">//无val默认值为0</span></span><br><span class="line">  unit = unit || <span class="string">"m"</span>; <span class="comment">//无unit默认值为m</span></span><br><span class="line">  <span class="keyword">return</span> (val / <span class="number">1000</span>).toFixed(<span class="number">2</span>) + unit;</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">Vue.filter(<span class="string">"currency"</span>, <span class="function"><span class="keyword">function</span> (<span class="params">val, unit</span>) </span>&#123;</span><br><span class="line">  val = val || <span class="number">0</span>;</span><br><span class="line">  unit = unit || <span class="string">"元"</span>;</span><br><span class="line">  <span class="keyword">return</span> val + unit;</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="keyword">new</span> Vue(&#123;</span><br><span class="line">  el: <span class="string">"#app"</span>,</span><br><span class="line">  data: &#123;</span><br><span class="line">    price: <span class="number">10</span>,</span><br><span class="line">    length: <span class="number">10</span>,</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">input</span> <span class="attr">v-model</span>=<span class="string">"length"</span> /&gt;</span> mm</span><br><span class="line">  <span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line">  &#123;&#123;length | meter&#125;&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">hr</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">input</span> <span class="attr">v-model</span>=<span class="string">"price"</span> /&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line">  &#123;&#123; price | currency('USD') &#125;&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><h1 id="自定义指令-基础配置"><a href="#自定义指令-基础配置" class="headerlink" title="自定义指令 - 基础配置"></a>自定义指令 - 基础配置</h1><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">Vue.directive(<span class="string">"pin"</span>, <span class="function"><span class="keyword">function</span> (<span class="params">el, binding</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">var</span> pinned = binding.value; <span class="comment">//默认为false</span></span><br><span class="line">  <span class="built_in">console</span>.log(pinned);</span><br><span class="line">  <span class="keyword">if</span> (pinned) &#123;</span><br><span class="line">    el.style.position = <span class="string">"fixed"</span>;</span><br><span class="line">    el.style.top = <span class="string">"10px"</span>;</span><br><span class="line">    el.style.left = <span class="string">"10px"</span>;</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    el.style.position = <span class="string">"static"</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="keyword">new</span> Vue(&#123;</span><br><span class="line">  el: <span class="string">"#app"</span>,</span><br><span class="line">  data: &#123;</span><br><span class="line">    card1: &#123;</span><br><span class="line">      pinned: <span class="literal">false</span>,</span><br><span class="line">    &#125;,</span><br><span class="line">    card2: &#123;</span><br><span class="line">      pinned: <span class="literal">false</span>,</span><br><span class="line">    &#125;,</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">v-pin</span>=<span class="string">"card1.pinned"</span> <span class="attr">class</span>=<span class="string">"card"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">"card1.pinned = !card1.pinned"</span>&gt;</span>钉住/取消<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">  Lorem ipsum dolor sit amet, consectetur</span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">v-pin</span>=<span class="string">"card2.pinned"</span> <span class="attr">class</span>=<span class="string">"card"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">a</span> @<span class="attr">click</span>=<span class="string">"card2.pinned = !card2.pinned"</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>pin it<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">  Lorem ipsum dolor sit amet, consectetur</span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><h1 id="自定义指令-配置传参及修饰符"><a href="#自定义指令-配置传参及修饰符" class="headerlink" title="自定义指令 - 配置传参及修饰符"></a>自定义指令 - 配置传参及修饰符</h1><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">Vue.directive(<span class="string">"pin"</span>, <span class="function"><span class="keyword">function</span> (<span class="params">el, binding</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">var</span> pinned = binding.value;</span><br><span class="line">  <span class="comment">//modifiers：一个包含修饰符的对象。例如：v-my-directive.foo.bar 中，修饰符对象为 &#123; foo: true, bar: true &#125;。</span></span><br><span class="line">  <span class="keyword">var</span> position = binding.modifiers;</span><br><span class="line">  <span class="keyword">var</span> warning = binding.arg; <span class="comment">//arg紧跟:</span></span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (pinned) &#123;</span><br><span class="line">    el.style.position = <span class="string">"fixed"</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> key <span class="keyword">in</span> position) &#123;</span><br><span class="line">      <span class="keyword">if</span> (position[key]) &#123;</span><br><span class="line">        el.style[key] = <span class="string">"10px"</span>;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (warning === <span class="string">"true"</span>) &#123;</span><br><span class="line">      el.style.background = <span class="string">"yellow"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    el.style.position = <span class="string">"static"</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="keyword">new</span> Vue(&#123;</span><br><span class="line">  el: <span class="string">"#app"</span>,</span><br><span class="line">  data: &#123;</span><br><span class="line">    card1: &#123;</span><br><span class="line">      pinned: <span class="literal">false</span>,</span><br><span class="line">    &#125;,</span><br><span class="line">    card2: &#123;</span><br><span class="line">      pinned: <span class="literal">false</span>,</span><br><span class="line">    &#125;,</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">v-pin:true.bottom.left</span>=<span class="string">"card1.pinned"</span> <span class="attr">class</span>=<span class="string">"card"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">"card1.pinned = !card1.pinned"</span>&gt;</span>钉住/取消<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">  Lorem ipsum dolor sit amet, consectetur</span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">v-pin</span>=<span class="string">"card2.pinned"</span> <span class="attr">class</span>=<span class="string">"card"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">a</span> @<span class="attr">click</span>=<span class="string">"card2.pinned = !card2.pinned"</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>pin it<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">  Lorem ipsum dolor sit amet, consectetur</span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><p>###混合 <code>mixins</code></p><blockquote><ul><li><code>component</code>中代码复用</li></ul></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> base = &#123;</span><br><span class="line">  methods: &#123;</span><br><span class="line">    show: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">      <span class="keyword">this</span>.visible = <span class="literal">true</span>;</span><br><span class="line">    &#125;,</span><br><span class="line">    hide: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">      <span class="keyword">this</span>.visible = <span class="literal">false</span>;</span><br><span class="line">    &#125;,</span><br><span class="line">    toggle: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">      <span class="keyword">this</span>.visible = !<span class="keyword">this</span>.visible;</span><br><span class="line">    &#125;,</span><br><span class="line">  &#125;,</span><br><span class="line">  data: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> &#123;</span><br><span class="line">      visible: <span class="literal">false</span>,</span><br><span class="line">    &#125;;</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">Vue.component(<span class="string">"tooltip"</span>, &#123;</span><br><span class="line">  template: <span class="string">`</span></span><br><span class="line"><span class="string">  &lt;div&gt;</span></span><br><span class="line"><span class="string">    &lt;span @mouseenter="show" @mouseleave="hide"&gt;bys&lt;/span&gt;</span></span><br><span class="line"><span class="string">    &lt;div v-if="visible"&gt;</span></span><br><span class="line"><span class="string">    白岩松</span></span><br><span class="line"><span class="string">    &lt;/div&gt;</span></span><br><span class="line"><span class="string">  &lt;/div&gt;</span></span><br><span class="line"><span class="string">  `</span>,</span><br><span class="line">  mixins: [base],</span><br><span class="line">  data: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> &#123;</span><br><span class="line">      visible: <span class="literal">true</span>,</span><br><span class="line">    &#125;;</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">Vue.component(<span class="string">"popup"</span>, &#123;</span><br><span class="line">  template: <span class="string">`</span></span><br><span class="line"><span class="string">  &lt;div&gt;</span></span><br><span class="line"><span class="string">    &lt;button @click="toggle"&gt;Popup&lt;/button&gt;</span></span><br><span class="line"><span class="string">        &lt;div v-if="visible"&gt;</span></span><br><span class="line"><span class="string">        &lt;span @click="hide"&gt;X&lt;/span&gt;</span></span><br><span class="line"><span class="string">          &lt;h4&gt;title&lt;/h4&gt;</span></span><br><span class="line"><span class="string">    Lorem ipsum dolor sit amet, consectetur adipisicing elit. Amet dolorum, iusto non nostrum porro ratione. Dolor dolorem id impedit. Dolore excepturi exercitationem incidunt iste magnam odio quas temporibus. Assumenda, magni.</span></span><br><span class="line"><span class="string">        &lt;/div&gt;</span></span><br><span class="line"><span class="string">  &lt;/div&gt;</span></span><br><span class="line"><span class="string">  `</span>,</span><br><span class="line">  mixins: [base],</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="keyword">new</span> Vue(&#123;</span><br><span class="line">  el: <span class="string">"#app"</span>,</span><br><span class="line">  data: &#123;&#125;,</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"app"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">tooltip</span>&gt;</span><span class="tag">&lt;/<span class="name">tooltip</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">popup</span>&gt;</span><span class="tag">&lt;/<span class="name">popup</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><h1 id="插槽-slots"><a href="#插槽-slots" class="headerlink" title="插槽 slots"></a>插槽 slots</h1><blockquote><ul><li>相当于<code>component</code>中的变量</li></ul></blockquote><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"app"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">panel</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">slot</span>=<span class="string">"title"</span>&gt;</span>Yo.<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">slot</span>=<span class="string">"content"</span>&gt;</span>Yo Yo Yo<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">panel</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">template</span> <span class="attr">id</span>=<span class="string">"panel-tpl"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"panel"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"title"</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">slot</span> <span class="attr">name</span>=<span class="string">"title"</span>&gt;</span><span class="tag">&lt;/<span class="name">slot</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"content"</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">slot</span> <span class="attr">name</span>=<span class="string">"content"</span>&gt;</span><span class="tag">&lt;/<span class="name">slot</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"footer"</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">slot</span> <span class="attr">name</span>=<span class="string">"footer"</span>&gt;</span> 更多信息 <span class="tag">&lt;/<span class="name">slot</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br></pre></td></tr></table></figure><h1 id="vue-router-是什么和怎么用"><a href="#vue-router-是什么和怎么用" class="headerlink" title="vue-router 是什么和怎么用"></a>vue-router 是什么和怎么用</h1><blockquote><p>无整页刷新，表单数据点回来仍保留</p></blockquote><h1 id="安装和基本配置"><a href="#安装和基本配置" class="headerlink" title="安装和基本配置"></a>安装和基本配置</h1><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> routes = [</span><br><span class="line">  &#123;</span><br><span class="line">    path: <span class="string">"/"</span>,</span><br><span class="line">    component: &#123;</span><br><span class="line">      template: <span class="string">`</span></span><br><span class="line"><span class="string">      &lt;div&gt;</span></span><br><span class="line"><span class="string">        &lt;h1&gt;首页&lt;/h1&gt;</span></span><br><span class="line"><span class="string">      &lt;/div&gt;</span></span><br><span class="line"><span class="string">      `</span>,</span><br><span class="line">    &#125;,</span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    path: <span class="string">"/about"</span>,</span><br><span class="line">    component: &#123;</span><br><span class="line">      template: <span class="string">`</span></span><br><span class="line"><span class="string">      &lt;div&gt;</span></span><br><span class="line"><span class="string">        &lt;h1&gt;关于我们&lt;/h1&gt;</span></span><br><span class="line"><span class="string">      &lt;/div&gt;</span></span><br><span class="line"><span class="string">      `</span>,</span><br><span class="line">    &#125;,</span><br><span class="line">  &#125;,</span><br><span class="line">];</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> router = <span class="keyword">new</span> VueRouter(&#123;</span><br><span class="line">  routes: routes,</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="keyword">new</span> Vue(&#123;</span><br><span class="line">  el: <span class="string">"#app"</span>,</span><br><span class="line">  router: router,</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"app"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">router-link</span> <span class="attr">to</span>=<span class="string">"/"</span>&gt;</span>首页<span class="tag">&lt;/<span class="name">router-link</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">router-link</span> <span class="attr">to</span>=<span class="string">"/about"</span>&gt;</span>关于我们<span class="tag">&lt;/<span class="name">router-link</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">router-view</span>&gt;</span><span class="tag">&lt;/<span class="name">router-view</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><h1 id="传参及获取传参"><a href="#传参及获取传参" class="headerlink" title="传参及获取传参"></a>传参及获取传参</h1><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">path: <span class="string">'/user/:name'</span>,</span><br><span class="line">component: &#123;</span><br><span class="line">  template: <span class="string">`</span></span><br><span class="line"><span class="string">  &lt;div&gt;</span></span><br><span class="line"><span class="string">    &lt;div&gt;我叫：&#123;&#123;$route.params.name&#125;&#125;&lt;/div&gt;</span></span><br><span class="line"><span class="string">    &lt;div&gt;我今年：&#123;&#123;$route.query.age&#125;&#125;岁了&lt;/div&gt;</span></span><br><span class="line"><span class="string">  &lt;/div&gt;</span></span><br><span class="line"><span class="string">  `</span>,</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"app"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">router-link</span> <span class="attr">to</span>=<span class="string">"/"</span>&gt;</span>首页<span class="tag">&lt;/<span class="name">router-link</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">router-link</span> <span class="attr">to</span>=<span class="string">"/about"</span>&gt;</span>关于我们<span class="tag">&lt;/<span class="name">router-link</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">router-link</span> <span class="attr">to</span>=<span class="string">"/user/王花花"</span>&gt;</span>王花花<span class="tag">&lt;/<span class="name">router-link</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">router-link</span> <span class="attr">to</span>=<span class="string">"/user/李拴蛋"</span>&gt;</span>李拴蛋<span class="tag">&lt;/<span class="name">router-link</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">router-view</span>&gt;</span><span class="tag">&lt;/<span class="name">router-view</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><h1 id="子路由"><a href="#子路由" class="headerlink" title="子路由"></a>子路由</h1><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> routes = [</span><br><span class="line">  &#123;</span><br><span class="line">    path: <span class="string">"/"</span>,</span><br><span class="line">    component: &#123;</span><br><span class="line">      template: <span class="string">`</span></span><br><span class="line"><span class="string">      &lt;div&gt;</span></span><br><span class="line"><span class="string">        &lt;h1&gt;首页&lt;/h1&gt;</span></span><br><span class="line"><span class="string">      &lt;/div&gt;</span></span><br><span class="line"><span class="string">      `</span>,</span><br><span class="line">    &#125;,</span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    path: <span class="string">"/about"</span>,</span><br><span class="line">    component: &#123;</span><br><span class="line">      template: <span class="string">`</span></span><br><span class="line"><span class="string">      &lt;div&gt;</span></span><br><span class="line"><span class="string">        &lt;h1&gt;关于我们&lt;/h1&gt;</span></span><br><span class="line"><span class="string">      &lt;/div&gt;</span></span><br><span class="line"><span class="string">      `</span>,</span><br><span class="line">    &#125;,</span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    path: <span class="string">"/user/:name"</span>,</span><br><span class="line">    component: &#123;</span><br><span class="line">      template: <span class="string">`</span></span><br><span class="line"><span class="string">      &lt;div&gt;</span></span><br><span class="line"><span class="string">        &lt;div&gt;我叫：&#123;&#123;$route.params.name&#125;&#125;&lt;/div&gt;</span></span><br><span class="line"><span class="string">        &lt;router-link to="more" append&gt;更多信息&lt;/router-link&gt;</span></span><br><span class="line"><span class="string">        &lt;router-view&gt;&lt;/router-view&gt;</span></span><br><span class="line"><span class="string">      &lt;/div&gt;</span></span><br><span class="line"><span class="string">      `</span>,</span><br><span class="line">    &#125;,</span><br><span class="line">    children: [</span><br><span class="line">      &#123;</span><br><span class="line">        path: <span class="string">"more"</span>,</span><br><span class="line">        component: &#123;</span><br><span class="line">          template: <span class="string">`</span></span><br><span class="line"><span class="string">          &lt;div&gt;</span></span><br><span class="line"><span class="string">          用户&#123;&#123;$route.params.name&#125;&#125;的详细信息</span></span><br><span class="line"><span class="string">          Lorem ipsum dolor sit amet, consectetur adipisicing elit. Adipisci cum deleniti doloribus expedita inventore natus officiis quod quos similique voluptate! Distinctio nisi sequi tenetur voluptatum? Debitis iste neque pariatur voluptatibus?</span></span><br><span class="line"><span class="string">            &lt;/div&gt;</span></span><br><span class="line"><span class="string">          `</span>,</span><br><span class="line">        &#125;,</span><br><span class="line">      &#125;,</span><br><span class="line">    ],</span><br><span class="line">  &#125;,</span><br><span class="line">];</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> router = <span class="keyword">new</span> VueRouter(&#123;</span><br><span class="line">  routes: routes,</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"app"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">router-link</span> <span class="attr">to</span>=<span class="string">"/"</span>&gt;</span>首页<span class="tag">&lt;/<span class="name">router-link</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">router-link</span> <span class="attr">to</span>=<span class="string">"/about"</span>&gt;</span>关于我们<span class="tag">&lt;/<span class="name">router-link</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">router-link</span> <span class="attr">to</span>=<span class="string">"/user/王花花"</span>&gt;</span>王花花<span class="tag">&lt;/<span class="name">router-link</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">router-link</span> <span class="attr">to</span>=<span class="string">"/user/李拴蛋"</span>&gt;</span>李拴蛋<span class="tag">&lt;/<span class="name">router-link</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">router-view</span>&gt;</span><span class="tag">&lt;/<span class="name">router-view</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><h1 id="手动访问和传参"><a href="#手动访问和传参" class="headerlink" title="手动访问和传参"></a>手动访问和传参</h1><h1 id="命名视图"><a href="#命名视图" class="headerlink" title="命名视图"></a>命名视图</h1><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> routes = [</span><br><span class="line">  &#123;</span><br><span class="line">    path: <span class="string">"/"</span>,</span><br><span class="line">    component: &#123;</span><br><span class="line">      template: <span class="string">`</span></span><br><span class="line"><span class="string">      &lt;div&gt;</span></span><br><span class="line"><span class="string">        &lt;h1&gt;首页&lt;/h1&gt;</span></span><br><span class="line"><span class="string">      &lt;/div&gt;</span></span><br><span class="line"><span class="string">      `</span>,</span><br><span class="line">    &#125;,</span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    path: <span class="string">"/user"</span>,</span><br><span class="line">    components: &#123;</span><br><span class="line">      sidebar: &#123;</span><br><span class="line">        template: <span class="string">`</span></span><br><span class="line"><span class="string">        &lt;div&gt;</span></span><br><span class="line"><span class="string">          &lt;ul&gt;</span></span><br><span class="line"><span class="string">              &lt;li&gt;用户列表&lt;/li&gt;</span></span><br><span class="line"><span class="string">              &lt;li&gt;权限管理&lt;/li&gt;</span></span><br><span class="line"><span class="string">          &lt;/ul&gt;</span></span><br><span class="line"><span class="string">        &lt;/div&gt;</span></span><br><span class="line"><span class="string">        `</span>,</span><br><span class="line">      &#125;,</span><br><span class="line">      content: &#123;</span><br><span class="line">        template: <span class="string">`</span></span><br><span class="line"><span class="string">            &lt;div&gt;Lorem ipsum dolor sit amet, consectetur adipisicing elit. Deleniti in, laborum molestias necessitatibus optio perferendis quaerat quas qui quisquam sapiente. Architecto corporis eos eum libero optio, perspiciatis quo rem vel!&lt;/div&gt;</span></span><br><span class="line"><span class="string">        `</span>,</span><br><span class="line">      &#125;,</span><br><span class="line">    &#125;,</span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    path: <span class="string">"/post"</span>,</span><br><span class="line">    components: &#123;</span><br><span class="line">      sidebar: &#123;</span><br><span class="line">        template: <span class="string">`</span></span><br><span class="line"><span class="string">        &lt;div&gt;</span></span><br><span class="line"><span class="string">          &lt;ul&gt;</span></span><br><span class="line"><span class="string">              &lt;li&gt;帖子列表&lt;/li&gt;</span></span><br><span class="line"><span class="string">              &lt;li&gt;标签管理&lt;/li&gt;</span></span><br><span class="line"><span class="string">          &lt;/ul&gt;</span></span><br><span class="line"><span class="string">        &lt;/div&gt;</span></span><br><span class="line"><span class="string">        `</span>,</span><br><span class="line">      &#125;,</span><br><span class="line">      content: &#123;</span><br><span class="line">        template: <span class="string">`</span></span><br><span class="line"><span class="string">            &lt;div&gt;Lorem ipsum dolor sit amet, consectetur adipisicing elit. Deleniti in, laborum molestias necessitatibus optio perferendis quaerat quas qui quisquam sapiente. Architecto corporis eos eum libero optio, perspiciatis quo rem vel!&lt;/div&gt;</span></span><br><span class="line"><span class="string">        `</span>,</span><br><span class="line">      &#125;,</span><br><span class="line">    &#125;,</span><br><span class="line">  &#125;,</span><br><span class="line">];</span><br></pre></td></tr></table></figure><h1 id="导航钩子"><a href="#导航钩子" class="headerlink" title="导航钩子"></a>导航钩子</h1><blockquote><p>访问限制，中间件，组件的生命周期</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> routes = [</span><br><span class="line">  &#123;</span><br><span class="line">    path: <span class="string">"/"</span>,</span><br><span class="line">    component: &#123;</span><br><span class="line">      template: <span class="string">`&lt;h1&gt;首页&lt;/h1&gt;`</span>,</span><br><span class="line">    &#125;,</span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    path: <span class="string">"/login"</span>,</span><br><span class="line">    component: &#123;</span><br><span class="line">      template: <span class="string">`&lt;h1&gt;登录&lt;/h1&gt;`</span>,</span><br><span class="line">    &#125;,</span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    path: <span class="string">"/post"</span>,</span><br><span class="line">    component: &#123;</span><br><span class="line">      template: <span class="string">`&lt;h1&gt;帖子管理&lt;/h1&gt;`</span>,</span><br><span class="line">    &#125;,</span><br><span class="line">  &#125;,</span><br><span class="line">];</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> router = <span class="keyword">new</span> VueRouter(&#123;</span><br><span class="line">  routes: routes,</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">router.beforeEach(<span class="function"><span class="keyword">function</span> (<span class="params">to, from, next</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">var</span> logged_in = <span class="literal">true</span>;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (!logged_in &amp;&amp; to.path == <span class="string">"/post"</span>) next(<span class="string">"/login"</span>);</span><br><span class="line">  <span class="keyword">else</span> next();</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">router.afterEach(<span class="function"><span class="keyword">function</span> (<span class="params">to, from</span>) </span>&#123;&#125;);</span><br></pre></td></tr></table></figure><h1 id="元数据及路由匹配"><a href="#元数据及路由匹配" class="headerlink" title="元数据及路由匹配"></a>元数据及路由匹配</h1><blockquote><p>使用 meta 元数据进行访问限制</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> routes = [</span><br><span class="line">  &#123;</span><br><span class="line">    path: <span class="string">"/"</span>,</span><br><span class="line">    component: &#123;</span><br><span class="line">      template: <span class="string">`&lt;h1&gt;首页&lt;/h1&gt;`</span>,</span><br><span class="line">    &#125;,</span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    path: <span class="string">"/a"</span>,</span><br><span class="line">    meta: &#123;</span><br><span class="line">      login_required: <span class="literal">true</span>,</span><br><span class="line">    &#125;,</span><br><span class="line">    component: &#123;</span><br><span class="line">      template: <span class="string">`&lt;h1&gt;A&lt;/h1&gt;`</span>,</span><br><span class="line">    &#125;,</span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    path: <span class="string">"/login"</span>,</span><br><span class="line">    component: &#123;</span><br><span class="line">      template: <span class="string">`&lt;h1&gt;登录&lt;/h1&gt;`</span>,</span><br><span class="line">    &#125;,</span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    path: <span class="string">"/post"</span>,</span><br><span class="line">    meta: &#123;</span><br><span class="line">      login_required: <span class="literal">true</span>,</span><br><span class="line">    &#125;,</span><br><span class="line">    component: &#123;</span><br><span class="line">      template: <span class="string">`&lt;div&gt;</span></span><br><span class="line"><span class="string">        &lt;h1&gt;帖子管理&lt;/h1&gt;</span></span><br><span class="line"><span class="string">        &lt;router-link to="rain" append&gt;后座&lt;/router-link&gt;</span></span><br><span class="line"><span class="string">        &lt;router-view&gt;&lt;/router-view&gt;</span></span><br><span class="line"><span class="string">      &lt;/div&gt;`</span>,</span><br><span class="line">    &#125;,</span><br><span class="line">    children: [</span><br><span class="line">      &#123;</span><br><span class="line">        path: <span class="string">"rain"</span>,</span><br><span class="line">        component: &#123;</span><br><span class="line">          template: <span class="string">`&lt;h2&gt;雨天asdf后座&lt;/h2&gt;`</span>,</span><br><span class="line">        &#125;,</span><br><span class="line">      &#125;,</span><br><span class="line">    ],</span><br><span class="line">  &#125;,</span><br><span class="line">];</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> router = <span class="keyword">new</span> VueRouter(&#123;</span><br><span class="line">  routes: routes,</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">router.beforeEach(<span class="function"><span class="keyword">function</span> (<span class="params">to, from, next</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">var</span> logged_in = <span class="literal">true</span>;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (</span><br><span class="line">    !logged_in &amp;&amp;</span><br><span class="line">    to.matched.some(<span class="function"><span class="keyword">function</span> (<span class="params">item</span>) </span>&#123;</span><br><span class="line">      <span class="keyword">return</span> item.meta.login_required;</span><br><span class="line">    &#125;)</span><br><span class="line">  )</span><br><span class="line">    next(<span class="string">"/login"</span>);</span><br><span class="line">  <span class="keyword">else</span> next();</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;hr&gt;
&lt;h2 id=&quot;title-Vue-学习小记-date-2019-年-04-月-08-日-00-27-43&quot;&gt;&lt;a href=&quot;#title-Vue-学习小记-date-2019-年-04-月-08-日-00-27-43&quot; class=&quot;headerlink&quot; titl
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>ThinkPHP学习小记</title>
    <link href="http://fengtx.tk/2020/05/03/yuque/ThinkPHP%E5%AD%A6%E4%B9%A0%E5%B0%8F%E8%AE%B0/"/>
    <id>http://fengtx.tk/2020/05/03/yuque/ThinkPHP学习小记/</id>
    <published>2020-05-03T10:02:36.000Z</published>
    <updated>2020-12-06T14:36:42.175Z</updated>
    
    <content type="html"><![CDATA[<h1 id="ID-不从-1-开始"><a href="#ID-不从-1-开始" class="headerlink" title="ID 不从 1 开始"></a>ID 不从 1 开始</h1><p><code>truncate table 你的表名</code></p><h1 id="无法访问"><a href="#无法访问" class="headerlink" title="无法访问"></a>无法访问</h1><p>可能保存了带<code>bom</code>的<code>utf</code>编码</p><h1 id="部署到-iis-服务器"><a href="#部署到-iis-服务器" class="headerlink" title="部署到 iis 服务器"></a>部署到 iis 服务器</h1><p>将<code>runtime</code>设定到支持写入的目录</p><h1 id="数据不为空显示"><a href="#数据不为空显示" class="headerlink" title="数据不为空显示"></a>数据不为空显示</h1><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 不等于 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">if</span> <span class="attr">condition</span>=<span class="string">"$result[0]['jiyao_id'] neq null"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">td</span> <span class="attr">style</span>=<span class="string">"vertical-align: middle;text-align:center;width: 20%"</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">span</span>&gt;</span><span class="tag">&lt;<span class="name">b</span>&gt;</span>机要编号<span class="tag">&lt;/<span class="name">b</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">td</span> <span class="attr">class</span>=<span class="string">"description"</span>&gt;</span>&#123;$result[0]['jiyao_id']&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br></pre></td></tr></table></figure><h1 id="1-0-转换"><a href="#1-0-转换" class="headerlink" title="1 0 转换"></a>1 0 转换</h1><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 字符串用'' --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">if</span> <span class="attr">condition</span>=<span class="string">"$student.is_searched eq 1"</span>&gt;</span>已查询<span class="tag">&lt;<span class="name">else</span>/&gt;</span>未查询<span class="tag">&lt;/<span class="name">if</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;ID-不从-1-开始&quot;&gt;&lt;a href=&quot;#ID-不从-1-开始&quot; class=&quot;headerlink&quot; title=&quot;ID 不从 1 开始&quot;&gt;&lt;/a&gt;ID 不从 1 开始&lt;/h1&gt;&lt;p&gt;&lt;code&gt;truncate table 你的表名&lt;/code&gt;&lt;/p&gt;
&lt;
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Spring学习小记</title>
    <link href="http://fengtx.tk/2020/05/03/yuque/Spring%E5%AD%A6%E4%B9%A0%E5%B0%8F%E8%AE%B0/"/>
    <id>http://fengtx.tk/2020/05/03/yuque/Spring学习小记/</id>
    <published>2020-05-03T10:02:31.000Z</published>
    <updated>2020-12-06T14:36:42.180Z</updated>
    
    <content type="html"><![CDATA[<h1 id="IOC"><a href="#IOC" class="headerlink" title="IOC"></a>IOC</h1><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://cdn.nlark.com/yuque/0/2020/png/366539/1588502899358-2757356e-f0e0-4974-aa0d-004a2b35d646.png#align=left&display=inline&height=1265&margin=%5Bobject%20Object%5D&name=image.png&originHeight=2530&originWidth=1240&size=588378&status=done&style=none&width=620" alt="image.png" title>                </div>                <div class="image-caption">image.png</div>            </figure><h1 id="AOP"><a href="#AOP" class="headerlink" title="AOP"></a>AOP</h1><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://cdn.nlark.com/yuque/0/2020/png/366539/1588502947248-ac62771b-6e3c-4ef4-b153-3776ad5890ae.png#align=left&display=inline&height=929&margin=%5Bobject%20Object%5D&name=image.png&originHeight=1858&originWidth=1240&size=406091&status=done&style=none&width=620" alt="image.png" title>                </div>                <div class="image-caption">image.png</div>            </figure><h1 id="Hibernate"><a href="#Hibernate" class="headerlink" title="Hibernate"></a>Hibernate</h1><h1 id="SpringMVC"><a href="#SpringMVC" class="headerlink" title="SpringMVC"></a>SpringMVC</h1><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://cdn.nlark.com/yuque/0/2020/png/366539/1588502951866-e47ec316-2d55-4168-9c0d-0ce9da14df4e.png#align=left&display=inline&height=773&margin=%5Bobject%20Object%5D&name=image.png&originHeight=1546&originWidth=1240&size=314179&status=done&style=none&width=620" alt="image.png" title>                </div>                <div class="image-caption">image.png</div>            </figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;IOC&quot;&gt;&lt;a href=&quot;#IOC&quot; class=&quot;headerlink&quot; title=&quot;IOC&quot;&gt;&lt;/a&gt;IOC&lt;/h1&gt;&lt;figure class=&quot;image-bubble&quot;&gt;
                &lt;div class=&quot;img-lightbo
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Java学习小记</title>
    <link href="http://fengtx.tk/2020/05/03/yuque/Java%E5%AD%A6%E4%B9%A0%E5%B0%8F%E8%AE%B0/"/>
    <id>http://fengtx.tk/2020/05/03/yuque/Java学习小记/</id>
    <published>2020-05-03T10:02:26.000Z</published>
    <updated>2020-12-06T14:36:42.190Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Scanner"><a href="#Scanner" class="headerlink" title="Scanner"></a>Scanner</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line">Scanner s = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line"><span class="comment">//  使用hasNextXxx()方法进行验证，再使用nextXxx()来读取</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//  next()</span></span><br><span class="line"><span class="comment">//  next() 不能得到带有空格的字符串</span></span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ScannerDemo</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Scanner scan = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">        <span class="comment">// 从键盘接收数据</span></span><br><span class="line">        <span class="comment">//next方式接收字符串</span></span><br><span class="line">        System.out.println(<span class="string">"next方式接收："</span>);</span><br><span class="line">        <span class="comment">// 判断是否还有输入</span></span><br><span class="line">        <span class="keyword">if</span>(scan.hasNext())&#123;</span><br><span class="line">          String str1 = scan.next();</span><br><span class="line">          System.out.println(<span class="string">"输入的数据为："</span>+str1);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//nextLine()</span></span><br><span class="line"><span class="comment">//  以Enter为结束符，可以获得空白</span></span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ScannerDemo</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Scanner scan = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">        <span class="comment">// 从键盘接收数据</span></span><br><span class="line">        <span class="comment">//nextLine方式接收字符串</span></span><br><span class="line">        System.out.println(<span class="string">"nextLine方式接收："</span>);</span><br><span class="line">        <span class="comment">// 判断是否还有输入</span></span><br><span class="line">        <span class="keyword">if</span>(scan.hasNextLine())&#123;</span><br><span class="line">          String str2 = scan.nextLine();</span><br><span class="line">          System.out.println(<span class="string">"输入的数据为："</span>+str2);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">scanner.close();</span><br></pre></td></tr></table></figure><h1 id="数组大小用-size"><a href="#数组大小用-size" class="headerlink" title="数组大小用 size()"></a>数组大小用 size()</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">students.size();</span><br></pre></td></tr></table></figure><h1 id="数组访问用-get"><a href="#数组访问用-get" class="headerlink" title="数组访问用 get()"></a>数组访问用 get()</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">temp = students.get(i);</span><br></pre></td></tr></table></figure><h1 id="数组修改用-set"><a href="#数组修改用-set" class="headerlink" title="数组修改用 set()"></a>数组修改用 set()</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">students.set(i, stu);</span><br></pre></td></tr></table></figure><h1 id="for-的遍历"><a href="#for-的遍历" class="headerlink" title="for 的遍历"></a>for 的遍历</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//打印所有学生的信息</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">displayAllStudent</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (students.size() &gt; <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="keyword">for</span> (Student stu : students) &#123;</span><br><span class="line">            System.out.println(<span class="string">"学号: "</span> + stu.getSno() + <span class="string">"\t姓名: "</span></span><br><span class="line">                    + stu.getSname() + <span class="string">"\t系部: "</span> + stu.getSdept());</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">"数据库中无学生记录!"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="读取文件"><a href="#读取文件" class="headerlink" title="读取文件"></a>读取文件</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 读取文件获得原始数据</span></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">getData</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        FileReader in_ = <span class="keyword">new</span> FileReader(<span class="string">"StudentDAO.txt"</span>);</span><br><span class="line">        BufferedReader in = <span class="keyword">new</span> BufferedReader(in_);</span><br><span class="line">        String line;</span><br><span class="line">        String reg1 = <span class="string">"\\s+"</span>;</span><br><span class="line">        String str[] = <span class="keyword">new</span> String[<span class="number">3</span>];</span><br><span class="line">        <span class="keyword">while</span> ((line = in.readLine()) != <span class="keyword">null</span>) &#123;</span><br><span class="line">            Student temp = <span class="keyword">new</span> Student();</span><br><span class="line">            str = line.split(reg1);</span><br><span class="line">            temp.setSno(str[<span class="number">0</span>]);</span><br><span class="line">            temp.setSname(str[<span class="number">1</span>]);</span><br><span class="line">            temp.setSdept(str[<span class="number">2</span>]);</span><br><span class="line">            students.add(temp);</span><br><span class="line">        &#125;</span><br><span class="line">        in.close();</span><br><span class="line">    &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">        System.out.println(e);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="写入文件"><a href="#写入文件" class="headerlink" title="写入文件"></a>写入文件</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//更新数据库,把数据输入文件</span></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">updateData</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        FileWriter out_ = <span class="keyword">new</span> FileWriter(<span class="string">"StudentDAO.txt"</span>);</span><br><span class="line">        BufferedWriter out = <span class="keyword">new</span> BufferedWriter(out_);</span><br><span class="line">        Student temp = <span class="keyword">new</span> Student();</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; students.size(); i++) &#123;</span><br><span class="line">            temp = students.get(i);</span><br><span class="line">            out.write(temp.getSno() + <span class="string">" "</span> + temp.getSname() + <span class="string">" "</span></span><br><span class="line">                    + temp.getSdept() + <span class="string">"\r\n"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        out.close();</span><br><span class="line">    &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">        System.out.println(e);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="BufferedReader"><a href="#BufferedReader" class="headerlink" title="BufferedReader"></a>BufferedReader</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">do</span> &#123;</span><br><span class="line">    <span class="comment">//从输入流读取一个字符并把该字符作为整数值返回， 当流结束的时候返回 -1</span></span><br><span class="line">    c = (<span class="keyword">char</span>)br.read();</span><br><span class="line">    System.out.println(c);</span><br><span class="line">&#125; <span class="keyword">while</span> (c != <span class="string">'q'</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">do</span> &#123;</span><br><span class="line">    str = br.readLine();</span><br><span class="line">    System.out.println(str);</span><br><span class="line">&#125; <span class="keyword">while</span>(!str.equals(<span class="string">"end"</span>));</span><br></pre></td></tr></table></figure><h1 id="FileInputStream（从文件读取数据）"><a href="#FileInputStream（从文件读取数据）" class="headerlink" title="FileInputStream（从文件读取数据）"></a>FileInputStream（从文件读取数据）</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">InputStream f = <span class="keyword">new</span> FileInputStream(<span class="string">"C:/java/hello"</span>);</span><br><span class="line"></span><br><span class="line">File f = <span class="keyword">new</span> File(<span class="string">"C:/java/hello"</span>);</span><br><span class="line">InputStream out = <span class="keyword">new</span> FileInputStream(f);</span><br></pre></td></tr></table></figure><h1 id="FileOutputStream（向文件中写数据）"><a href="#FileOutputStream（向文件中写数据）" class="headerlink" title="FileOutputStream（向文件中写数据）"></a>FileOutputStream（向文件中写数据）</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">OutputStream f = <span class="keyword">new</span> FileOutputStream(<span class="string">"C:/java/hello"</span>)</span><br><span class="line"></span><br><span class="line">File f = <span class="keyword">new</span> File(<span class="string">"C:/java/hello"</span>);</span><br><span class="line">OutputStream f = <span class="keyword">new</span> FileOutputStream(f);</span><br></pre></td></tr></table></figure><h1 id="读取写入流最后都要-close"><a href="#读取写入流最后都要-close" class="headerlink" title="读取写入流最后都要 close();"></a>读取写入流最后都要 close();</h1><h1 id="读写一定要用-byte"><a href="#读写一定要用-byte" class="headerlink" title="读写一定要用 byte"></a>读写一定要用 byte</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">byte</span> bWrite[] = &#123; <span class="number">11</span>, <span class="number">21</span>, <span class="number">3</span>, <span class="number">40</span>, <span class="number">5</span> &#125;;</span><br><span class="line"><span class="keyword">byte</span> bWrite[] = <span class="string">"zhouzhiwenishandsome"</span>.getBytes();</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;Scanner&quot;&gt;&lt;a href=&quot;#Scanner&quot; class=&quot;headerlink&quot; title=&quot;Scanner&quot;&gt;&lt;/a&gt;Scanner&lt;/h1&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>IEEE LaTeX模板使用BibTeX</title>
    <link href="http://fengtx.tk/2020/05/03/yuque/IEEE%20LaTeX%E6%A8%A1%E6%9D%BF%E4%BD%BF%E7%94%A8BibTeX/"/>
    <id>http://fengtx.tk/2020/05/03/yuque/IEEE LaTeX模板使用BibTeX/</id>
    <published>2020-05-03T10:02:21.000Z</published>
    <updated>2020-12-06T14:36:42.203Z</updated>
    
    <content type="html"><![CDATA[<p>最近在写 IEEE 的论文，就为了参考文献不愿意下载那么大的 LaxTex，发现了一个在线的 LaTeX editor <a href="https://www.sharelatex.com/" target="_blank" rel="noopener">https://www.sharelatex.com/</a> ， 发现还挺好用的。</p><p>在 Google Scholar 获得的文献引用格式一般是 BibTex 的，而 IEEE Transactions 的模板默认用的是 BibItem。目前没有什么自动化的 BibTeX 转 BibItem 的工具或网站。</p><h1 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h1><ol><li>在 Google Scholar 搜索到的文献结果，点击下面的“Cite”，然后点击“BibTeX”即可得到类似如下的文献信息</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">@article&#123;b1, // b1为正文引用时的名字</span><br><span class="line">  title=&#123;Reading behavior in the digital environment: Changes in reading behavior over the past ten years&#125;,</span><br><span class="line">  author=&#123;Liu, Ziming&#125;,</span><br><span class="line">  journal=&#123;Journal of documentation&#125;,</span><br><span class="line">  volume=&#123;61&#125;,</span><br><span class="line">  number=&#123;6&#125;,</span><br><span class="line">  pages=&#123;700--712&#125;,</span><br><span class="line">  year=&#123;2005&#125;,</span><br><span class="line">  publisher=&#123;Emerald Group Publishing Limited&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="2"><li>将以上信息添加到侧边栏中的 references.bib 文件中，文件名随意，与.tex 文件在同一目录</li><li>在 IEEE Transactions 模板中，默认的引用文献是这样写的</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">\begin&#123;thebibliography&#125;&#123;00&#125;</span><br><span class="line">\bibitem&#123;b1&#125; G. Eason, B. Noble, and I. N. Sneddon, ``On certain integrals of Lipschitz-Hankel type involving products of Bessel functions,&apos;&apos; Phil. Trans. Roy. Soc. London, vol. A247, pp. 529--551, April 1955.</span><br><span class="line">\bibitem&#123;b2&#125; J. Clerk Maxwell, A Treatise on Electricity and Magnetism, 3rd ed., vol. 2. Oxford: Clarendon, 1892, pp.68--73.</span><br><span class="line">\bibitem&#123;b3&#125; I. S. Jacobs and C. P. Bean, ``Fine particles, thin films and exchange anisotropy,&apos;&apos; in Magnetism, vol. III, G. T. Rado and H. Suhl, Eds. New York: Academic, 1963, pp. 271--350.</span><br><span class="line">\bibitem&#123;b4&#125; K. Elissa, ``Title of paper if known,&apos;&apos; unpublished.</span><br><span class="line">\bibitem&#123;b5&#125; R. Nicole, ``Title of paper with only first word capitalized,&apos;&apos; J. Name Stand. Abbrev., in press.</span><br><span class="line">\bibitem&#123;b6&#125; Y. Yorozu, M. Hirano, K. Oka, and Y. Tagawa, ``Electron spectroscopy studies on magneto-optical media and plastic substrate interface,&apos;&apos; IEEE Transl. J. Magn. Japan, vol. 2, pp. 740--741, August 1987 [Digests 9th Annual Conf. Magnetics Japan, p. 301, 1982].</span><br><span class="line">\bibitem&#123;b7&#125; M. Young, The Technical Writer&apos;s Handbook. Mill Valley, CA: University Science, 1989.</span><br><span class="line">\end&#123;thebibliography&#125;</span><br></pre></td></tr></table></figure><ol start="4"><li>将上述部分换成如下代码</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">\bibliographystyle&#123;IEEEtran&#125;</span><br><span class="line">\bibliography&#123;references&#125;&#123;&#125;</span><br></pre></td></tr></table></figure><ol start="5"><li>点击重新编译即可看到效果</li></ol><h1 id="注意"><a href="#注意" class="headerlink" title="注意"></a>注意</h1><p>正文中必须要使用<code>\cite{b1}</code>引用后，正文中的参考文献才会显示引用的条目，否则编译无数次也没有效果 😢</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;最近在写 IEEE 的论文，就为了参考文献不愿意下载那么大的 LaxTex，发现了一个在线的 LaTeX editor &lt;a href=&quot;https://www.sharelatex.com/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>IDEA构建SSH项目（hibernate自动生成+jetty的使用）</title>
    <link href="http://fengtx.tk/2020/05/03/yuque/IDEA%E6%9E%84%E5%BB%BASSH%E9%A1%B9%E7%9B%AE%EF%BC%88hibernate%E8%87%AA%E5%8A%A8%E7%94%9F%E6%88%90+jetty%E7%9A%84%E4%BD%BF%E7%94%A8%EF%BC%89/"/>
    <id>http://fengtx.tk/2020/05/03/yuque/IDEA构建SSH项目（hibernate自动生成+jetty的使用）/</id>
    <published>2020-05-03T10:02:16.000Z</published>
    <updated>2020-12-06T14:36:42.240Z</updated>
    
    <content type="html"><![CDATA[<h1 id="1-创建-Maven-项目"><a href="#1-创建-Maven-项目" class="headerlink" title="1 创建 Maven 项目"></a>1 创建 Maven 项目</h1><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://upload-images.jianshu.io/upload_images/8151888-aa8025257050edd9.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240#alt=image.png" alt title>                </div>                <div class="image-caption"></div>            </figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://upload-images.jianshu.io/upload_images/8151888-c5728dbc0b4c097e.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240#alt=image.png" alt title>                </div>                <div class="image-caption"></div>            </figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://upload-images.jianshu.io/upload_images/8151888-a821b1f399462369.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240#alt=image.png" alt title>                </div>                <div class="image-caption"></div>            </figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://upload-images.jianshu.io/upload_images/8151888-ac4d51fa32221391.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240#alt=image.png" alt title>                </div>                <div class="image-caption"></div>            </figure><ul><li>GroupId 和 ArtifactId 被统称为“坐标”，是为了保证项目唯一性而提出的，如果你要把你项目弄到 maven 本地仓库去，你想要找到你的项目就必须根据这两个 id 去查找。</li><li>GroupId=域+公司名称。域又分为 org、com、cn 等，其中 org 为非营利组织，com 为商业组织。</li></ul><blockquote><p>apache 公司的 tomcat 项目：这个项目的 GroupId 是 org.apache，它的域是 org（因为 tomcat 是非营利项目），公司名称是 apache，ArtifactId 是 tomcat。</p></blockquote><ul><li>我一般会将 GroupId 设置为 cn.ftx，cn 表示域为中国，ftx 是我个人姓名缩写，ArtifactId 设置为 testProject，表示这个项目的名称是 testProject。</li><li>依照这个设置，在创建 Maven 工程后，新建包的时候，包结构最好是 cn.ftx.testProject 打头的，如果有个 StudentDao，它的全路径就是 cn.ftx.testProject.dao.StudentDao</li></ul><h1 id="2-修改目录结构"><a href="#2-修改目录结构" class="headerlink" title="2 修改目录结构"></a>2 修改目录结构</h1><h2 id="默认生成的目录结构"><a href="#默认生成的目录结构" class="headerlink" title="默认生成的目录结构"></a>默认生成的目录结构</h2><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://upload-images.jianshu.io/upload_images/8151888-bb157b4f75d0c83b.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240#alt=image.png" alt title>                </div>                <div class="image-caption"></div>            </figure><h2 id="标准的-Maven-项目结构"><a href="#标准的-Maven-项目结构" class="headerlink" title="标准的 Maven 项目结构"></a>标准的 Maven 项目结构</h2><p>java 目录需 mark didectory as source root，resources 目录需 mark directory as resources root</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://upload-images.jianshu.io/upload_images/8151888-70cff1d4098351e0.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240#alt=image.png" alt title>                </div>                <div class="image-caption"></div>            </figure><h2 id="Java-源代码结构"><a href="#Java-源代码结构" class="headerlink" title="Java 源代码结构"></a>Java 源代码结构</h2><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://upload-images.jianshu.io/upload_images/8151888-84e390b8a7f2f683.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240#alt=image.png" alt title>                </div>                <div class="image-caption"></div>            </figure><h2 id="配置文件"><a href="#配置文件" class="headerlink" title="配置文件"></a>配置文件</h2><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://upload-images.jianshu.io/upload_images/8151888-7577647e7d007dc6.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240#alt=image.png" alt title>                </div>                <div class="image-caption"></div>            </figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://upload-images.jianshu.io/upload_images/8151888-9dd96a819c335500.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240#alt=image.png" alt title>                </div>                <div class="image-caption"></div>            </figure><h1 id="3-在-pom-xml-中添加依赖"><a href="#3-在-pom-xml-中添加依赖" class="headerlink" title="3 在 pom.xml 中添加依赖"></a>3 在 pom.xml 中添加依赖</h1><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">"http://maven.apache.org/POM/4.0.0"</span> <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:schemaLocation</span>=<span class="string">"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>cn.ftx<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>testProject<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.0-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">packaging</span>&gt;</span>war<span class="tag">&lt;/<span class="name">packaging</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">name</span>&gt;</span>testProject Maven Webapp<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- FIXME change it to the project's website --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">url</span>&gt;</span>http://www.example.com<span class="tag">&lt;/<span class="name">url</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">properties</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">project.build.sourceEncoding</span>&gt;</span>UTF-8<span class="tag">&lt;/<span class="name">project.build.sourceEncoding</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">maven.compiler.source</span>&gt;</span>1.7<span class="tag">&lt;/<span class="name">maven.compiler.source</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">maven.compiler.target</span>&gt;</span>1.7<span class="tag">&lt;/<span class="name">maven.compiler.target</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>junit<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.11<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-context<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.3.15.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-web<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.3.15.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>javax.servlet<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>javax.servlet-api<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">scope</span>&gt;</span>provided<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-webmvc<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.3.15.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- https://mvnrepository.com/artifact/org.springframework/spring-orm --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-orm<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.3.17.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- https://mvnrepository.com/artifact/com.mchange/c3p0 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.mchange<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>c3p0<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>0.9.5.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- https://mvnrepository.com/artifact/org.hibernate/hibernate-core --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.hibernate<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>hibernate-core<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>5.3.7.Final<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- https://mvnrepository.com/artifact/mysql/mysql-connector-java --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>mysql<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mysql-connector-java<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>6.0.6<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- https://mvnrepository.com/artifact/org.springframework.data/spring-data-jpa --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.data<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-data-jpa<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.11.13.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- https://mvnrepository.com/artifact/org.springframework.data/spring-data-commons --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.data<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-data-commons<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.13.13.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- https://mvnrepository.com/artifact/org.springframework/spring-jdbc --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-jdbc<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.3.18.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!--aspectj切面依赖--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>aspectj<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>aspectjrt<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.5.3<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.aspectj<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>aspectjweaver<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.8.13<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!--用于springMVC验证的依赖--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.hibernate.validator<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>hibernate-validator<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>6.0.7.Final<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>javax.validation<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>validation-api<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.0.1.Final<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!--处理json用到的依赖，用于对应的HttpMessageConverter--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.fasterxml.jackson.core<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jackson-databind<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.9.6<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.fasterxml.jackson.core<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jackson-core<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.9.6<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.fasterxml.jackson.core<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jackson-annotations<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.9.6<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!--jetty依赖--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.eclipse.jetty<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jetty-webapp<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>9.3.2.v20150730<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.eclipse.jetty<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jetty-annotations<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>9.3.2.v20150730<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.eclipse.jetty<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>apache-jsp<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>9.3.2.v20150730<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.eclipse.jetty<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>apache-jstl<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>9.3.2.v20150730<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!--jstl--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>jstl<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jstl<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">build</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">finalName</span>&gt;</span>sy5-web<span class="tag">&lt;/<span class="name">finalName</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--防止maven构建时忽略xml文件--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">resources</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">resource</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">directory</span>&gt;</span>src/main/java<span class="tag">&lt;/<span class="name">directory</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">includes</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">include</span>&gt;</span>**/*.xml<span class="tag">&lt;/<span class="name">include</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">includes</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">filtering</span>&gt;</span>true<span class="tag">&lt;/<span class="name">filtering</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">resource</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">resource</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">directory</span>&gt;</span>src/main/resources<span class="tag">&lt;/<span class="name">directory</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">includes</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">include</span>&gt;</span>*.xml<span class="tag">&lt;/<span class="name">include</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">includes</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">filtering</span>&gt;</span>true<span class="tag">&lt;/<span class="name">filtering</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">resource</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">resources</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">pluginManagement</span>&gt;</span><span class="comment">&lt;!-- lock down plugins versions to avoid using Maven defaults (may be moved to parent pom) --&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">plugins</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-clean-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.0.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">                <span class="comment">&lt;!-- see http://maven.apache.org/ref/current/maven-core/default-bindings.html#Plugin_bindings_for_war_packaging --&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-resources-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.0.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-compiler-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.7.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-surefire-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.20.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-war-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.2.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-install-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.5.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-deploy-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.8.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">                <span class="comment">&lt;!--jetty插件--&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.eclipse.jetty<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jetty-maven-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">version</span>&gt;</span>9.3.12.v20160915<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">plugins</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">pluginManagement</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;/<span class="name">build</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br></pre></td></tr></table></figure><h1 id="4-新建-Resource-Bundel-config-properties"><a href="#4-新建-Resource-Bundel-config-properties" class="headerlink" title="4 新建 Resource Bundel config.properties"></a>4 新建 Resource Bundel config.properties</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">################### JDBC Configuration ##########################</span><br><span class="line">jdbc.driverClass=com.mysql.cj.jdbc.Driver</span><br><span class="line">jdbc.url=jdbc:mysql://localhost/sy5?useSSL=false&amp;serverTimezone=Asia/Shanghai</span><br><span class="line">jdbc.username=root</span><br><span class="line">jdbc.password=123456789</span><br><span class="line"></span><br><span class="line">################### Hibernate Configuration ##########################</span><br><span class="line">hibernate.dialect=org.hibernate.dialect.MySQLDialect</span><br><span class="line">hibernate.show_sql=false</span><br><span class="line">hibernate.hbm2ddl.auto=update</span><br><span class="line">hibernate.format_sql=true</span><br><span class="line">hibernate.generate_statistics=true</span><br></pre></td></tr></table></figure><h1 id="5-在-resources-中添加-web-容器-dispatcher-servlet-xml"><a href="#5-在-resources-中添加-web-容器-dispatcher-servlet-xml" class="headerlink" title="5 在 resources 中添加 web 容器 dispatcher-servlet.xml"></a>5 在 resources 中添加 web 容器 dispatcher-servlet.xml</h1><ul><li>最常用的 URL 文件应该就是 jsp 页面了，InternalResourceViewResolver 解析器可以解析该资源</li><li>prefix 和 suffix 属性可以指定资源页面的前缀和后缀，可以直接把资源位置定位到项目的/WEB-INF/下面</li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">"http://www.springframework.org/schema/beans"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span> <span class="attr">xmlns:mvc</span>=<span class="string">"http://www.springframework.org/schema/mvc"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:context</span>=<span class="string">"http://www.springframework.org/schema/context"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xsi:schemaLocation</span>=<span class="string">"http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">mvc:annotation-driven</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">context:component-scan</span> <span class="attr">base-package</span>=<span class="string">"cn.ftx.testProject"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"viewResolver"</span> <span class="attr">class</span>=<span class="string">"org.springframework.web.servlet.view.InternalResourceViewResolver"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"prefix"</span> <span class="attr">value</span>=<span class="string">"/WEB-INF/views/"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"suffix"</span> <span class="attr">value</span>=<span class="string">".jsp"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></span><br></pre></td></tr></table></figure><h1 id="6-在-resources-中添加-spring-容器-applicationContext-xml"><a href="#6-在-resources-中添加-spring-容器-applicationContext-xml" class="headerlink" title="6 在 resources 中添加 spring 容器 applicationContext.xml"></a>6 在 resources 中添加 spring 容器 applicationContext.xml</h1><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">"http://www.springframework.org/schema/beans"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xmlns:context</span>=<span class="string">"http://www.springframework.org/schema/context"</span> <span class="attr">xmlns:tx</span>=<span class="string">"http://www.springframework.org/schema/tx"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">xsi:schemaLocation</span>=<span class="string">"http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">context:annotation-config</span>/&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 自动扫描所有注解该路径 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">context:component-scan</span> <span class="attr">base-package</span>=<span class="string">"cn.ftx.testProject"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tx:annotation-driven</span> <span class="attr">transaction-manager</span>=<span class="string">"txManage"</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--引入配置文件--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"propertyConfigurer"</span> <span class="attr">class</span>=<span class="string">"org.springframework.beans.factory.config.PropertyPlaceholderConfigurer"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"locations"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">list</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">value</span>&gt;</span>classpath:config.properties<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">list</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--数据库连接--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"dataSource"</span> <span class="attr">class</span>=<span class="string">"com.mchange.v2.c3p0.ComboPooledDataSource"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"driverClass"</span> <span class="attr">value</span>=<span class="string">"$&#123;jdbc.driverClass&#125;"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"jdbcUrl"</span> <span class="attr">value</span>=<span class="string">"$&#123;jdbc.url&#125;&#125;"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"user"</span> <span class="attr">value</span>=<span class="string">"$&#123;jdbc.username&#125;"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"password"</span> <span class="attr">value</span>=<span class="string">"$&#123;jdbc.password&#125;"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"sessionFactory"</span> <span class="attr">class</span>=<span class="string">"org.springframework.orm.hibernate5.LocalSessionFactoryBean"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"dataSource"</span> <span class="attr">ref</span>=<span class="string">"dataSource"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"mappingDirectoryLocations"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">list</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">value</span>&gt;</span>classpath:cn/ftx/testProject/model<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">list</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"hibernateProperties"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">props</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">prop</span> <span class="attr">key</span>=<span class="string">"hibernate.dialect"</span>&gt;</span>$&#123;hibernate.dialect&#125;<span class="tag">&lt;/<span class="name">prop</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">prop</span> <span class="attr">key</span>=<span class="string">"hibernate.show_sql"</span>&gt;</span>$&#123;hibernate.show_sql&#125;<span class="tag">&lt;/<span class="name">prop</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">prop</span> <span class="attr">key</span>=<span class="string">"format_sql"</span>&gt;</span>$&#123;hibernate.format_sql&#125;<span class="tag">&lt;/<span class="name">prop</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">prop</span> <span class="attr">key</span>=<span class="string">"hibernate.hbm2ddl.auto"</span>&gt;</span>$&#123;hibernate.hbm2ddl.auto&#125;<span class="tag">&lt;/<span class="name">prop</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">prop</span> <span class="attr">key</span>=<span class="string">"generate_statistics"</span>&gt;</span>$&#123;hibernate.generate_statistics&#125;<span class="tag">&lt;/<span class="name">prop</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">props</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"packagesToScan"</span> <span class="attr">value</span>=<span class="string">"cn.ftx.testProject"</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!--映射文件地址--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"mappingLocations"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">list</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">value</span>&gt;</span>classpath:cn/ftx/testProject/model/Tequipment.hbm.xml<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">list</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"txManage"</span> <span class="attr">class</span>=<span class="string">"org.springframework.orm.hibernate4.HibernateTransactionManager"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"sessionFactory"</span> <span class="attr">ref</span>=<span class="string">"sessionFactory"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></span><br></pre></td></tr></table></figure><h1 id="7-配置-webapp-WEB-INF-web-xml"><a href="#7-配置-webapp-WEB-INF-web-xml" class="headerlink" title="7 配置 webapp/WEB-INF/web.xml"></a>7 配置 webapp/WEB-INF/web.xml</h1><ul><li>在 web.xml 中添加监听器，为了加载 spring 容器的配置文件，指定 spring web 容器配置文件的目录</li><li><code>/</code>表示从 webapp 开始，例如：使用<code>/layout/style.css</code>访问</li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">web-app</span> <span class="attr">xmlns</span>=<span class="string">"http://java.sun.com/xml/ns/javaee"</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:schemaLocation</span>=<span class="string">"http://java.sun.com/xml/ns/javaee</span></span></span><br><span class="line"><span class="tag"><span class="string">          http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd"</span></span></span><br><span class="line"><span class="tag">         <span class="attr">version</span>=<span class="string">"2.5"</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 项目名称 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">display-name</span>&gt;</span>testProject<span class="tag">&lt;/<span class="name">display-name</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 指定spring相关文件的位置 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">context-param</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">param-name</span>&gt;</span>contextConfigLocation<span class="tag">&lt;/<span class="name">param-name</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">param-value</span>&gt;</span>classpath:applicationContext.xml<span class="tag">&lt;/<span class="name">param-value</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">context-param</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 开启spring功能 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">listener</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">listener-class</span>&gt;</span>org.springframework.web.context.ContextLoaderListener<span class="tag">&lt;/<span class="name">listener-class</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">listener</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 配置spring mvc --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">servlet</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>dispatcher<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">servlet-class</span>&gt;</span>org.springframework.web.servlet.DispatcherServlet<span class="tag">&lt;/<span class="name">servlet-class</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">init-param</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">param-name</span>&gt;</span>contextConfigLocation<span class="tag">&lt;/<span class="name">param-name</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">param-value</span>&gt;</span>classpath:dispatcher-servlet.xml<span class="tag">&lt;/<span class="name">param-value</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">init-param</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">load-on-startup</span>&gt;</span>1<span class="tag">&lt;/<span class="name">load-on-startup</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">servlet</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 配置spring mvc mapping --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>dispatcher<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 配置字符集过滤器 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">filter</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">filter-name</span>&gt;</span>encodingFilter<span class="tag">&lt;/<span class="name">filter-name</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">filter-class</span>&gt;</span>org.springframework.web.filter.CharacterEncodingFilter<span class="tag">&lt;/<span class="name">filter-class</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">init-param</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">param-name</span>&gt;</span>encoding<span class="tag">&lt;/<span class="name">param-name</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">param-value</span>&gt;</span>UTF-8<span class="tag">&lt;/<span class="name">param-value</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">init-param</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">filter</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 配置项目的编码mapping --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">filter-mapping</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">filter-name</span>&gt;</span>encodingFilter<span class="tag">&lt;/<span class="name">filter-name</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/*<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">filter-mapping</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 防止内存溢出监听器 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">listener</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">listener-class</span>&gt;</span>org.springframework.web.util.IntrospectorCleanupListener<span class="tag">&lt;/<span class="name">listener-class</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">listener</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 配置静态资源不经过spring mvc --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>default<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>*.css<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>default<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>*.js<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>default<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>*.json<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>default<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>*.gif<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>default<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>*.png<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>default<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>*.jpg<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>default<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>*.ico<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>default<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>*.doc<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>default<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>*.xls<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>default<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>*.docx<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>default<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>*.xlsx<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>default<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>*.txt<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>default<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>*.swf<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 配置session超时时间，单位分钟 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">session-config</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">session-timeout</span>&gt;</span>30<span class="tag">&lt;/<span class="name">session-timeout</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">session-config</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 设置欢迎页面 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">welcome-file-list</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">welcome-file</span>&gt;</span>/index.jsp<span class="tag">&lt;/<span class="name">welcome-file</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">welcome-file</span>&gt;</span>/init.jsp<span class="tag">&lt;/<span class="name">welcome-file</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">welcome-file-list</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 找不到页错误转向 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">error-page</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">error-code</span>&gt;</span>404<span class="tag">&lt;/<span class="name">error-code</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">location</span>&gt;</span>/error/404.jsp<span class="tag">&lt;/<span class="name">location</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">error-page</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 系统内部错误转向 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">error-page</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">error-code</span>&gt;</span>500<span class="tag">&lt;/<span class="name">error-code</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">location</span>&gt;</span>/error/500.jsp<span class="tag">&lt;/<span class="name">location</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">error-page</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- druid数据源Web监控配置 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">filter</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">filter-name</span>&gt;</span>druidWebStatFilter<span class="tag">&lt;/<span class="name">filter-name</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">filter-class</span>&gt;</span>com.alibaba.druid.support.http.WebStatFilter<span class="tag">&lt;/<span class="name">filter-class</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">init-param</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">param-name</span>&gt;</span>exclusions<span class="tag">&lt;/<span class="name">param-name</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">param-value</span>&gt;</span>/css/*,/style/*,/jslib/*,*.js,*.css,/druid*,/attached/*,*.jsp<span class="tag">&lt;/<span class="name">param-value</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">init-param</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">init-param</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">param-name</span>&gt;</span>principalSessionName<span class="tag">&lt;/<span class="name">param-name</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">param-value</span>&gt;</span>sessionInfo<span class="tag">&lt;/<span class="name">param-value</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">init-param</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">init-param</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">param-name</span>&gt;</span>profileEnable<span class="tag">&lt;/<span class="name">param-name</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">param-value</span>&gt;</span>true<span class="tag">&lt;/<span class="name">param-value</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">init-param</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">filter</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- druid数据源Web监控配置mapping --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">filter-mapping</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">filter-name</span>&gt;</span>druidWebStatFilter<span class="tag">&lt;/<span class="name">filter-name</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/*<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">filter-mapping</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- druid监控页面，使用$&#123;pageContext.request.contextPath&#125;/druid/index.html访问 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">servlet</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>druidStatView<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">servlet-class</span>&gt;</span>com.alibaba.druid.support.http.StatViewServlet<span class="tag">&lt;/<span class="name">servlet-class</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">servlet</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- druid监控页面mapping --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>druidStatView<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/druid/*<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">web-app</span>&gt;</span></span><br></pre></td></tr></table></figure><h1 id="8-hibernate-自动创建"><a href="#8-hibernate-自动创建" class="headerlink" title="8 hibernate 自动创建"></a>8 hibernate 自动创建</h1><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://upload-images.jianshu.io/upload_images/8151888-42da1f5261a02554.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240#alt=image.png" alt title>                </div>                <div class="image-caption"></div>            </figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://upload-images.jianshu.io/upload_images/8151888-a5bab3fe8ab64bd3.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240#alt=image.png" alt title>                </div>                <div class="image-caption"></div>            </figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://upload-images.jianshu.io/upload_images/8151888-ca99678f8eb5f183.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240#alt=image.png" alt title>                </div>                <div class="image-caption"></div>            </figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://upload-images.jianshu.io/upload_images/8151888-f55ea680ea9273c0.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240#alt=image.png" alt title>                </div>                <div class="image-caption"></div>            </figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://upload-images.jianshu.io/upload_images/8151888-6af882e1b6161e31.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240#alt=image.png" alt title>                </div>                <div class="image-caption"></div>            </figure><h1 id="9-使用-jetty"><a href="#9-使用-jetty" class="headerlink" title="9 使用 jetty"></a>9 使用 jetty</h1><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://upload-images.jianshu.io/upload_images/8151888-a6a0796826f6ba8c.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240#alt=image.png" alt title>                </div>                <div class="image-caption"></div>            </figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://upload-images.jianshu.io/upload_images/8151888-a248e719afc89b3d.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240#alt=image.png" alt title>                </div>                <div class="image-caption"></div>            </figure><h1 id="如何打开一个别人的项目"><a href="#如何打开一个别人的项目" class="headerlink" title="*如何打开一个别人的项目"></a>*如何打开一个别人的项目</h1><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://upload-images.jianshu.io/upload_images/8151888-e8d0aebf32d8998c.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240#alt=image.png" alt title>                </div>                <div class="image-caption"></div>            </figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://upload-images.jianshu.io/upload_images/8151888-a57e7efaec80ad61.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240#alt=image.png" alt title>                </div>                <div class="image-caption"></div>            </figure><h2 id="修改成自己的-maven-配置"><a href="#修改成自己的-maven-配置" class="headerlink" title="修改成自己的 maven 配置"></a>修改成自己的 maven 配置</h2><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://upload-images.jianshu.io/upload_images/8151888-92f385a1f1a706ea.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240#alt=image.png" alt title>                </div>                <div class="image-caption"></div>            </figure><h2 id="一直-next，直到-finish-即可"><a href="#一直-next，直到-finish-即可" class="headerlink" title="一直 next，直到 finish 即可"></a>一直 next，直到 finish 即可</h2><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://upload-images.jianshu.io/upload_images/8151888-7a27859c324ea6ae.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240#alt=image.png" alt title>                </div>                <div class="image-caption"></div>            </figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://upload-images.jianshu.io/upload_images/8151888-2859f2bb470ff29d.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240#alt=image.png" alt title>                </div>                <div class="image-caption"></div>            </figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://upload-images.jianshu.io/upload_images/8151888-412fcf26df4748a5.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240#alt=image.png" alt title>                </div>                <div class="image-caption"></div>            </figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;1-创建-Maven-项目&quot;&gt;&lt;a href=&quot;#1-创建-Maven-项目&quot; class=&quot;headerlink&quot; title=&quot;1 创建 Maven 项目&quot;&gt;&lt;/a&gt;1 创建 Maven 项目&lt;/h1&gt;&lt;figure class=&quot;image-bubble&quot;&gt;
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Hexo使用心得</title>
    <link href="http://fengtx.tk/2020/05/03/yuque/Hexo%E4%BD%BF%E7%94%A8%E5%BF%83%E5%BE%97/"/>
    <id>http://fengtx.tk/2020/05/03/yuque/Hexo使用心得/</id>
    <published>2020-05-03T10:02:11.000Z</published>
    <updated>2020-12-06T14:36:42.249Z</updated>
    
    <content type="html"><![CDATA[<h1 id="新建文章"><a href="#新建文章" class="headerlink" title="新建文章"></a>新建文章</h1><p><code>hexo new &quot;Hexo使用心得&quot;</code></p><h1 id="上传图片到-github-并使用"><a href="#上传图片到-github-并使用" class="headerlink" title="上传图片到 github 并使用"></a>上传图片到 github 并使用</h1><ol><li>将<code>_config.yml</code>中有的<code>post_asset_folder</code>设置为<code>true</code></li><li>在<code>hexo</code>的目录下执行<code>npm install https://github.com/CodeFalling/hexo-asset-image --save</code></li><li>完成安装后用<code>hexo</code>新建文章的时候会发现<code>_posts</code>目录下面会多出一个和文章名字一样的文件夹</li><li>使用<code>![test](Hexo使用心得/test.jpg)</code>就可以插入图片。其中<code>[]</code>里面不写文字则没有图片标题</li></ol><h1 id="Hexo-admin"><a href="#Hexo-admin" class="headerlink" title="Hexo-admin"></a>Hexo-admin</h1><p>本地的文章编辑器，不支持在线<code>/admin</code>访问，<code>github.io</code>都是静态界面</p><h1 id="更新文章"><a href="#更新文章" class="headerlink" title="更新文章"></a>更新文章</h1><p><code>hexo d -g</code></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;新建文章&quot;&gt;&lt;a href=&quot;#新建文章&quot; class=&quot;headerlink&quot; title=&quot;新建文章&quot;&gt;&lt;/a&gt;新建文章&lt;/h1&gt;&lt;p&gt;&lt;code&gt;hexo new &amp;quot;Hexo使用心得&amp;quot;&lt;/code&gt;&lt;/p&gt;
&lt;h1 id=&quot;上传图片到-g
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Django入门与实践</title>
    <link href="http://fengtx.tk/2020/05/03/yuque/Django%E5%85%A5%E9%97%A8%E4%B8%8E%E5%AE%9E%E8%B7%B5/"/>
    <id>http://fengtx.tk/2020/05/03/yuque/Django入门与实践/</id>
    <published>2020-05-03T10:02:05.000Z</published>
    <updated>2020-12-06T14:36:42.251Z</updated>
    
    <content type="html"><![CDATA[<figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://cdn.nlark.com/yuque/0/2020/png/366539/1588501789841-8a02e195-3dfd-4d36-8498-6c5fccab7274.png#align=left&display=inline&height=1874&margin=%5Bobject%20Object%5D&name=image.png&originHeight=3747&originWidth=2879&size=785769&status=done&style=none&width=1439.5" alt="image.png" title>                </div>                <div class="image-caption">image.png</div>            </figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;figure class=&quot;image-bubble&quot;&gt;
                &lt;div class=&quot;img-lightbox&quot;&gt;
                    &lt;div class=&quot;overlay&quot;&gt;&lt;/div&gt;
                   
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Axure使用心得</title>
    <link href="http://fengtx.tk/2020/04/05/yuque/Axure%E4%BD%BF%E7%94%A8%E5%BF%83%E5%BE%97/"/>
    <id>http://fengtx.tk/2020/04/05/yuque/Axure使用心得/</id>
    <published>2020-04-05T00:56:51.000Z</published>
    <updated>2020-12-06T14:36:42.255Z</updated>
    
    <content type="html"><![CDATA[<ul><li>按住 Ctrl 时，可以旋转</li><li>按住 Ctrl 时，拖动曲线</li><li>右键转换曲线的类型</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;ul&gt;
&lt;li&gt;按住 Ctrl 时，可以旋转&lt;/li&gt;
&lt;li&gt;按住 Ctrl 时，拖动曲线&lt;/li&gt;
&lt;li&gt;右键转换曲线的类型&lt;/li&gt;
&lt;/ul&gt;

      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Android学习小记</title>
    <link href="http://fengtx.tk/2020/04/05/yuque/Android%E5%AD%A6%E4%B9%A0%E5%B0%8F%E8%AE%B0/"/>
    <id>http://fengtx.tk/2020/04/05/yuque/Android学习小记/</id>
    <published>2020-04-05T00:56:46.000Z</published>
    <updated>2020-12-06T14:36:42.281Z</updated>
    
    <content type="html"><![CDATA[<h1 id="禁止-Android-不跟随屏幕密度加载不同文件夹的资源"><a href="#禁止-Android-不跟随屏幕密度加载不同文件夹的资源" class="headerlink" title="禁止 Android 不跟随屏幕密度加载不同文件夹的资源"></a>禁止 Android 不跟随屏幕密度加载不同文件夹的资源</h1><p>在 AndroidManifest.xml 文件中添加 android:anyDensity=”false”字段</p><h1 id="高分辨率，一般我们把图片丢这里-mipmap-hdpi"><a href="#高分辨率，一般我们把图片丢这里-mipmap-hdpi" class="headerlink" title="高分辨率，一般我们把图片丢这里 mipmap-hdpi"></a>高分辨率，一般我们把图片丢这里 mipmap-hdpi</h1><h1 id="调试时默认生成的-apk-在：app-build-outputs-apk-目录下"><a href="#调试时默认生成的-apk-在：app-build-outputs-apk-目录下" class="headerlink" title="调试时默认生成的 apk 在：app/build/outputs/apk 目录下"></a>调试时默认生成的 apk 在：app/build/outputs/apk 目录下</h1><h1 id="Android-Studio-打包时-Signature-Version-V1-V2"><a href="#Android-Studio-打包时-Signature-Version-V1-V2" class="headerlink" title="Android Studio 打包时 Signature Version V1 V2"></a>Android Studio 打包时 Signature Version V1 V2</h1><ul><li>同时勾选 V1 和 V2 则所有机型都没问题</li><li>生成目录 E:\wamp64\www\EAider\app\release</li></ul><h1 id="发布-apk-做代码混淆-爱加密"><a href="#发布-apk-做代码混淆-爱加密" class="headerlink" title="发布 apk 做代码混淆 爱加密"></a>发布 apk 做代码混淆 爱加密</h1><h1 id="match-parent-和-fill-parent"><a href="#match-parent-和-fill-parent" class="headerlink" title="match_parent 和 fill_parent"></a>match_parent 和 fill_parent</h1><ul><li>fill_parent = match_parent（一般用 match_parent）</li><li>wrap_content 设置一个视图的尺寸为 wrap_content 将强制性地使视图扩展以显示全部内容。以 TextView 和 ImageView 控件为例，设置为 wrap_content 将完整显示其内部的文本和图像。布局元素将根据内容更改大小。设置一个视图的尺寸为 wrap_content 大体等同于设置 Windows 控件的 Autosize 属性为 True。</li></ul><h1 id="layout-gravity-和-gravity"><a href="#layout-gravity-和-gravity" class="headerlink" title="layout_gravity 和 gravity"></a>layout_gravity 和 gravity</h1><ul><li><code>android:gravity</code>属性是对该<code>view</code>中内容的限定，比如一个 button 上面的 text，你可以设置该 text 相对于 view 的靠左，靠右等位置</li><li><code>android:layout_gravity</code>是用来设置该 view 相对与父 view 的位置，比如一个 button 在 linearlayout 里，你想把该 button 放在 linearlayout 里靠左、靠右等位置就可以通过该属性设置</li><li><code>android:gravity</code>用于设置 View 中内容相对于 View 组件的对齐方式</li><li><code>android:layout_gravity</code>用于设置 View 组件相对于 Container 的对齐方式</li></ul><h1 id="线性布局"><a href="#线性布局" class="headerlink" title="线性布局"></a>线性布局</h1><ul><li>权重用途很大</li><li>当<code>android:orientation=&quot;vertical&quot;</code>时，只有水平方向的设置才起作用，垂直方向的设置不起作用。即：<code>left,right,center_horizontal</code>是生效的</li><li>当<code>android:orientation=&quot;horizontal&quot;</code>时，只有垂直方向的设置才起作用，水平方向的设置不起作用。即：<code>top,bottom,center_vertical</code>是生效的</li></ul><h1 id="分隔线"><a href="#分隔线" class="headerlink" title="分隔线"></a>分隔线</h1><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">View</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">"1px"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:background</span>=<span class="string">"#000000"</span>/&gt;</span></span><br></pre></td></tr></table></figure><h1 id="布局使用RelativeLayout-LinearLayout的weight属性搭配使用"><a href="#布局使用RelativeLayout-LinearLayout的weight属性搭配使用" class="headerlink" title="布局使用RelativeLayout+LinearLayout的weight属性搭配使用"></a>布局使用<code>RelativeLayout+LinearLayout</code>的<code>weight</code>属性搭配使用</h1><h1 id="相对布局广告弹出框-Demo"><a href="#相对布局广告弹出框-Demo" class="headerlink" title="相对布局广告弹出框 Demo"></a>相对布局广告弹出框 Demo</h1><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="utf-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">RelativeLayout</span> <span class="attr">xmlns:android</span>=<span class="string">"http://schemas.android.com/apk/res/android"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:tools</span>=<span class="string">"http://schemas.android.com/tools"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:id</span>=<span class="string">"@+id/RelativeLayout1"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:background</span>=<span class="string">"#00CCCCFF"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">ImageView</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">"@+id/img1"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:background</span>=<span class="string">"#000"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_centerInParent</span>=<span class="string">"true"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">"200dp"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">"200dp"</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">ImageView</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">"@+id/imgCancle"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_alignRight</span>=<span class="string">"@id/img1"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_alignTop</span>=<span class="string">"@id/img1"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:background</span>=<span class="string">"#5555"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_marginTop</span>=<span class="string">"-15dp"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_marginRight</span>=<span class="string">"-10dp"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">"28dp"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">"28dp"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">RelativeLayout</span>&gt;</span></span><br></pre></td></tr></table></figure><h1 id="表格布局"><a href="#表格布局" class="headerlink" title="表格布局"></a>表格布局</h1><h1 id="帧布局-FrameLayout"><a href="#帧布局-FrameLayout" class="headerlink" title="帧布局 FrameLayout"></a>帧布局 FrameLayout</h1><ul><li><code>android:foreground</code>:设置改帧布局容器的前景图像</li><li><code>android:foregroundGravity</code>:设置前景图像显示的位置</li></ul><h1 id="网格布局-GridLayout"><a href="#网格布局-GridLayout" class="headerlink" title="网格布局 GridLayout"></a>网格布局 GridLayout</h1><ul><li>默认每个组件都是占一行一列</li><li>通过<code>android:layout_rowSpan</code>与<code>android:layout_columnSpan</code>设置了组件横跨多行或者多列的话，如果你要让组件填满横越过的行或列的话，需要添加<code>android:layout_gravity = &quot;fill&quot;</code></li></ul><h1 id="低版本-sdk-如何使用-GridLayout"><a href="#低版本-sdk-如何使用-GridLayout" class="headerlink" title="低版本 sdk 如何使用 GridLayout"></a>低版本 sdk 如何使用 GridLayout</h1><p><code>&lt;android.support.v7.widget.GridLayout&gt;</code>，<code>v7</code>包一般在<code>sdk</code>下的<code>sdk\extras\android\support\v7\gridlayout</code>目录下</p><h1 id="几个单位"><a href="#几个单位" class="headerlink" title="几个单位"></a>几个单位</h1><ul><li><code>dp(dip): device independent pixels(设备独立像素)</code>，不同设备有不同的显示效果，这个和设备硬件有关，一般我们为了支持 WVGA、HVGA 和 QVGA 推荐使用这个，不依赖像素</li><li><code>px: pixels(像素)</code>，不同设备显示效果相同，一般我们 HVGA 代表 320x480 像素，这个用的比较多</li><li><code>pt: point</code>，是一个标准的长度单位，1pt ＝ 1/72 英寸，用于印刷业，非常简单易用</li><li><code>sp: scaled pixels(放大像素)</code>，主要用于字体显示 best for textsize</li></ul><h1 id="布局层次越少，性能越好"><a href="#布局层次越少，性能越好" class="headerlink" title="布局层次越少，性能越好"></a>布局层次越少，性能越好</h1><h1 id="设置的-drawable-并不能自行设置大小，在-XML-是无法直接设置的，所以需要在-Java-代码中来进行修改"><a href="#设置的-drawable-并不能自行设置大小，在-XML-是无法直接设置的，所以需要在-Java-代码中来进行修改" class="headerlink" title="设置的 drawable 并不能自行设置大小，在 XML 是无法直接设置的，所以需要在 Java 代码中来进行修改"></a>设置的 drawable 并不能自行设置大小，在 XML 是无法直接设置的，所以需要在 Java 代码中来进行修改</h1>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;禁止-Android-不跟随屏幕密度加载不同文件夹的资源&quot;&gt;&lt;a href=&quot;#禁止-Android-不跟随屏幕密度加载不同文件夹的资源&quot; class=&quot;headerlink&quot; title=&quot;禁止 Android 不跟随屏幕密度加载不同文件夹的资源&quot;&gt;&lt;/a&gt;禁止
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>一图看懂React diff</title>
    <link href="http://fengtx.tk/2020/04/05/yuque/%E4%B8%80%E5%9B%BE%E7%9C%8B%E6%87%82React%20diff/"/>
    <id>http://fengtx.tk/2020/04/05/yuque/一图看懂React diff/</id>
    <published>2020-04-05T00:56:41.000Z</published>
    <updated>2020-12-06T14:36:42.319Z</updated>
    
    <content type="html"><![CDATA[<figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://img-blog.csdnimg.cn/20200404222655631.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2t4YmsxMDA=,size_16,color_FFFFFF,t_70#align=left&display=inline&height=1048&margin=%5Bobject%20Object%5D&originHeight=1048&originWidth=2632&status=done&style=none&width=2632" alt title>                </div>                <div class="image-caption"></div>            </figure><p>React 中最值得称道的部分莫过于 Virtual DOM 与 diff 的完美结合，特别是其高效的 diff 算法，让用户可以无需顾忌性能问题而”任性自由”的刷新页面，让开发者也可以无需关心 Virtual DOM 背后的运作原理，因为 React diff 会帮助我们计算出 Virtual DOM 中真正变化的部分，并只针对该部分进行实际 DOM 操作，而非重新渲染整个页面，从而保证了每次操作更新后页面的高效渲染，因此 Virtual DOM 与 diff 是保证 React 性能口碑的幕后推手。</p><h1 id="1-diff-策略"><a href="#1-diff-策略" class="headerlink" title="1 diff 策略"></a>1 diff 策略</h1><ol><li>Web UI 中 DOM 节点跨层级的移动操作特别少，可以忽略不计</li><li>拥有相同类的两个组件将会生成相似的树形结构，拥有不同类的两个组件将会生成不同的树形结构</li><li>对于同一层级的一组子节点，它们可以通过唯一 id 进行区分</li></ol><p>以上三个策略，React 分别对 tree diff、component diff 以及 element diff 进行算法优化，事实也证明这三个前提策略是合理且准确的，它保证了整体界面构建的性能。</p><h1 id="2-tree-diff"><a href="#2-tree-diff" class="headerlink" title="2 tree diff"></a>2 tree diff</h1><p>基于策略一，React 对树的算法进行了简洁明了的优化，即对树进行分层比较，两棵树只会对同一层次的节点进行比较。</p><p>既然 DOM 节点跨层级的移动操作少到可以忽略不计，针对这一现象，React 通过 updateDepth 对 Virtual DOM 树进行层级控制，只会对相同颜色方框内的 DOM 节点进行比较，即同一个父节点下的所有子节点。当发现节点已经不存在，则该节点及其子节点会被完全删除掉，不会用于进一步的比较。这样只需要对树进行一次遍历，便能完成整个 DOM 树的比较。</p><p>如果出现 dom 节点跨层级的移动操作，因为该节点已经不在原来的 dom 树层， 所以会直接删除该节点，在移动后的 dom 层重建该节点， 可见这种操作的性能代价非常大，所以不推荐这样做。 可以通过 css 样式控制节点的隐藏和显示来代替节点跨层级移动的操作。</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://img-blog.csdnimg.cn/20200404213819884.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2t4YmsxMDA=,size_16,color_FFFFFF,t_70#align=left&display=inline&height=300&margin=%5Bobject%20Object%5D&originHeight=300&originWidth=582&status=done&style=none&width=582" alt title>                </div>                <div class="image-caption"></div>            </figure><h1 id="3-component-diff"><a href="#3-component-diff" class="headerlink" title="3 component diff"></a>3 component diff</h1><p>React 是基于组件构建应用的，对于组件间的比较所采取的策略也是简洁高效。</p><p>如果是同一类型的组件，按照原策略继续比较 virtual DOM tree。</p><p>如果不是，则将该组件判断为 dirty component，从而替换整个组件下的所有子节点。</p><p>对于同一类型的组件，有可能其 Virtual DOM 没有任何变化，如果能够确切的知道这点那可以节省大量的 diff 运算时间，因此 React 允许用户通过 shouldComponentUpdate() 来判断该组件是否需要进行 diff。</p><p>如下图，当 component D 改变为 component G 时，即使这两个 component 结构相似，一旦 React 判断 D 和 G 是不同类型的组件，就不会比较二者的结构，而是直接删除 component D，重新创建 component G 以及其子节点。虽然当两个 component 是不同类型但结构相似时，React diff 会影响性能，但正如 React 官方博客所言：不同类型的 component 是很少存在相似 DOM tree 的机会，因此这种极端因素很难在实现开发过程中造成重大影响的。</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://img-blog.csdnimg.cn/20200404214110484.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2t4YmsxMDA=,size_16,color_FFFFFF,t_70#align=left&display=inline&height=221&margin=%5Bobject%20Object%5D&originHeight=221&originWidth=542&status=done&style=none&width=542" alt title>                </div>                <div class="image-caption"></div>            </figure><h1 id="4-element-diff"><a href="#4-element-diff" class="headerlink" title="4 element diff"></a>4 element diff</h1><p>当节点处于同一层级时，React diff 提供了三种节点操作，分别为：INSERT_MARKUP（插入）、MOVE_EXISTING（移动）和 REMOVE_NODE（删除）。</p><p>INSERT_MARKUP，新的 component 类型不在老集合里， 即是全新的节点，需要对新节点执行插入操作。</p><p>MOVE_EXISTING，在老集合有新 component 类型，且 element 是可更新的类型，generateComponentChildren 已调用 receiveComponent，这种情况下 prevChild=nextChild，就需要做移动操作，可以复用以前的 DOM 节点。</p><p>REMOVE_NODE，老 component 类型，在新集合里也有，但对应的 element 不同则不能直接复用和更新，需要执行删除操作，或者老 component 不在新集合里的，也需要执行删除操作。</p><p>开发者对同一层级的子节点，可以添加唯一索引进行区分，这样在 diff 时，涉及到只是位置变化的，可以只移动元素，避免删除创建等重复的操作。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;figure class=&quot;image-bubble&quot;&gt;
                &lt;div class=&quot;img-lightbox&quot;&gt;
                    &lt;div class=&quot;overlay&quot;&gt;&lt;/div&gt;
                   
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>我的博客目录</title>
    <link href="http://fengtx.tk/2020/04/05/yuque/%E6%88%91%E7%9A%84%E5%8D%9A%E5%AE%A2%E7%9B%AE%E5%BD%95/"/>
    <id>http://fengtx.tk/2020/04/05/yuque/我的博客目录/</id>
    <published>2020-04-05T00:56:36.000Z</published>
    <updated>2020-12-06T14:36:42.387Z</updated>
    
    <content type="html"><![CDATA[<hr><h2 id="title-我的博客目录date-2019年04月08日-00-27-43"><a href="#title-我的博客目录date-2019年04月08日-00-27-43" class="headerlink" title="title: 我的博客目录date: 2019年04月08日 00:27:43"></a>title: 我的博客目录date: 2019年04月08日 00:27:43</h2><p>categories: Career<br>typora-root-url: ..<br>typora-copy-images-to: ../images</p><h1 id="JavaScript"><a href="#JavaScript" class="headerlink" title="JavaScript"></a>JavaScript</h1><hr><ul><li><a href="https://blog.csdn.net/kxbk100/article/details/86727127" target="_blank" rel="noopener">简介</a></li><li><a href="https://blog.csdn.net/kxbk100/article/details/88787417" target="_blank" rel="noopener">汇总</a></li></ul><h2 id="变量类型和计算"><a href="#变量类型和计算" class="headerlink" title="变量类型和计算"></a><a href="https://blog.csdn.net/kxbk100/article/details/86743014" target="_blank" rel="noopener">变量类型和计算</a></h2><ol><li><p>内置类型</p></li><li><p>typeof</p></li><li><p>类型转换</p></li></ol><ul><li>转 Boolean</li><li>对象转基本类型</li><li>四则运算符</li><li>==操作符</li><li>比较运算符</li></ul><h2 id="原型与原型链"><a href="#原型与原型链" class="headerlink" title="原型与原型链"></a><a href="https://blog.csdn.net/kxbk100/article/details/86744084" target="_blank" rel="noopener">原型与原型链</a></h2><ol><li><p>new</p></li><li><p>instanceof</p></li></ol><h2 id="闭包和作用域"><a href="#闭包和作用域" class="headerlink" title="闭包和作用域"></a><a href="https://blog.csdn.net/kxbk100/article/details/88184118" target="_blank" rel="noopener">闭包和作用域</a></h2><ol><li><p>执行上下文</p></li><li><p>this</p></li><li><p>call, apply, bind 区别</p></li></ol><ul><li>模拟实现 call 和 apply</li></ul><h2 id="异步和单线程"><a href="#异步和单线程" class="headerlink" title="异步和单线程"></a><a href="https://blog.csdn.net/kxbk100/article/details/88358292" target="_blank" rel="noopener">异步和单线程</a></h2><h2 id="其它"><a href="#其它" class="headerlink" title="其它"></a><a href="https://blog.csdn.net/kxbk100/article/details/88388248" target="_blank" rel="noopener">其它</a></h2><ol><li><p>日期</p></li><li><p>Math</p></li><li><p>常用 API</p></li></ol><h2 id="JS-Web-API"><a href="#JS-Web-API" class="headerlink" title="JS-Web-API"></a><a href="https://blog.csdn.net/kxbk100/article/details/88592789" target="_blank" rel="noopener">JS-Web-API</a></h2><ol><li><p>DOM</p></li><li><p>BOM</p></li></ol><h2 id="ES6"><a href="#ES6" class="headerlink" title="ES6"></a>ES6</h2><h2 id="深浅拷贝"><a href="#深浅拷贝" class="headerlink" title="深浅拷贝"></a>深浅拷贝</h2><ol><li><p>浅拷贝</p></li><li><p>深拷贝</p></li></ol><h2 id="模块化"><a href="#模块化" class="headerlink" title="模块化"></a>模块化</h2><ol><li><p>CommonJS</p></li><li><p>AMD</p></li></ol><h2 id="防抖"><a href="#防抖" class="headerlink" title="防抖"></a>防抖</h2><h2 id="节流"><a href="#节流" class="headerlink" title="节流"></a>节流</h2><h2 id="继承"><a href="#继承" class="headerlink" title="继承"></a>继承</h2><h2 id="Promise-实现"><a href="#Promise-实现" class="headerlink" title="Promise 实现"></a>Promise 实现</h2><h2 id="Generator-实现"><a href="#Generator-实现" class="headerlink" title="Generator 实现"></a>Generator 实现</h2><h2 id="Map、FlapMap-和-Reduce"><a href="#Map、FlapMap-和-Reduce" class="headerlink" title="Map、FlapMap 和 Reduce"></a>Map、FlapMap 和 Reduce</h2><h2 id="async-和-await"><a href="#async-和-await" class="headerlink" title="async 和 await"></a>async 和 await</h2><h2 id="Proxy"><a href="#Proxy" class="headerlink" title="Proxy"></a>Proxy</h2><h2 id="为什么-0-1-0-2-0-3"><a href="#为什么-0-1-0-2-0-3" class="headerlink" title="为什么 0.1 + 0.2 != 0.3"></a>为什么 0.1 + 0.2 != 0.3</h2><h2 id="正则表达式"><a href="#正则表达式" class="headerlink" title="正则表达式"></a>正则表达式</h2><ol><li><p>元字符</p></li><li><p>修饰语</p></li><li><p>字符简写</p></li></ol><h1 id="Browser"><a href="#Browser" class="headerlink" title="Browser"></a>Browser</h1><hr><h2 id="事件机制"><a href="#事件机制" class="headerlink" title="事件机制"></a>事件机制</h2><ul><li>事件触发三阶段</li><li>注册事件</li><li>事件代理</li></ul><h2 id="跨域"><a href="#跨域" class="headerlink" title="跨域"></a>跨域</h2><ul><li>JSONP</li><li>CORS</li><li>document.domain</li><li>postMessage</li></ul><h2 id="Event-loop"><a href="#Event-loop" class="headerlink" title="Event loop"></a>Event loop</h2><ul><li>Node 中的 Event loop</li><li>浏览器中的 Event loop</li></ul><h2 id="存储"><a href="#存储" class="headerlink" title="存储"></a>存储</h2><ul><li>cookie, localStorage, sessionStorage, indexDB</li><li>Service Worker</li></ul><h2 id="渲染机制"><a href="#渲染机制" class="headerlink" title="渲染机制"></a>渲染机制</h2><ul><li>Load 和 DOMContentLoaded 区别</li><li>图层</li><li>重绘(Repaint)和回流(Reflow)</li><li>减少重绘和回流</li></ul><h1 id="Performance"><a href="#Performance" class="headerlink" title="Performance"></a>Performance</h1><hr><h2 id="网络相关"><a href="#网络相关" class="headerlink" title="网络相关"></a>网络相关</h2><ul><li><p>DNS 预解析</p></li><li><p>缓存</p><ul><li><p>强缓存</p></li><li><p>协商缓存</p><pre><code>- Last-Modifhed和If-Modifhed-Since- ETag和If-None-Match</code></pre></li><li><p>选择合适的缓存策略</p></li></ul></li><li><p>使用 HTTP/2.0</p></li><li><p>预加载</p></li><li><p>预渲染</p></li></ul><h2 id="优化渲染过程"><a href="#优化渲染过程" class="headerlink" title="优化渲染过程"></a>优化渲染过程</h2><ul><li>懒执行</li><li>懒加载</li></ul><h2 id="文件优化"><a href="#文件优化" class="headerlink" title="文件优化"></a>文件优化</h2><ul><li><p>图片优化</p><ul><li>计算图片大小</li><li>图片加载优化</li></ul></li><li><p>其他文件优化</p></li><li><p>CDN</p></li></ul><h2 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h2><ul><li>使用 Webpack 优化项目</li><li>监控</li></ul><h1 id="Safety"><a href="#Safety" class="headerlink" title="Safety"></a>Safety</h1><hr><h2 id="XSS"><a href="#XSS" class="headerlink" title="XSS"></a>XSS</h2><ul><li>如何攻击</li><li>如何防御</li><li>CSP</li></ul><h2 id="CSRF"><a href="#CSRF" class="headerlink" title="CSRF"></a>CSRF</h2><ul><li><p>如何攻击</p></li><li><p>如何预防</p><ul><li>SameSite</li><li>验证 Referer</li><li>Token</li></ul></li></ul><h2 id="密码安全"><a href="#密码安全" class="headerlink" title="密码安全"></a>密码安全</h2><ul><li>加盐</li></ul><h1 id="Framework"><a href="#Framework" class="headerlink" title="Framework"></a>Framework</h1><hr><h2 id="通识"><a href="#通识" class="headerlink" title="通识"></a>通识</h2><ul><li><p>MVVM</p><ul><li>脏数据检测</li><li>数据劫持</li><li>Proxy 与 Obeject.defineProperty 对比</li></ul></li><li><p>Virtual Dom</p><ul><li>为什么需要 Virtual Dom</li><li>Virtual Dom 算法简述</li><li>Virtual Dom 算法实现</li></ul></li></ul><h2 id="Vue"><a href="#Vue" class="headerlink" title="Vue"></a>Vue</h2><ul><li>生命周期分析</li><li>NextTick 原理分析</li></ul><h2 id="React"><a href="#React" class="headerlink" title="React"></a>React</h2><ul><li>生命周期分析</li><li>V16 生命周期函数用法建议</li><li>setState</li><li>Redux 源码分析</li></ul><h1 id="Network"><a href="#Network" class="headerlink" title="Network"></a>Network</h1><hr><h2 id="UDP"><a href="#UDP" class="headerlink" title="UDP"></a>UDP</h2><ul><li>不可靠性</li><li>面向报文</li><li>高效</li><li>传输方式</li></ul><h2 id="TCP"><a href="#TCP" class="headerlink" title="TCP"></a>TCP</h2><ul><li><p>头部</p></li><li><p>状态机</p><ul><li>建立连接三次握手</li><li>断开链接四次握手</li></ul></li><li><p>ARQ 协议</p><ul><li>停止等待 ARQ</li><li>连续 ARQ</li><li>累计确认</li></ul></li><li><p>滑动窗口</p><ul><li>Zero 窗口</li></ul></li><li><p>拥塞处理</p><ul><li>慢开始算法</li><li>拥塞避免算法</li><li>快速重传</li><li>TCP New Ren 改进后的快恢复</li></ul></li></ul><h2 id="HTTP"><a href="#HTTP" class="headerlink" title="HTTP"></a>HTTP</h2><ul><li>Post 和 Get 的区别</li><li>常见状态码</li><li>HTTP 首部</li></ul><h2 id="HTTPS"><a href="#HTTPS" class="headerlink" title="HTTPS"></a>HTTPS</h2><ul><li>TLS</li></ul><h2 id="HTTP-2-0"><a href="#HTTP-2-0" class="headerlink" title="HTTP 2.0"></a>HTTP 2.0</h2><ul><li>二进制传输</li><li>多路复用</li><li>Header 压缩</li><li>服务端 Push</li><li>QUIC</li></ul><h2 id="DNS"><a href="#DNS" class="headerlink" title="DNS"></a>DNS</h2><h2 id="从输入-URL-到页面加载完成的过程"><a href="#从输入-URL-到页面加载完成的过程" class="headerlink" title="从输入 URL 到页面加载完成的过程"></a>从输入 URL 到页面加载完成的过程</h2><h1 id="DataStruct"><a href="#DataStruct" class="headerlink" title="DataStruct"></a>DataStruct</h1><hr><h2 id="栈"><a href="#栈" class="headerlink" title="栈"></a>栈</h2><h2 id="队列"><a href="#队列" class="headerlink" title="队列"></a>队列</h2><h2 id="链表"><a href="#链表" class="headerlink" title="链表"></a>链表</h2><h2 id="树"><a href="#树" class="headerlink" title="树"></a>树</h2><h2 id="Trie"><a href="#Trie" class="headerlink" title="Trie"></a>Trie</h2><h2 id="并查集"><a href="#并查集" class="headerlink" title="并查集"></a>并查集</h2><h2 id="堆"><a href="#堆" class="headerlink" title="堆"></a>堆</h2><h1 id="Algorithm"><a href="#Algorithm" class="headerlink" title="Algorithm"></a>Algorithm</h1><hr><h2 id="时间复杂度"><a href="#时间复杂度" class="headerlink" title="时间复杂度"></a>时间复杂度</h2><h2 id="位运算"><a href="#位运算" class="headerlink" title="位运算"></a>位运算</h2><ul><li>左移&lt;&lt;</li><li>算数右移&gt;&gt;</li><li>按位操作</li></ul><h2 id="排序"><a href="#排序" class="headerlink" title="排序"></a>排序</h2><ul><li>冒泡排序</li><li>插入排序</li><li>选择排序</li><li>归并排序</li><li>快排</li><li>堆排序</li><li>系统自带排序实现</li></ul><h2 id="链表-1"><a href="#链表-1" class="headerlink" title="链表"></a>链表</h2><ul><li>反转单向链表</li></ul><h2 id="树-1"><a href="#树-1" class="headerlink" title="树"></a>树</h2><ul><li>二叉树的先序，中序，后序遍历</li><li>中序遍历的前驱后继节点</li><li>树的深度</li></ul><h2 id="动态规划"><a href="#动态规划" class="headerlink" title="动态规划"></a>动态规划</h2><ul><li>斐波那契数列</li><li>0-1 背包问题</li><li>最长递增子序列</li></ul><h1 id="Git"><a href="#Git" class="headerlink" title="Git"></a>Git</h1><hr><h2 id="Rebase"><a href="#Rebase" class="headerlink" title="Rebase"></a>Rebase</h2><h2 id="stash"><a href="#stash" class="headerlink" title="stash"></a>stash</h2><h2 id="reflog"><a href="#reflog" class="headerlink" title="reflog"></a>reflog</h2><h2 id="reset"><a href="#reset" class="headerlink" title="reset"></a>reset</h2><h1 id="Career"><a href="#Career" class="headerlink" title="Career"></a>Career</h1><hr><h2 id="花时间补基础，读文档"><a href="#花时间补基础，读文档" class="headerlink" title="花时间补基础，读文档"></a>花时间补基础，读文档</h2><h2 id="学会搜索"><a href="#学会搜索" class="headerlink" title="学会搜索"></a>学会搜索</h2><h2 id="学点英语"><a href="#学点英语" class="headerlink" title="学点英语"></a>学点英语</h2><h2 id="画个图，想一想再做"><a href="#画个图，想一想再做" class="headerlink" title="画个图，想一想再做"></a>画个图，想一想再做</h2><h2 id="利用好下班时间学习"><a href="#利用好下班时间学习" class="headerlink" title="利用好下班时间学习"></a>利用好下班时间学习</h2><h2 id="列好-ToDo"><a href="#列好-ToDo" class="headerlink" title="列好 ToDo"></a>列好 ToDo</h2><h2 id="反思和整理"><a href="#反思和整理" class="headerlink" title="反思和整理"></a>反思和整理</h2>]]></content>
    
    <summary type="html">
    
      
      
        &lt;hr&gt;
&lt;h2 id=&quot;title-我的博客目录date-2019年04月08日-00-27-43&quot;&gt;&lt;a href=&quot;#title-我的博客目录date-2019年04月08日-00-27-43&quot; class=&quot;headerlink&quot; title=&quot;title: 我的博客目录
      
    
    </summary>
    
    
  </entry>
  
</feed>
